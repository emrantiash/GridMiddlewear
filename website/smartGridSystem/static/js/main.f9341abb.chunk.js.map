{"version":3,"sources":["assets/images/loading.gif","assets/images/desco.png","components/billingPop/desco.png","components/label/Label.style.js","components/label/Label.js","components/textField/TextField.style.js","components/textField/TextField.js","components/button/Button.style.js","components/button/Button.js","components/image/Image.js","components/loading/index.js","pages/login/Login.style.js","redux/constant/login/index.js","redux/constant/layout/index.js","redux/Action/layout/index.js","redux/constant/customer/index.js","redux/constant/registration/index.js","redux/Action/registration/index.js","components/alert/Alert.style.js","components/alert/Alert.js","pages/customer/Customer.style.js","components/toast/Toast.js","pages/customer/Customer.js","redux/Action/customer/index.js","pages/login/Login.js","redux/Action/login/index.js","pages/reg/Registration.style.js","components/radio/RadioButton.style.js","components/radio/RadioButton.js","components/dropdown/Dropdown.style.js","components/dropdown/Dropdown.js","pages/reg/Registration.js","pages/billing/Billing.style.js","redux/constant/billing/index.js","redux/Action/billing/index.js","components/billing/Billing.style.js","components/paintediv/Paintediv.js","components/billing/Billing.js","components/billing/BasicBilling.js","components/card/Card.style.js","components/card/InfoCard.js","pages/billing/Billing.js","pages/setting/Setting.style.js","redux/constant/setting/index.js","pages/setting/Setting.js","redux/Action/setting/index.js","pages/meterList/MeterList.style.js","redux/constant/meterlist/index.js","components/card/Card.js","pages/meterinfo/Meterinfo.style.js","pages/meterinfo/Meterinfo.js","components/billingPop/BillingPop.style.js","components/billingPop/PaintedComp.js","components/billingPop/BillingPop.js","pages/meterupdate/Meterupdate.style.js","pages/meterupdate/Meterupdate.js","redux/Action/meterlist/index.js","pages/meterList/MeterList.js","pages/newAccount/NewAccount.style.js","redux/constant/newaccount/index.js","pages/newAccount/NewAccount.js","redux/Action/newacount/index.js","redux/constant/operator/index.js","pages/operator/Operators.style.js","pages/operator/Operators.js","redux/Action/operator/index.js","pages/cpassword/CPassword.style.js","redux/constant/cpassword/index.js","pages/cpassword/CPassword.js","redux/Action/cpassword/index.js","redux/constant/pendingmeter/index.js","redux/Action/pendingmeter/index.js","pages/pendingMeter/PendingMeter.style.js","pages/pendingMeter/PendingMeter.js","components/navigation.js","components/layout/Layout.style.js","components/layout/Layout.js","redux/constant/home/index.js","redux/reducers/home/index.js","redux/reducers/layout/index.js","redux/reducers/customer/index.js","redux/reducers/registration/index.js","redux/reducers/billing/index.js","redux/reducers/setting/index.js","redux/reducers/meterlist/index.js","redux/reducers/login/index.js","redux/reducers/operator/index.js","redux/reducers/newaccount/index.js","redux/reducers/cpassword/index.js","redux/reducers/pendingmeter/index.js","redux/reducers/index.js","redux/sagas/home/index.js","redux/sagas/layout/index.js","utils/path/Endpoint.js","utils/network/Network.js","utils/query/Query.js","redux/sagas/selectors/index.js","redux/sagas/customer/index.js","redux/sagas/registration/index.js","redux/sagas/billing/index.js","redux/sagas/setting/index.js","redux/sagas/meterlist/index.js","redux/sagas/login/index.js","redux/sagas/operator/index.js","redux/sagas/newaccount/index.js","redux/sagas/cpassword/index.js","redux/sagas/pendingmeter/index.js","redux/sagas/index.js","redux/index.js","App.js","serviceWorker.js","index.js","components/style.js"],"names":["module","exports","styles","label","fontSize","letterSpacing","fontFamily","commonStyle","basicFont","cursor","Label","htmlFor","style","color","this","props","onClick","onclick","text","Component","area","width","backgroundColor","textField","background","borderRadius","marginBottom","height","TextField","InputGroup","FormControl","placeholder","onChange","onchange","type","borderColor","bordercolor","value","button","marginTop","focusedSize","fontWight","textTransform","BillButton","margin","Button","variant","block","ShowImage","src","resizeMode","alignSelf","Loading","state","Modal","show","className","Body","justifyContent","alignItems","marginInline","padding","require","heigth","container","display","card","adjust","top","rightBody","txtMsg","white","actionType","lOG_IN","lOG_IN_SUCCESS","lOG_IN_FAILURE","lOG_IN_MAKE_ERROR_TRUE","LOG_IN_SET_USER_NAME","LAYOUT_GET_MENU_DATA","LAYOUT_GET_MENU_DATA_SUCCESS","LAYOUT_GET_MENU_DATA_FAILURE","LAYOUT_CURRENT_INDEX","LAYOUT_GET_API","LAYOUT_GET_API_SUCCESS","LAYOUT_GET_API_FAILURE","LAYOUT_MENU","LAYOUT_MENU_BACK","currentMenu","val","payload","CUSTOMER_LIST","CUSTOMER_LIST_SUCCESS","CUSTOMER_LIST_FAILURE","CUSTOMER_DATA","CUSTOMER_UPDATE","CUSTOMER_UPDATE_SUCCESS","CUSTOMER_UPDATE_FAILURE","REGISTARTION_CREATE","REGISTARTION_CREATE_SUCCESS","REGISTARTION_CREATE_FAILURE","REGISTARTION_UPDATE","REGISTARTION_UPDATE_SUCCESS","REGISTARTION_UPDATE_FAILURE","REGISTARTION_INITIAL","registration","data","createNewUser","updateCustomer","data1","data2","header","Header","Alert","size","flexDirection","searchBox","thead","tbody","addCustomer","updateBtn","listGroup","ToastALert","Toast","onClose","close","SearchBox","React","lazy","Customer","goBilling","name","id","cdata","customerId","option","firstName","lastName","mobileNo","address","localStorage","setItem","lastname","mobile","customerData","history","push","searchNow","console","log","setState","filter","includes","searchText","target","flag","e","input","prevState","newUser","create","username","password","email","nidNumber","makeInitial","update","updateFor","JSON","stringify","makeOptions","cid","options","changeEnv","cusid","gradient","getCustomer","prevProps","msg","gradients","property","duration","angle","Container","Row","Col","md","fallback","table","Table","bordered","hover","isloading","map","index","key","ListGroup","Item","Form","Group","pattern","error","undefined","connect","customerReducer","isregloading","regReducer","getItem","loginReducer","dispatch","val1","val2","Login","makeLogin","user","login","loginFlag","setUserName","Card","Img","successMsg","red","mainframe","justfyContent","radio","BillingRadio","radio1","value1","first","radio2","value2","marginLeft","defaultChecked","v2","second","selectBtn","BillDropDown","Registration","activeTab","params","match","thisdata","parse","tabId","changeTab","ripple","isLoading","norecord","CUSTOMER_BILLING","CUSTOMER_BILLING_SUCCESS","CUSTOMER_BILLING_FAILURE","CUSTOMER_PAID_BILLING","CUSTOMER_PAID_BILLING_SUCCESS","CUSTOMER_PAID_BILLING_FAILURE","getCustomerBilling","hcolor","blueBlase","bcolor","bcolorg","green","htcolor","btcolor","black","shade","hfsize","fontfamily","letter","bletter","leftborder","rightborder","topborder","bottomborder","rootbackground","tableHeader","headerCell","border","borderBottom","borderLeft","borderRight","borderleft","lineheight3","lineHeight","center","textAlign","left","space","PaintedDiv","backgroundcolor","fontsize","letterspacing","borderTop","textalign","title","BillingComp","billmonth","billid","issue","due","consume","normalcharge","BasicBilling","account","meter","load","clear","root","cardTitle","metertitle","meterid","meterTitle","fontWeight","cardText","textColor","orange","cardActions","buttonText","body","InfoCard","Title","Text","Billing","convertDate","d","date","Date","dd","getDate","mm","getMonth","getFullYear","yyyy","handleBack","goBack","info","billAccountId","meterNumberOnBillSlip","length","paymentWindow","billingRecordId","paymentWindowStartDay","paymentWindowEndDay","consumedUnits","billAmount","customer","billingReducer","basicInfo","updateSec","SETTING_GET_VALUE","SETTING_GET_VALUE_SUCCESS","SETTING_GET_VALUE_FAILURE","SETTING_VALUE_UPDATE","SETTING_VALUE_UPDATE_SUCCESS","SETTING_VALUE_UPDATE_FAILURE","Setting","newScreen","duplicate","showUpdate","currentClicked","currentClickedValue","duplicateName","handleInput","reprintCost","parseInt","vatInPercent","installmentOfSDrop","meterRent","sanctionLoad","pfcCharge","demandCharge","xformerLoss","postValue","getValue","striped","settingReducer","errorMsg","errorUpdate","errorUpdateMsg","headerRow","letteSpacing","optionSec","monthGroup","METER_LIST","METER_LIST_SUCCESS","METER_LIST_FAILURE","METER_LIST_UPDATE","METER_LIST_UPDATE_SUCCESS","METER_LIST_UPDATE_FAILURE","modal","menuFont","Meterinfo","aria-labelledby","onHide","onclose","class","closeButton","day","sanction","Footer","modelFont","identity","roboto","inside","zero","totalHead","total","PaintedComp","BillingPop","getYear","meter_basic","user_bill_data","billAccountAddress","substring","sanctionedLoad","responsive","MeterUpdate","customerid","billAccountType","regularBillingDay","meterLIstUpdate","billingAccountType","lastBillingDate","footer","meterlistReducer","updateMsg","MeterList","billingDetails","page","meterOptions","meterOption","meterinfo","meterInfo","meterinfoFlag","changes","meterlist","unpaidlist","unpaid","makeAllow","getMeterList","unpaidMeterBill","alterPOP","unpaidpop","meterUpdate","meterupdate","updateClose","monthlyFlag","monthFlag","tail","split","unpaiddata","cname","paramid","substr","billPaymentDueDate","getAllPaidBill","commonstyle","innercontainer","NEW_METER_POST","NEW_METER_POST_SUCCESS","NEW_METER_POST_FAILURE","createNewBillAccount","newAccount","submit","billingAccountNumberOnBillSlip","billingCategory","lastBillingDateUnitSnapshot","postNewAccount","inputs","xs","handleInputTierList","disabled","disabledFlag","success","newaccountReducer","OPERATOR_LIST","OPERATOR_LIST_SUCCESS","OPERATOR_LIST_FAILURE","OPERATOR_CREATE","OPERATOR_CREATE_SUCCESS","OPERATOR_CREATE_FAILURE","OPERATOR_DELETE","OPERATOR_DELETE_SUCCESS","OPERATOR_DELETE_FAILURE","OPERATOR_UPDATE","OPERATOR_UPDATE_SUCCESS","OPERATOR_UPDATE_FAILURE","Operators","confirmPass","confirmpass","deoEmployeeId","postOperator","deoId","deoid","updateOperator","delete","deleteOperator","cancel","onClickTabItem","getOperator","message","operatorReducer","CPASSWORD_REQUEST","CPASSWORD_REQUEST_SUCCESS","CPASSWORD_REQUEST_FAILURE","CPassword","changePassword","cpassRequest","done","cpasswordReducer","PENDING_METER_GET","PENDING_METER_GET_SUCCESS","PENDING_METER_GET_FAILURE","PENDING_UTILITY_PROVIDED_ID_GET","PENDING_UTILITY_PROVIDED_ID_GET_SUCCESS","PENDING_UTILITY_PROVIDED_ID_GET_FAILURE","PENDING_METER_APPROVED","PENDING_METER_APPROVED_SUCCESS","PENDING_METER_APPROVED_FAILURE","getPendingList","headBackground","approvedMsg","PendinMeter","onSelect","slice","changeUtility","utilityId","allowApproved","approveMeter","utility","ulength","getUtilityProvidedID","utilityProvidedId","approved","pendinmeterReducer","nav","exact","path","component","backgroundCOlor","pah","menuBackground","menuBackgroundAdmin","mainBannerAdmin","fontBody","peru","menu","letterspacingextend","menuLink","siteTitle","normal","normSize","selected","submenu","none","loginSpeech","MeterTemplate","makeCall","currentmenu","signOut","makeErrorTrue","called","fixedHeader","fixedDrawer","float","position","align","menuItem","to","layoutReducer","current","back","pendingmeter","currentIndex","getTheApiLInk","HOME_GET_MENU_DATA","HOME_GET_MENU_DATA_SUCCESS","HOME_GET_MENU_DATA_FAILURE","INITIAL_STATE","payable","getLocalStoreData","operator","combineReducers","homeReducer","action","RETURNS","APIPAYLOAD","HIERARCHIES","HIERARCHY","content","dataa","payable_billing_record_list","billing_account","billing_account_list","storage","getMenuData","call","fetch","response","json","put","homeSaga","takeEvery","layoutSaga","Endpoint","createCustomer","customerBillMeterList","getCustomerBill","addnewMeter","approvenewMeter","getPendinMeter","updateMeter","getUtilityId","cpassword","getSettingValue","postSettingValue","Network","network","getMethod","end","headers","axios","post","getMethodById","postMethod","deleteMethod","url","putMethod","singlePutMethod","getToken","select","token","customerSaga","status","h","regSaga","billingSaga","settingSaga","meterListSaga","accessToken","loginSaga","operatorSaga","newaccountSaga","cpasswordSaga","pendingMeterSaga","rootSaga","all","sagaMiddleware","createSagaMiddleware","middleware","store","createStore","applyMiddleware","run","configureStore","App","Boolean","window","location","hostname","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","then","unregister","formTile","mania","helvetica","focusedColor","mainBannerBilling","menuBackgroundBilling","lightGreen","gray","blue","lightgray","megento","lightYellow"],"mappings":"mKAAAA,EAAOC,QAAU,IAA0B,qC,oBCA3CD,EAAOC,QAAU,IAA0B,mC,wCCA3CD,EAAOC,QAAU,IAA0B,mC,qLC0B5BC,EAzBA,CAcbC,MAAQ,CAENC,SAAW,GACXC,cAAe,EACfC,WAAaC,IAAYC,UACzBC,OAASF,IAAYE,SCYVC,E,uKATP,OACI,6BACI,2BAAOC,QAAQ,YACdC,MAAK,2BAAMV,EAAOC,OAAb,IAAmBU,MAAQC,KAAKC,MAAMF,QAAQG,QAASF,KAAKC,MAAME,SAAUH,KAAKC,MAAMG,W,GANzFC,aCALjB,EAnBA,CAEXkB,KAAO,CACHC,MAAS,MACTC,gBAAkB,eAGtBC,UAAY,CACRC,WAAa,cACbC,aAAe,EAEfC,aAAe,EACfC,OAAS,GACTrB,WAAaC,IAAYC,UACzBH,cAAgB,I,iBC0BTuB,E,uKAjCP,OACI,6BAWI,kBAACC,EAAA,EAAD,CAAYjB,MAAOV,EAAOkB,MACtB,kBAACU,EAAA,EAAD,CACAC,YAAajB,KAAKC,MAAMgB,YACxBC,SAAYlB,KAAKC,MAAMkB,SACvBC,KAAMpB,KAAKC,MAAMmB,KACjBtB,MAAK,2BAAMV,EAAOqB,WAAb,IAAuBY,YAAcrB,KAAKC,MAAMqB,cACrDC,MAASvB,KAAKC,MAAMsB,c,GArBhBlB,aCaTjB,EAhBA,CAEXoC,OAAS,CACLC,UAAY,GAGZnC,SAAWG,IAAYiC,YACvBnC,cAAgB,EAEhBC,WAAaC,IAAYC,UACzBiC,UAAY,OACZhB,aAAe,EACfiB,cAAgB,c,QCUTC,E,uKAhBP,OACI,yBAAK/B,MAAO,CAACgC,OAAO,SAMpB,kBAACC,EAAA,EAAD,CAAQC,QAAShC,KAAKC,MAAM+B,QAASlC,MAAK,2BAAMV,EAAOoC,QAAb,IAAoBjB,MAAQP,KAAKC,MAAMM,MAC7EM,OAASb,KAAKC,MAAMY,OAAOd,MAAMC,KAAKC,MAAMF,QAAQkC,OAAK,EACzD/B,QAASF,KAAKC,MAAME,SAAUH,KAAKC,MAAMG,W,GAZhCC,a,kBCSV6B,E,uKAVP,OAEQ,yBAAKC,IAAKnC,KAAKC,MAAMkC,IACrBrC,MAAO,CAACS,MAAMP,KAAKC,MAAMM,MAAMM,OAASb,KAAKC,MAAMY,OAAOuB,WAAa,SAASC,UAAY,gB,GALpFhC,aC+CTiC,E,kDA1CX,WAAYrC,GAAO,IAAD,8BACd,cAAMA,IACDsC,MAAQ,GAFC,E,qDASd,OACI,yBAAKzC,MAAO,CAAG2B,UAAW,MACrB,kBAACe,EAAA,EAAD,CAAQC,KAAMzC,KAAKC,MAAMwC,KAO1BC,UAAU,gBACV5C,MAAO,CAAG2B,UAAW,KAIZ,kBAACe,EAAA,EAAMG,KAAP,CAAY7C,MAAO,CAACU,gBAAkB,cACtCoC,eAAiB,SACjBC,WAAa,SACbC,aAAe,GACfC,QAAU,KAGV,kBAAC,EAAD,CAAWZ,IAAKa,EAAQ,KACxBzC,MAAS,MACT0C,OAAU,Y,GAjCb5C,aCmCPjB,EAvCC,CAEZ8D,UAAY,CACRC,QAAQ,OACR5C,MAAQ,OACRM,OAAS,QAET+B,eAAiB,SACjBC,WAAa,UAGjBO,KAAO,CACH7C,MAAO,QACPC,gBAAkB,cAClBsB,OAAS,QAKbuB,OAAQ,CACFxC,OAAQ,OACRN,MAAQ,KAEd+C,IAAM,GAGNC,UAAY,CACR/C,gBAAkB,UAClBK,OAAS,OACTN,MAAQ,QAGZiD,OAAS,CACLzD,MAAQN,IAAYM,MAAM0D,MAC1BlE,cAAgB,I,QC3BTmE,EATI,CAEhBC,OAAS,SACTC,eAAiB,iBACjBC,eAAiB,iBACjBC,uBAAyB,yBACzBC,qBAAuB,wBCN1B,IAceL,EAdI,CAEfM,qBAAwB,uBACxBC,6BAA+B,+BAC/BC,6BAA+B,+BAC/BC,qBAAuB,uBACvBC,eAAiB,iBACjBC,uBAAyB,yBACzBC,uBAAyB,yBACzBC,YAAe,cACfC,iBAAmB,oBCMhB,SAASC,EAAYC,GAExB,MAAM,CACFtD,KAAOsC,EAAWa,YAClBI,QAAUD,G,YCTHhB,EAXI,CAEfkB,cAAgB,gBAChBC,sBAAwB,wBACxBC,sBAAwB,wBACxBC,cAAgB,gBAChBC,gBAAmB,kBACnBC,wBAA0B,0BAC1BC,wBAA0B,2BCR9B,IAYexB,EAZI,CAEfyB,oBAAuB,sBACvBC,4BAA8B,8BAC9BC,4BAA8B,8BAC9BC,oBAAsB,sBACtBC,4BAA8B,8BAC9BC,4BAA8B,8BAC9BC,qBAAuB,wBCLpB,SAASC,EAAaC,GACzB,MAAO,CACHvE,KAAOsC,EAAW+B,sBAInB,SAASG,EAAcD,GAC1B,MAAO,CACHvE,KAAOsC,EAAWyB,oBAClBR,QAAUgB,GAIX,SAASE,EAAeC,EAAMC,GACjC,MAAM,CACF3E,KAAOsC,EAAW4B,oBAClBX,QAAU,CAACmB,EAAMC,I,kECPV3G,EAVA,CACX4G,OAAS,CACL1G,SAAW,GACXE,WAAaC,IAAYC,UACzBH,cAAgB,EAChBmB,WAAajB,IAAYM,MAAMiG,OAC/BjG,MAAQ,YCUDkG,E,uKAVP,OACI,6BACI,kBAACC,EAAA,EAAD,CAAOlE,QAAShC,KAAKC,MAAM+B,QAAWlC,MAAK,2BAAMV,EAAO4G,QAAb,IAAqBzF,MAAQP,KAAKC,MAAMM,MAAMjB,SAAWU,KAAKC,MAAMkG,QAC3GnG,KAAKC,MAAMG,W,GANVC,aC6CNjB,EAhDD,CAEV8D,UAAY,CAERkD,cAAgB,SAChBvF,OAAS,SAKbwF,UAAY,CACRlD,QAAU,OACVP,eAAiB,WACjBP,UAAW,YAGfiE,MAAQ,CACJ9F,gBAAgB,UAChBT,MAAM,SAGVwG,MAAQ,CACJ/G,WAAaC,IAAYC,UACzBJ,SAAW,GACXwC,OAAS,IAIb0E,YAAc,CACV/E,UAAa,IAEjBgF,UAAY,CACR3E,OAAS,EACTqB,QAAU,QAEduD,UAAY,CACRnG,MAAQ,MACRC,gBAAgB,cAChBT,MAAQ,SAEZJ,OAAS,CACLA,OAASF,IAAYE,S,SC1BdgH,E,uKAZP,OACI,kBAACC,EAAA,EAAD,CAAO9G,MAAO,CAACS,MAAM,MAAMC,gBAAgB,eAC3CqG,QAAS7G,KAAKC,MAAM6G,OAEpB,kBAACF,EAAA,EAAMX,OAAP,CAAcnG,MAAO,CAACU,gBAAgB,cAAcT,MAAM,YACxD,4BAAQ2C,UAAU,WAAW1C,KAAKC,MAAMG,Y,GAP7BC,aCYlB0G,EAAYC,IAAMC,MAAK,kBAAM,iCAK9BC,G,kDACF,WAAYjH,GAAO,IAAD,8BACd,cAAMA,IAmDVkH,UAAY,SAACC,GACT,IAAMC,EAAK,EAAK9E,MAAM+E,MAAMC,WAExBC,EAAS,CACT,GAAO,EAAKjF,MAAM+E,MAAMC,WACxB,KAAS,EAAKhF,MAAM+E,MAAMG,UAC1B,SAA2C,OAA9B,EAAKlF,MAAM+E,MAAMI,SAAoB,IAAM,EAAKnF,MAAM+E,MAAMI,SACzE,OAAW,EAAKnF,MAAM+E,MAAMK,SAC5B,QAAY,EAAKpF,MAAM+E,MAAMM,SAKjCC,aAAaC,QAAQ,OAAON,EAAOJ,KAAO,IAAOI,EAAOO,UACxDF,aAAaC,QAAQ,UAAWN,EAAOI,SACvCC,aAAaC,QAAQ,SAAUN,EAAOQ,QACtCH,aAAaC,QAAQ,aAAcN,EAAOH,IACrB,eAATD,GAAwB,EAAKnH,MAAMgI,aAAaT,GAE3D,EAAKvH,MAAMwE,YAAY2C,GACJ,eAATA,EAAwB,EAAKnH,MAAMiI,QAAQC,KAAK,cAAcd,GACtC,EAAKpH,MAAMiI,QAAQC,KAAK,cAAcd,IAzE3D,EA4ElBe,UAAY,SAAC7G,GAOT8G,QAAQC,IAAI/G,GAEZ,EAAKgH,SAAS,CACV5C,KAAO,EAAKpD,MAAMoD,KAAK6C,QAAO,SAAA7C,GAAI,OAAKA,EAAK8B,UAAUgB,SAASlH,IAAUoE,EAAKgC,SAASc,SAASlH,SAtFtF,EA0FlBmH,WAAa,SAAChE,GAET,IAAInD,EAAQmD,EAAIiE,OAAOpH,MACxB,EAAKgH,SAAS,CACVK,KAAiB,KAAVrH,IACT,SAACsH,GAAD,OAAK,EAAKT,UAAU7G,OA/FR,EAkGlBuH,MAAQ,SAACD,EAAEzB,GACP,IAAI7F,EAAQsH,EAAEF,OAAOpH,MACrB,EAAKgH,UACH,SAAAQ,GAAS,MAAK,CACZC,QAAQ,2BACHD,EAAUC,SADR,kBAEJ5B,EAAO7F,SAxGA,EA6GlB0H,OAAS,WAEJ,IAAMzB,EAAS,CACd,SAAY,EAAKjF,MAAMyG,QAAQE,SAC/B,SAAY,EAAK3G,MAAMyG,QAAQG,SAC/B,UAAa,EAAK5G,MAAMyG,QAAQvB,UAChC,SAAY,EAAKlF,MAAMyG,QAAQtB,SAC/B,MAAS,EAAKnF,MAAMyG,QAAQI,MAC5B,QAAW,EAAK7G,MAAMyG,QAAQpB,QAC9B,SAAY,EAAKrF,MAAMyG,QAAQrB,SAC/B,UAAa,EAAKpF,MAAMyG,QAAQK,WAElChB,QAAQC,IAAId,GACX,EAAKvH,MAAM2F,cAAc4B,GACzB,EAAK8B,eA3HQ,EA8HfA,YAAc,WAEV,EAAKf,SAAS,CACVgB,QAAS,EACTP,QAAS,CACRvB,UAAW,GACXC,SAAU,GACV0B,MAAO,GACPxB,QAAS,GACTD,SAAU,GACV0B,UAAW,GACXH,SAAU,GACVC,SAAU,OA1IJ,EAgJlBK,UAAY,SAAC7D,GACTkC,aAAaC,QAAQ,eAAe2B,KAAKC,UAAU/D,IACnD,EAAK1F,MAAMwE,YAAY,0BAEvB,EAAKxE,MAAMiI,QAAQC,KAAK,WApJV,EAwJlBwB,YAAc,SAACtC,EAAGC,GACd,EAAKiB,SAAS,CACVnI,KAAO,aAAakH,EAAMG,UAC1BmC,IAAMvC,EACNC,MAAQA,EACRuC,SAAU,KA7JA,EAgKlBC,UAAY,WACR,EAAK7J,MAAMyF,eACX,EAAK6C,SAAS,CACVnI,KAAO,oBACPyJ,SAAU,EACVN,QAAS,EACTQ,MAAQ,EAAKxH,MAAMqH,IACnBZ,QAAS,CACHvB,UAAW,EAAKlF,MAAM+E,MAAMG,UAC5BC,SAAU,EAAKnF,MAAM+E,MAAMI,SAC3B0B,MAAO,EAAK7G,MAAM+E,MAAM8B,MACxBxB,QAAS,EAAKrF,MAAM+E,MAAMM,QAC1BD,SAAU,EAAKpF,MAAM+E,MAAMK,SAC3B0B,UAAW,EAAK9G,MAAM+E,MAAM+B,UAC5BH,SAAU,EAAK3G,MAAM+E,MAAM4B,aA9KvB,EAmLdK,OAAS,WACL,IAAMQ,EAAQ,EAAKxH,MAAMqH,IACnBpC,EAAS,CACb,WAAe,EAAKjF,MAAMqH,IAC1B,SAAY,EAAKrH,MAAMyG,QAAQE,SAC/B,UAAa,EAAK3G,MAAMyG,QAAQvB,UAChC,SAAY,EAAKlF,MAAMyG,QAAQtB,SAC/B,MAAQ,EAAKnF,MAAMyG,QAAQI,MAC3B,QAAW,EAAK7G,MAAMyG,QAAQpB,QAC9B,SAAY,EAAKrF,MAAMyG,QAAQrB,SAC/B,UAAa,EAAKpF,MAAMyG,QAAQK,WAInC,EAAKpJ,MAAM4F,eAAe2B,EAAOuC,GACjC,EAAKT,eAhMR,EAAK/G,MAAQ,CACTnC,KAAQ,mBACRyJ,SAAU,EACVN,QAAS,EACTK,IAAM,EACNtC,MAAQ,GACR0C,SAAW,CAEV,CAAC,UAAU,YAEZpB,MAAO,EACPjD,KAAO,GACPqD,QAAS,CACLvB,UAAW,GACXC,SAAU,GACV0B,MAAO,GACPxB,QAAS,GACTD,SAAU,GACV0B,UAAW,GACXH,SAAU,GACVC,SAAU,KAtBJ,E,gEA+BdnJ,KAAKC,MAAMgK,cACXjK,KAAKC,MAAMwE,YAAY,U,yCAGRyF,EAAWnB,GAEZmB,EAAUC,MAAQnK,KAAKC,MAAMkK,KAAOnK,KAAKC,MAAMgK,gB,+BAgKxD,IAAD,OAIJ,OACI,6BACK,kBAAC,WAAD,CACCG,UAAYpK,KAAKuC,MAAMyH,SACvBK,SAAS,aACTC,SAAW,IACXC,MAAM,UAET,kBAACC,EAAA,EAAD,KACC,kBAACC,EAAA,EAAD,KACI,kBAACC,EAAA,EAAD,CAAMC,GAAI,GAEN,yBAAK7K,MAAOV,EAAOiH,WACnB,kBAAC,WAAD,CAAUuE,SAAU,4CACpB,kBAAC7D,EAAD,CACA1H,MAAQ,oBAER8B,SAAY,SAACuD,GAAD,OAAO,EAAKgE,WAAWhE,QAInC,yBAAK5E,MAAOV,EAAO8D,WACnB,yBAAKpD,MAAOV,EAAOyL,OACnB,kBAACC,EAAA,EAAD,CAAQC,UAAQ,EAACC,OAAK,EAAElL,MAAO,CAACa,aAAe,KACrD,+BACE,wBAAIb,MAAOV,EAAOkH,OAChB,iCAEA,oCACA,qCACA,sCACA,2CAIJ,2BAAOxG,MAAOV,EAAOmH,OAMnBvG,KAAKC,MAAMgL,UACX,kBAAC,EAAD,CAASxI,KAAMzC,KAAKC,MAAMgL,YAG9BjL,KAAKuC,MAAMoD,KAAKuF,KAAI,SAACvF,EAAKwF,GAAN,OAChB,wBAAIC,IAAKD,EAAOrL,MAAOV,EAAOO,OAC9BO,QAAS,kBAAI,EAAKyJ,YAAYhE,EAAK4B,WAAW5B,KAE1C,4BAAKwF,EAAM,GACX,4BAAKxF,EAAK8B,WACV,4BAAK9B,EAAKyD,OACV,4BAAKzD,EAAKgC,UACV,4BAAKhC,EAAKuD,mBAWd,kBAACwB,EAAA,EAAD,CAAMC,GAAI,GAEN3K,KAAKuC,MAAMsH,QACX,yBAAK/J,MAAOV,EAAOoH,aACnB,kBAAC,EAAD,CAAWpG,KAAQJ,KAAKuC,MAAMnC,KAAM+F,KAAQ,GAC5C5F,MAAQ,QACR,kBAAC8K,EAAA,EAAD,KACI,kBAACA,EAAA,EAAUC,KAAX,CAAgBxL,MAAOV,EAAOsH,UAC9BxG,QAAS,kBAAI,EAAK4J,cADlB,IAEE,uBAAGhK,MAAOV,EAAOO,QAAjB,YACF,kBAAC0L,EAAA,EAAUC,KAAX,CAAgBxL,MAAOV,EAAOsH,UAC7BxG,QAAS,SAACmH,GAAD,OAAM,EAAKF,UAAU,gBAC9B,uBAAGrH,MAAOV,EAAOO,QAAjB,oBACD,kBAAC0L,EAAA,EAAUC,KAAX,CAAgBxL,MAAOV,EAAOsH,UAC7BxG,QAAS,SAACmH,GAAD,OAAM,EAAKF,UAAU,qBAC9B,uBAAGrH,MAAOV,EAAOO,QAAjB,0BAMT,yBAAKG,MAAOV,EAAOoH,aAGnB,kBAAC,EAAD,CAAWpG,KAAQJ,KAAKuC,MAAMnC,KAAMG,MAAQ,QAC5C,kBAACgL,EAAA,EAAD,CAAMzL,MAAO,CAACU,gBAAgB,gBAE9B,kBAAC+K,EAAA,EAAKC,MAAN,KACA,kBAAC,EAAD,CAAOpL,KAAK,gBACZ,kBAAC,EAAD,CAAYa,YAAc,GACzBM,MAAWvB,KAAKuC,MAAMyG,QAAQvB,UAC/BtG,SAAU,SAAC0H,GAAD,OAAK,EAAKC,MAAMD,EAAE,iBAG5B,kBAAC0C,EAAA,EAAKC,MAAN,KACA,kBAAC,EAAD,CAAOpL,KAAK,eACZ,kBAAC,EAAD,CAAYa,YAAc,GACzBM,MAAWvB,KAAKuC,MAAMyG,QAAQtB,SAC/BvG,SAAU,SAAC0H,GAAD,OAAK,EAAKC,MAAMD,EAAE,gBAG5B,kBAAC0C,EAAA,EAAKC,MAAN,KACA,kBAAC,EAAD,CAAOpL,KAAK,gBACZ,kBAAC,EAAD,CAAYa,YAAc,GACzBM,MAAUvB,KAAKuC,MAAMyG,QAAQI,MAC9BjI,SAAU,SAAC0H,GAAD,OAAK,EAAKC,MAAMD,EAAE,aAG5B,kBAAC0C,EAAA,EAAKC,MAAN,KACA,kBAAC,EAAD,CAAOpL,KAAK,aACZ,kBAAC,EAAD,CAAYa,YAAc,GACzBM,MAAUvB,KAAKuC,MAAMyG,QAAQpB,QAC9BzG,SAAU,SAAC0H,GAAD,OAAK,EAAKC,MAAMD,EAAE,eAG5B,kBAAC0C,EAAA,EAAKC,MAAN,KACA,kBAAC,EAAD,CAAOpL,KAAK,iBACZ,kBAAC,EAAD,CAAYa,YAAc,GAC1BM,MAAUvB,KAAKuC,MAAMyG,QAAQrB,SAC7B8D,QAAU,uBAAsBrK,KAAK,SAASsK,MAAO,wBACzCvK,SAAU,SAAC0H,GAAD,OAAK,EAAKC,MAAMD,EAAE,gBAGxC,kBAAC0C,EAAA,EAAKC,MAAN,KACA,kBAAC,EAAD,CAAOpL,KAAK,gBACZ,kBAAC,EAAD,CAAYa,YAAc,GAC1BM,MAAWvB,KAAKuC,MAAMyG,QAAQK,UAC9BlI,SAAU,SAAC0H,GAAD,OAAK,EAAKC,MAAMD,EAAE,iBAG5B,kBAAC0C,EAAA,EAAKC,MAAN,KACA,kBAAC,EAAD,CAAOpL,KAAK,cACZ,kBAAC,EAAD,CAAYa,YAAc,GAC1BM,MAAWvB,KAAKuC,MAAMyG,QAAQE,SAC9B/H,SAAU,SAAC0H,GAAD,OAAK,EAAKC,MAAMD,EAAE,gBAG5B,kBAAC0C,EAAA,EAAKC,MAAN,KACA,kBAAC,EAAD,CAAOpL,KAAK,cACZ,kBAAC,EAAD,CAAYa,YAAc,SAASG,KAAK,WAAWD,SAAU,SAAC0H,GAAD,OAAK,EAAKC,MAAMD,EAAE,gBAGnF,kBAAC0C,EAAA,EAAKC,MAAN,KAEKxL,KAAKuC,MAAMgH,OAeZ,yBAAKzJ,MAAOV,EAAOqH,WACnB,kBAAC,EAAD,CACAzE,QAAW,SACX5B,KAAO,WACPG,MAAQ,OACRJ,QAAS,kBAAI,EAAKoJ,YAElB,kBAAC,EAAD,CACAvH,QAAW,UACX5B,KAAO,SACPG,MAAS,GACTJ,QAAS,kBAAI,EAAKmJ,kBAzBlB,yBAAKxJ,MAAOV,EAAOqH,WACnB,kBAAC,EAAD,CACArG,KAAO,UACNG,MAAS,IACVJ,QAAS,kBAAI,EAAK8I,YAElB,kBAAC,EAAD,CACAjH,QAAW,UACX5B,KAAO,SAEPD,QAAS,kBAAI,EAAKmJ,oBA8BlB,kBAAC,EAAD,CACAlJ,KAAQJ,KAAKC,MAAMkK,e,gDA9VHlK,EAAMsC,GAClC,OAAgB,OAAbtC,EAAM0F,WAA4BgG,IAAb1L,EAAM0F,MAAoBpD,EAAMqG,KAClD,CACFjD,KAAO1F,EAAM0F,MAId,S,GAjDYtF,aA0bRuL,oBApCf,SAAyBrJ,GACxB,MAAO,CAEA0I,UAAY1I,EAAMsJ,gBAAgBZ,UAClCa,aAAevJ,EAAMwJ,WAAWd,UAChCtF,KAAOpD,EAAMsJ,gBAAgBlG,KAC7BK,OAAU6B,aAAamE,QAAQ,SAAWnE,aAAamE,QAAQ,UAAYzJ,EAAM0J,aAAatG,KAC9FwE,IAAM5H,EAAMwJ,WAAW5B,QAI/B,SAA4B+B,GAC3B,MAAO,CACNjC,YAAc,WACJiC,ECrbF,CACF9K,KAAOsC,EAAWkB,iBDublBqD,aAAe,SAACvD,GACZwH,ECnbD,CACH9K,KAAOsC,EAAWqB,cAClBJ,QDib0BD,KAE1BD,YAAc,SAACC,GACXwH,EAASzH,EAAYC,KAEzBkB,cAAgB,SAAClB,GACbwH,EAAStG,EAAclB,KAE3BmB,eAAiB,SAACsG,EAAKC,GACnBF,EAASrG,EAAesG,EAAKC,KAEjC1G,aAAe,WACPwG,EAASxG,SAMVkG,CAA6C1E,IE7btDmF,G,kDACF,WAAYpM,GAAO,IAAD,8BACd,cAAMA,IA0BViJ,SAAW,SAACL,GACR,IAAItH,EAAQsH,EAAEF,OAAOpH,MACrB,EAAKgH,SAAS,CACVW,SAAW3H,KA9BD,EAkClB4H,SAAW,SAACN,GACR,IAAItH,EAAQsH,EAAEF,OAAOpH,MACrB,EAAKgH,SAAS,CACVY,SAAW5H,KArCD,EAyClB+K,UAAY,WAER,IAAIC,EAAO,EAAKhK,MAAM2G,SAGlB1B,EAAS,CACT0B,SAAWqD,EACXpD,SAJO,EAAK5G,MAAM4G,UAMtBtB,aAAaC,QAAQ,UAAUyE,GACJ,KAAxB,EAAKhK,MAAM2G,UAA2C,KAAxB,EAAK3G,MAAM4G,SAExC,EAAKZ,SAAS,CACVmD,OAAQ,IAIZ,EAAKnD,SAAS,CACVmD,OAAQ,IAGhB,EAAKzL,MAAMuM,MAAMhF,GACd,EAAKvH,MAAMwM,YAEV,EAAKxM,MAAMyM,YAAYH,GACvB,EAAKtM,MAAMwE,YAAY,SAG3B,EAAKxE,MAAMiI,QAAQC,KAAK,MAnExB,EAAK5F,MAAQ,CACT2G,SAAW,GACXC,SAAW,GACXuC,OAAQ,EACR1B,SAAW,CAKZ,CAAC,UAAU,aAXA,E,gEAiBdhK,KAAKC,MAAMwE,YAAY,W,+BA0DlB,IAAD,OAEJ,OACI,6BACA,kBAAC,WAAD,CACI2F,UAAYpK,KAAKuC,MAAMyH,SACvBK,SAAS,aACTC,SAAW,IACXC,MAAM,UAEV,yBAAMzK,MAAOV,EAAO8D,WACpB,6BACQ,kBAACyJ,EAAA,EAAD,CAAM7M,MAAOV,EAAOgE,MAEI,IAApBpD,KAAKC,MAAM2I,MAAe5I,KAAKuC,MAAMmJ,MAC8B,KAAnE,0BAAM5L,MAAOV,EAAOoE,QAApB,iCAGAxD,KAAKuC,MAAMmJ,MACX,0BAAM5L,MAAOV,EAAOoE,QAApB,0BAA4D,KAI/D,kBAACmJ,EAAA,EAAKhK,KAAN,KACD,kBAACgK,EAAA,EAAKC,IAAN,CAAUlK,UAAU,cAAcP,IAAKa,EAAQ,KAAkClD,MAAO,CAACS,MAAO,IAAIuB,OAAS,GAAGL,UAAY,KAE5H,kBAAC,EAAD,CAAOrB,KAAK,YAAYL,MAAQ,UAEhC,kBAAC,EAAD,CAAWkB,YAAa,UAAUE,SAAU,SAACuD,GAAD,OAAO,EAAKwE,SAASxE,MAEjE,kBAAC,EAAD,CAAOtE,KAAK,WAAWL,MAAQ,UAC/B,kBAAC,EAAD,CAAWkB,YAAa,UAAUG,KAAK,WAAWD,SAAU,SAACuD,GAAD,OAAO,EAAKyE,SAASzE,MAEjF,kBAAC,EAAD,CAAY1C,QAAQ,OACZjC,MAAQ,QAAQQ,MAAS,MACzBH,KAAO,WAAWD,QAASH,KAAKsM,gBAOhD,kBAAC,EAAD,CAAS7J,KAAMzC,KAAKC,MAAMgL,kB,GAtHlB5K,aA0JLuL,oBA1Bf,SAAyBrJ,GACxB,MAAO,CACA0I,UAAY1I,EAAM0J,aAAahB,UAChCtF,KAAQpD,EAAM0J,aAAatG,KAC3B+F,MAAQnJ,EAAM0J,aAAaP,MAC3Be,UAAYlK,EAAM0J,aAAaQ,UAC/B7D,KAAOrG,EAAM0J,aAAarD,SAIjC,SAA4BsD,GAC3B,MAAO,CACAM,MAAQ,SAAC9H,GACJwH,EC1JH,CACF9K,KAAOsC,EAAWC,OAClBgB,QDwJoBD,KAGpBD,YAAc,SAACC,GACXwH,EAASzH,EAAYC,KAGzBgI,YAAc,SAAChI,GACXwH,EC3JF,CACF9K,KAAOsC,EAAWK,qBAClBY,QDyJyBD,QAKlBkH,CAA6CS,IExJ7CjN,GAlBA,CAEbyN,WAAa,CACXpL,UAAY,GACZ1B,MAAQN,IAAYM,MAAM+M,IAC1BtN,WAAaC,IAAYC,WAE3BwD,UAAY,GAGZ6J,UAAY,CACVxM,MAAO,IACPM,OAAQ,IACRiB,OAAQ,SCIG1C,GAjBA,CAEb8D,UAAY,CACRzB,UAAY,GACZb,aAAe,GACfuC,QAAS,OACT6J,cAAgB,iBAEpBC,MAAQ,CAEN1N,cAAgB,ICkBL2N,G,kDAvBb,WAAYjN,GACX,uCACOA,G,qDAIN,OACI,yBAAKH,MAAOV,GAAO8D,WACd,2BAAO9B,KAAK,QAAQgG,KAAMpH,KAAKC,MAAMkN,OAAQ5L,MAAOvB,KAAKC,MAAMmN,OAAQlM,SAAUlB,KAAKC,MAAMkB,WAAY,0BAAMrB,MAAOV,GAAO6N,OAApB,UAAqCjN,KAAKC,MAAMoN,MAAhD,KAExG,2BAAOjM,KAAK,QAAQgG,KAAMpH,KAAKC,MAAMqN,OAAQ/L,MAAOvB,KAAKC,MAAMsN,OAAQzN,MAAO,CAAC0N,WAAY,IAC3FC,eAAgBzN,KAAKC,MAAMyN,GAC3BxM,SAAUlB,KAAKC,MAAMkB,WACrB,0BAAMrB,MAAOV,GAAO6N,OAApB,UACajN,KAAKC,MAAM0N,OADxB,U,GAfctN,aCaZjB,GAhBA,CAEb8D,UAAY,CACRzB,UAAY,GACZb,aAAe,GACfuC,QAAS,OACT6J,cAAgB,iBAEpBY,UAAY,CACRrN,MAAQ,IACRM,OAAS,GACTrB,WAAaC,IAAYC,YCYhBmO,G,uKAhBX,OACI,yBAAK/N,MAAOV,GAAO8D,WACf,4BAAQpD,MAAOV,GAAOwO,UAAW1M,SAAUlB,KAAKC,MAAMkB,UACtD,4BAAQI,MAAM,IAAd,UACA,4BAAQA,MAAM,KAAd,QACA,4BAAQA,MAAM,KAAd,QACA,4BAAQA,MAAM,KAAd,QACA,4BAAQA,MAAM,KAAd,c,GAVelB,aCQrByN,G,kDACF,WAAY7N,GAAO,IAAD,8BACd,cAAMA,IAkDZqJ,YAAc,WACZ,EAAKf,SAAS,CACZgB,QAAS,EACTP,QAAS,CACPvB,UAAW,GACXC,SAAU,GACV0B,MAAO,GACPxB,QAAS,GACTD,SAAU,GACV0B,UAAW,GACXH,SAAU,GACVC,SAAU,OA9DI,EAoEnBL,MAAQ,SAACD,EAAEzB,GACV,IAAI7F,EAAQsH,EAAEF,OAAOpH,MACrB,EAAKgH,UACH,SAAAQ,GAAS,MAAK,CACZC,QAAQ,2BACHD,EAAUC,SADR,kBAEJ5B,EAAO7F,SA1EI,EAgFnB0H,OAAS,WAEP,IAAMzB,EAAS,CACd,SAAY,EAAKjF,MAAMyG,QAAQE,SAC/B,SAAY,EAAK3G,MAAMyG,QAAQG,SAC/B,UAAa,EAAK5G,MAAMyG,QAAQvB,UAChC,SAAY,EAAKlF,MAAMyG,QAAQtB,SAC/B,MAAS,EAAKnF,MAAMyG,QAAQI,MAC5B,QAAW,EAAK7G,MAAMyG,QAAQpB,QAC9B,SAAY,EAAKrF,MAAMyG,QAAQrB,SAC/B,UAAa,EAAKpF,MAAMyG,QAAQK,WAEjC,EAAKpJ,MAAM2F,cAAc4B,IA5FR,EA+FnB+B,OAAS,WACR,IAAMQ,EAAQ,EAAKxH,MAAMwH,MACnBvC,EAAS,CACb,WAAe,EAAKjF,MAAMwH,MAC1B,SAAY,EAAKxH,MAAMyG,QAAQE,SAC/B,UAAa,EAAK3G,MAAMyG,QAAQvB,UAChC,SAAY,EAAKlF,MAAMyG,QAAQtB,SAC/B,MAAS,EAAKnF,MAAMyG,QAAQI,MAC5B,QAAW,EAAK7G,MAAMyG,QAAQpB,QAC9B,SAAY,EAAKrF,MAAMyG,QAAQrB,SAC/B,UAAa,EAAKpF,MAAMyG,QAAQK,WAInC,EAAKpJ,MAAM4F,eAAe2B,EAAOuC,IA3G5B,EAAKxH,MAAQ,CACTwL,UAAY,EACZxE,QAAS,EACTQ,MAAQ,EACRf,QAAS,CACPvB,UAAW,GACXC,SAAU,GACV0B,MAAO,GACPxB,QAAS,GACTD,SAAU,GACV0B,UAAW,GACXH,SAAU,GACVC,SAAU,KAdF,E,gEAsBhBnJ,KAAKC,MAAMyF,eADM,IAEAsI,EAAahO,KAAKC,MAA3BgO,MAASD,OACjB3F,QAAQC,IAAI,oBAAoB0F,EAAO3G,IACvC,IAAM1B,EAAOkC,aAAamE,QAAQ,gBAC5BkC,EAAWzE,KAAK0E,MAAMxI,GAEd,MAAZqI,EAAO3G,GAETrH,KAAKuI,SAAS,CACZgB,QAAS,EACTQ,MAAQmE,EAAS3G,WACjByB,QAAS,CACHzB,WAAa2G,EAAS7G,GACtBI,UAAWyG,EAASzG,UACpBC,SAAUwG,EAASxG,SACnB0B,MAAO8E,EAAS9E,MAChBxB,QAASsG,EAAStG,QAClBD,SAAUuG,EAASvG,SACnB0B,UAAW6E,EAAS7E,UACpBH,SAAUgF,EAAShF,YAK3BlJ,KAAKsJ,gB,+BAmEA,IAAD,OAEN,OADAjB,QAAQC,IAAItI,KAAKuC,MAAMgH,QAErB,6BACG,yBAAK7G,UAAU,aACR,kBAAC,OAAD,CAAMqL,UAAW/N,KAAKuC,MAAMwL,UAAW7M,SAAU,SAACkN,GAAD,OAAS,EAAKC,UAAUD,IAAQE,QAAM,IAGxF,0BAAMxO,MAAO,CAAC0N,WAAY,GAAGzN,MAAQ,MAAMR,cAAc,MAAOS,KAAKC,MAAMkK,KAC1E,6BAASrK,MAAO,CAAC2B,UAAW,IACxB,yBAAK3B,MAAgC,IAAzBE,KAAKuC,MAAMwL,UAAkB,CAAC5K,QAAU,SAAW,CAACA,QAAU,SACtE,yBAAKrD,MAAOV,GAAO2N,WACf,kBAAC,EAAD,CAAO3M,KAAM,eACb,kBAAC,EAAD,CACAf,MAAM,cACNkC,MAAWvB,KAAKuC,MAAMyG,QAAQvB,UAC7BtG,SAAU,SAAC0H,GAAD,OAAK,EAAKC,MAAMD,EAAE,gBAC7B,kBAAC,EAAD,CAAOzI,KAAK,cACZ,kBAAC,EAAD,CACAf,MAAM,aACNkC,MAAWvB,KAAKuC,MAAMyG,QAAQtB,SAC9BvG,SAAU,SAAC0H,GAAD,OAAK,EAAKC,MAAMD,EAAE,eAC5B,kBAAC,EAAD,CAAOzI,KAAK,UACZ,kBAAC,EAAD,CACAf,MAAM,QACNkC,MAAWvB,KAAKuC,MAAMyG,QAAQI,MAC7BjI,SAAU,SAAC0H,GAAD,OAAK,EAAKC,MAAMD,EAAE,YAC7B,kBAAC,EAAD,CAAOzI,KAAK,YACZ,kBAAC,EAAD,CACCf,MAAM,UACNkC,MAAWvB,KAAKuC,MAAMyG,QAAQpB,QAC9BzG,SAAU,SAAC0H,GAAD,OAAK,EAAKC,MAAMD,EAAE,cAC7B,kBAAC,EAAD,CAAOzI,KAAK,YACZ,kBAAC,EAAD,CACAf,MAAM,UACNkC,MAAWvB,KAAKuC,MAAMyG,QAAQrB,SAC9B8D,QAAU,uBACVrK,KAAK,SACLsK,MAAO,wBACPvK,SAAU,SAAC0H,GAAD,OAAK,EAAKC,MAAMD,EAAE,eAC5B,kBAAC,EAAD,CAAOzI,KAAK,gBACZ,kBAAC,EAAD,CACAf,MAAM,eACNkC,MAAWvB,KAAKuC,MAAMyG,QAAQK,UAC9BlI,SAAU,SAAC0H,GAAD,OAAK,EAAKC,MAAMD,EAAE,gBAC5B,kBAAC,EAAD,CAAOzI,KAAK,cACZ,kBAAC,EAAD,CACAf,MAAM,aACNkC,MAAWvB,KAAKuC,MAAMyG,QAAQE,SAC7B/H,SAAU,SAAC0H,GAAD,OAAK,EAAKC,MAAMD,EAAE,eAC7B,kBAAC,EAAD,CAAOzI,KAAK,aAAY,kBAAC,EAAD,CAAYf,MAAM,YAAY+B,KAAK,WAAWD,SAAU,SAAC0H,GAAD,OAAK,EAAKC,MAAMD,EAAE,eACnG,yBAAK/I,MAAO,CAACqD,QAAU,OAAQiD,cAAgB,QAC9C,kBAAC,EAAD,CACChG,KAAMJ,KAAKuC,MAAMgH,OAAS,UAAY,SAEvCpJ,QAASH,KAAKuC,MAAMgH,OAAS,kBAAI,EAAKA,UAAW,kBAAI,EAAKN,UAC1D1I,MAASP,KAAKuC,MAAMgH,OAAS,IAAO,MAGlCvJ,KAAKuC,MAAMgH,OACX,kBAAC,EAAD,CACAvH,QAAU,OACX5B,KAAM,SAEPD,QAASH,KAAKsJ,YACd/I,MAAS,KACJ,e,GApLNF,aAuNZuL,oBArBf,SAAyBrJ,GACxB,MAAO,CACAgM,UAAYhM,EAAMwJ,WAAWwC,UAC7B5I,KAAOpD,EAAMwJ,WAAWpG,KACxBwE,IAAM5H,EAAMwJ,WAAW5B,QAG/B,SAA4B+B,GAC3B,MAAO,CACNtG,cAAgB,SAAClB,GACPwH,EAAStG,EAAclB,KAE/BmB,eAAiB,SAACsG,EAAKC,GACfF,EAASrG,EAAesG,EAAKC,KAErC1G,aAAe,WACPwG,EAASxG,SAKNkG,CAA6CkC,ICtN7C1O,GAZD,CAEVoP,SAAW,CAERrL,QAAU,OACXP,eAAiB,WCIRc,GAXI,CAEf+K,iBAAmB,mBACnBC,yBAA2B,2BAC3BC,yBAA2B,2BAC3BC,sBAAwB,wBACxBC,8BAAgC,gCAChCC,8BAAgC,iCCL7B,SAASC,GAAmBpJ,GAE/B,OADA0C,QAAQC,IAAI,UACN,CACFlH,KAAOsC,GAAW+K,iBAClB9J,QAAUgB,GCJlB,I,GA4DevG,GA5DA,CACX8D,UAAY,GAGZ8L,OAASvP,IAAYM,MAAMkP,UAC3BC,OAAS,cACTC,QAAU1P,IAAYM,MAAMqP,MAC5BC,QAAU5P,IAAYM,MAAM0D,MAC5B6L,QAAU7P,IAAYM,MAAMwP,MAC5BC,MAAQ/P,IAAYM,MAAMqP,MAC1BtC,IAAMrN,IAAYM,MAAM+M,IACxB2C,OAAS,GACTC,WAAajQ,IAAYC,UACzBiQ,OAAS,EACTC,QAAU,EACVC,WAAa,oBACbC,YAAc,oBACdC,UAAY,oBACZC,aAAe,oBAGfC,eAAiB,CACfzP,gBAAkBf,IAAYM,MAAMkP,WAEtCiB,YAAc,CAETnQ,MAAQN,IAAYM,MAAMwP,MAC1B/P,WAAaC,IAAYC,UACzBH,cAAgB,GAGpB4Q,WAAa,CAEV7Q,SAAW,GACXC,cAAgB,MAEnB6Q,OAAS,CACRC,aAAe,iBACfC,WAAa,iBACbC,YAAc,kBAEfC,WAAa,CACXF,WAAa,kBAEfG,YAAc,CACVC,WAAa,GAEjBC,OAAS,CACNC,UAAY,UAEfC,KAAO,CACJD,UAAY,QAEfE,MAAQ,CACND,KAAO,ICrBCE,I,yDA/BX,WAAY9Q,GAAO,IAAD,8BAChB,cAAMA,IACDsC,MAAQ,GAFG,E,qDAOd,OACI,yBAAKzC,MAAO,CACRS,MAAQP,KAAKC,MAAMM,MACnBM,OAASb,KAAKC,MAAMY,OACpBL,gBAAkBR,KAAKC,MAAM+Q,gBAC7BjR,MAAQC,KAAKC,MAAMF,MAEnBT,SAAWU,KAAKC,MAAMgR,SACtBzR,WAAaQ,KAAKC,MAAMyP,WACxBnQ,cAAgBS,KAAKC,MAAMiR,cAC3BZ,WAAatQ,KAAKC,MAAM4P,WACxBU,YAAcvQ,KAAKC,MAAM6P,YACzBqB,UAAYnR,KAAKC,MAAM8P,UACvBM,aAAerQ,KAAKC,MAAM+P,eAE3B,yBAAKlQ,MAAO,CAAE0N,WAAa,GAAGrK,QAAQ,OAAOiD,cAAgB,MAAMwK,UAAY5Q,KAAKC,MAAMmR,YACzF,0BAAMtR,MAAO,CAACS,MAAQ,MAAtB,IAA8BP,KAAKC,MAAMoR,MAAzC,KACErR,KAAKC,MAAM2I,KAAO,0BAAM9I,MAAO,CAACS,MAAQ,KAAtB,QAA0C,KAC9D,0BAAMT,MAAO,IAAb,IAAmBE,KAAKC,MAAMG,KAA9B,W,GA1BSC,cC8GViR,G,kDA3GX,WAAYrR,GAAO,IAAD,8BACd,cAAMA,IACDsC,MAAO,CACJ6E,KAAO,GACPQ,QAAU,IAJJ,E,gEASd5H,KAAKuI,SAAS,CACVnB,KAAOS,aAAamE,QAAQ,QAC5BpE,QAAUC,aAAamE,QAAQ,e,+BAUnC,OACI,6BACG,yBAAKlM,MAAO,CAACS,MAAO,MAAOuB,OAAQ,SAKpC,yBAAKhC,MAAO,CAACqD,QAAQ,OAAOiD,cAAc,QAE1C,yBAAKtG,MAAO,CAACS,MAAM,QACnB,kBAAC,GAAD,CAAYA,MAAO,OAAQM,OAAQ,GAAImQ,gBAAmB5R,GAAO8P,OAChEnP,MAASX,GAAO0N,IAChBsE,UAAY,OAAOH,SAAY7R,GAAOqQ,OAAQC,WAActQ,GAAOsQ,WACnEwB,cAAiB9R,GAAOwQ,QACxBG,UAAa3Q,GAAO2Q,UACpBF,WAAczQ,GAAOyQ,WAAYC,YAAa1Q,GAAO0Q,YAAcE,aAAc5Q,GAAO4Q,aACxFpH,MAAQ,EACRyI,MAAQ,QACRjR,KAAMJ,KAAKC,MAAMsR,YAEjB,kBAAC,GAAD,CAAYhR,MAAO,OAAQM,OAAQ,GAAImQ,gBAAmB5R,GAAO8P,OACjEnP,MAASX,GAAOkQ,QAChB8B,UAAY,OAAOH,SAAY7R,GAAOqQ,OAAQC,WAActQ,GAAOsQ,WACnEwB,cAAiB9R,GAAOwQ,QAASC,WAAczQ,GAAOyQ,WAAYC,YAAa1Q,GAAO0Q,YAAcE,aAAc5Q,GAAO4Q,aACzHpH,MAAQ,EACRyI,MAAQ,UAERjR,KAAMJ,KAAKC,MAAMuR,SAGlB,yBAAK1R,MAAO,CAACqD,QAAQ,OAAOiD,cAAc,QACxC,yBAAKtG,MAAO,CAACS,MAAM,QACnB,kBAAC,GAAD,CAAYA,MAAO,OAAQM,OAAQ,GAAImQ,gBAAmB5R,GAAO8P,OAClEnP,MAASX,GAAOkQ,QAChB8B,UAAY,OAAOH,SAAY7R,GAAOqQ,OAAQC,WAActQ,GAAOsQ,WACnEwB,cAAiB9R,GAAOwQ,QAASC,WAAczQ,GAAOyQ,WAAYC,YAAa1Q,GAAO0Q,YAAcE,aAAc5Q,GAAO4Q,aACzHpH,MAAQ,EACRyI,MAAQ,aACRjR,KAAMJ,KAAKC,MAAMwR,SAGhB,yBAAK3R,MAAO,CAACS,MAAM,QACnB,kBAAC,GAAD,CAAYA,MAAO,OAAQM,OAAQ,GAAImQ,gBAAmB5R,GAAO8P,OAClEnP,MAASX,GAAOkQ,QAChB8B,UAAY,OAAOH,SAAY7R,GAAOqQ,OAAQC,WAActQ,GAAOsQ,WACnEwB,cAAiB9R,GAAOwQ,QACvBE,YAAa1Q,GAAO0Q,YAAcE,aAAc5Q,GAAO4Q,aACxDpH,MAAQ,EACRyI,MAAQ,WACRjR,KAAMJ,KAAKC,MAAMyR,QAIjB,kBAAC,GAAD,CAAYnR,MAAO,OAAQM,OAAQ,GAAImQ,gBAAmB5R,GAAO8P,OACjEnP,MAASX,GAAOkQ,QAChB8B,UAAY,OAAOH,SAAY7R,GAAOqQ,OAAQC,WAActQ,GAAOsQ,WACnEwB,cAAiB9R,GAAOwQ,QAASC,WAAczQ,GAAOyQ,WAAYC,YAAa1Q,GAAO0Q,YAAcE,aAAc5Q,GAAO4Q,aACzHpH,MAAQ,EACRyI,MAAO,OACPjR,KAAMJ,KAAKC,MAAM0R,WAKlB,yBAAK7R,MAAO,CAACS,MAAM,QACnB,kBAAC,GAAD,CAAYA,MAAO,OAAQM,OAAQ,GAAImQ,gBAAmB5R,GAAO8P,OAChEnP,MAASX,GAAOkQ,QAChB8B,UAAY,OAAOH,SAAY7R,GAAOqQ,OAAQC,WAActQ,GAAOsQ,WACnEwB,cAAiB9R,GAAOwQ,QACxBG,UAAa3Q,GAAO2Q,UACpBD,YAAa1Q,GAAO0Q,YAAcE,aAAc5Q,GAAO4Q,aACvDpH,MAAQ,EACRyI,MAAQ,gBACRjR,KAAMJ,KAAKC,MAAM2R,kBAOf,iC,gDArFmB3R,EAAMsC,Q,GAjBhBlC,aC6FXwR,G,kDA5FX,WAAY5R,GAAO,IAAD,8BACd,cAAMA,IACDsC,MAAO,CACJ6E,KAAO,GACPQ,QAAU,IAJJ,E,gEASd5H,KAAKuI,SAAS,CACVnB,KAAOS,aAAamE,QAAQ,QAC5BpE,QAAUC,aAAamE,QAAQ,e,+BAUnC,OACI,6BACG,yBAAKlM,MAAO,CAACS,MAAO,MAAOuB,OAAQ,SACnC,kBAAC,GAAD,CAAYvB,MAAO,OAAQM,OAAQ,GAAImQ,gBAAmB5R,GAAO4P,OACjEjP,MAASX,GAAOiQ,QAChB+B,UAAY,SAASH,SAAY7R,GAAOqQ,OAAQC,WAActQ,GAAOsQ,WACrEwB,cAAiB9R,GAAOuQ,OACxB/G,MAAQ,EAERxI,KAAK,kDAGN,yBAAKN,MAAO,CAACqD,QAAQ,OAAOiD,cAAc,QAE1C,yBAAKtG,MAAO,CAACS,MAAM,QACnB,kBAAC,GAAD,CAAYA,MAAO,OAAQM,OAAQ,GAAImQ,gBAAmB5R,GAAO8P,OAChEnP,MAASX,GAAOkQ,QAChB8B,UAAY,OAAOH,SAAY7R,GAAOqQ,OAAQC,WAActQ,GAAOsQ,WACnEwB,cAAiB9R,GAAOwQ,QAASC,WAAczQ,GAAOyQ,WAAYC,YAAa1Q,GAAO0Q,YACtFlH,MAAQ,EACRyI,MAAQ,QACRjR,KAAOJ,KAAKuC,MAAM6E,OAEjB,kBAAC,GAAD,CAAY7G,MAAO,OAAQM,OAAQ,GAAImQ,gBAAmB5R,GAAO8P,OAClEnP,MAASX,GAAOkQ,QAChB8B,UAAY,OAAOH,SAAY7R,GAAOqQ,OAAQC,WAActQ,GAAOsQ,WACnEwB,cAAiB9R,GAAOwQ,QAASC,WAAczQ,GAAOyQ,WAAaC,YAAa1Q,GAAO0Q,YAAaE,aAAgB5Q,GAAO4Q,aAC3HpH,MAAQ,EACRyI,MAAQ,WACRjR,KAAMJ,KAAKuC,MAAMqF,WAIhB,yBAAK9H,MAAO,CAACS,MAAM,QACpB,kBAAC,GAAD,CAAYA,MAAO,OAAQM,OAAQ,GAAImQ,gBAAmB5R,GAAO8P,OACjEnP,MAASX,GAAOkQ,QAChB8B,UAAY,OAAOH,SAAY7R,GAAOqQ,OAAQC,WAActQ,GAAOsQ,WACnEwB,cAAiB9R,GAAOwQ,QAASC,WAAczQ,GAAOyQ,WAAYC,YAAa1Q,GAAO0Q,YACtFlH,MAAQ,EACRyI,MAAM,aAENjR,KAAMJ,KAAKC,MAAM6R,UAEjB,kBAAC,GAAD,CAAYvR,MAAO,OAAQM,OAAQ,GAAImQ,gBAAmB5R,GAAO8P,OACjEnP,MAASX,GAAOkQ,QAChB8B,UAAY,OAAOH,SAAY7R,GAAOqQ,OAAQC,WAActQ,GAAOsQ,WACnEwB,cAAiB9R,GAAOwQ,QAAUE,YAAa1Q,GAAO0Q,YACtDlH,MAAQ,EACRyI,MAAM,WACNjR,KAAMJ,KAAKC,MAAM8R,QAEjB,kBAAC,GAAD,CAAYxR,MAAO,OAAQM,OAAQ,GAAImQ,gBAAmB5R,GAAO8P,OACjEnP,MAASX,GAAOkQ,QAChB8B,UAAY,OAAOH,SAAY7R,GAAOqQ,OAAQC,WAActQ,GAAOsQ,WACnEwB,cAAiB9R,GAAOwQ,QAAUE,YAAa1Q,GAAO0Q,YAAaE,aAAgB5Q,GAAO4Q,aAC1FpH,MAAQ,EACRyI,MAAQ,gBACRjR,KAAMJ,KAAKC,MAAM+R,UAQf,iC,gDAtEmB/R,EAAMsC,Q,GAjBflC,aCwEZjB,GA3EA,CACX8D,UAAS,aACLC,QAAU,OAEV8O,MAAO,QAHF,UAII,SAEbC,MAAI,IACA3R,MAAO,IACPM,OAAQ,GACRiB,OAAQ,QAHR,wBAIS,IAJT,8BAKe,IALf,IAQJqQ,UAAY,CACT3R,gBAAkBf,IAAYM,MAAM0D,MACpCjE,WAAaC,IAAYC,UACzBH,cAAgB,GAEnB6S,WAAa,CACTrS,MAAQN,IAAYM,MAAMqP,MAE1B9P,SAAW,IAEf+S,QAAU,CACN9S,cAAgB,KAChBC,WAAaC,IAAYC,WAE7B4S,WAAa,CACTvS,MAASN,IAAYM,MAAMyP,MAC3B+C,WAAa,OACbjT,SAAW,GACXE,WAAaC,IAAYC,WAI7B8S,SAAW,CACPhS,gBAAkBf,IAAYM,MAAM0D,MACpClD,MAAQ,OACRR,MAAQN,IAAYM,MAAMwP,MAC1BhQ,cAAgB,EAChBC,WAAaC,IAAYC,WAG7B+S,UAAY,CACR1S,MAAQN,IAAYM,MAAM2S,OAC1BH,WAAa,QAEjBI,YAAa,CACTnS,gBAAkBf,IAAYM,MAAMyP,MACpCoB,UAAY,SAGhBgC,WAAa,CACT7S,MAAQN,IAAYM,MAAM2S,OAC1BnT,cAAgB,EAChBC,WAAaC,IAAYC,UACzBJ,SAAW,GACXiT,WAAa,QAKjBM,KAAO,CACHrS,gBAAkB,cAClBD,MAAO,QACPhB,cAAgB,EAChBD,SAAW,GACXS,MAAQN,IAAYM,MAAM0D,MAC1BjE,WAAaC,IAAYC,YC1ClBoT,G,uKAvBP,OACI,6BACI,kBAACnG,EAAA,EAAD,CAGAvM,KAAM,QACNN,MAAOV,GAAOyT,MAEd,kBAAClG,EAAA,EAAK1G,OAAN,KAAcjG,KAAKC,MAAM+F,QACzB,kBAAC2G,EAAA,EAAKhK,KAAN,KACI,kBAACgK,EAAA,EAAKoG,MAAN,CAAYjT,MAAOV,GAAOyT,MAAO7S,KAAKC,MAAMoR,OAC5C,kBAAC1E,EAAA,EAAKqG,KAAN,KACAhT,KAAKC,MAAM2H,gB,GAfRvH,aCSjB4S,G,kDACF,WAAYhT,GAAO,IAAD,8BACd,cAAMA,IA2BViT,YAAc,SAACC,GACX,IAAKC,EAAO,IAAIC,KAAKF,GACjBG,EAAKF,EAAKG,UACVC,EAAKJ,EAAKK,WAAW,EAIzB,OAFGH,EAAG,KAAIA,EAAG,IAAIA,GACdE,EAAG,KAAIA,EAAG,IAAIA,GACNF,EAAG,IAAIE,EAAG,IAHVJ,EAAKM,eAhCF,EAsClBD,SAAW,SAACN,GACR,IAIKC,EAAO,IAAIC,KAAKF,GACjBK,EAAKJ,EAAKK,WACVE,EAAOP,EAAKM,cAEjB,MARoB,CAAC,UAAW,WAAY,QAAS,QAAS,MAAO,OACnE,OAAQ,SAAU,YAAa,UAAW,WAAY,YAOrCF,GAAK,IAAKG,GA/Cd,EAiDlBC,WAAa,WAET,EAAK3T,MAAMwE,YADA,cAEX,EAAKxE,MAAMiI,QAAQ2L,UAlDnB,EAAKtR,MAAQ,CACTyH,SAAW,CACP,CAAC,UAAU,YAEfrE,KAAO,GACPmO,KAAO,IAPG,E,gEAYE,IACC9F,EAAahO,KAAKC,MAA3BgO,MAASD,OACjB3F,QAAQC,IAAI,oBAAoB0F,EAAO3G,IACvCrH,KAAKC,MAAM8O,mBAAmBf,EAAO3G,M,+BAwChC,IAAD,OAEJ,OACI,6BACK,kBAAC,WAAD,CACD+C,UAAYpK,KAAKuC,MAAMyH,SACvBK,SAAS,aACTC,SAAW,IACXC,MAAM,UAET,kBAACC,EAAA,EAAD,CAAW1K,MAAO,CAACe,OAAS,UACzB,kBAAC,EAAD,CAAOd,MAAQ,QAAQI,QAAS,kBAAI,EAAKyT,cAAcxT,KAAK,YAC5D,kBAAC,GAAD,CACA0R,QAAW9R,KAAKuC,MAAMuR,KAAKC,cAC3BhC,MAAS/R,KAAKuC,MAAMuR,KAAKE,sBACzBhC,KAAO,SAGPhS,KAAKuC,MAAMoD,KAAKsO,OAAS,EACzBjU,KAAKuC,MAAMoD,KAAKuF,KAAI,SAACvF,EAAKwF,GAAN,OACpB,yBAAKrL,MAAO,CAACgC,OAAO,GAAIsJ,IAAKD,GAC7B,kBAAC,GAAD,CACAoG,UAAa5L,EAAKuO,cAClB1C,OAAU7L,EAAKwO,gBACf1C,MAAS9L,EAAKyO,sBACd1C,IAAO/L,EAAK0O,oBACZ1C,QAAWhM,EAAK2O,cAChB1C,aAAgBjM,EAAK4O,aAEtB,yBAAKzU,MAAO,CAAC2B,UAAU,KAAvB,UAIG,yBAAK3B,MAAOV,GAAOoP,UAAnB,IAA8B,kBAAC,GAAD,CAChCxI,OAAW,2B,gDAxES/F,EAAMsC,GAClC,OAAiB,OAAdtC,EAAM6T,WAA8BnI,IAAd1L,EAAM6T,KACzB,CACFnO,KAAO1F,EAAM0F,KACbmO,KAAO7T,EAAM6T,MAId,S,GA1BWzT,aA2HPuL,oBApBf,SAAyBrJ,GACxB,MAAO,CAEAiS,SAAWjS,EAAMsJ,gBAAgB2I,SACjC7O,KAAOpD,EAAMkS,eAAe9O,KAC5BmO,KAAOvR,EAAMkS,eAAeC,cAIpC,SAA4BxI,GAC3B,MAAO,CACA6C,mBAAqB,SAACrK,GACjBwH,EAAS6C,GAAmBrK,KAE9BD,YAAc,SAACC,GACXwH,EAASzH,EAAYC,QAKrBkH,CAA6CqH,IC7F7C7T,GAzCD,CACZ8D,UAAY,CACVzB,UAAY,IAGdkT,UAAY,CACVlT,UAAY,IAEdoR,KAAO,CACLrT,WAAaC,IAAYC,UACzBJ,SAAW,IAGbK,OAAS,CACPA,OAASF,IAAYE,SCPV+D,GATI,CACfkR,kBAAoB,oBACpBC,0BAA4B,4BAC5BC,0BAA4B,4BAC5BC,qBAAwB,2BACxBC,6BAA+B,mCAC/BC,6BAAgC,oC,ICS9BC,G,kDACF,WAAYjV,GAAO,IAAD,8BACd,cAAMA,IAsDVkV,UAAY,SAAC/N,EAAKgO,EAAU7T,GACxB,EAAKgH,SAAS,CACV8M,YAAa,EACbC,eAAiBlO,EACjBmO,oBAAsBhU,EACtBiU,cAAgBJ,KA5DN,EAgElBK,YAAc,SAAC5M,EAAEzB,GAAS,IAAD,EACrBiB,QAAQC,IAAIlB,GACZ,IAAI7F,EAAQsH,EAAEF,OAAOpH,MACtB,EAAKgH,UAAL,GACIK,MAAO,GADX,cAEKxB,EAAQ7F,GAFb,oCAG0BA,GAH1B,IAIE,kBAAI8G,QAAQC,IAAI,EAAK/F,MAAMmT,iBAvEd,EA2ElBnM,OAAS,WACL,IAAI/B,EAAS,CACT,aAAgBmO,SAAS,EAAKpT,MAAMqT,cACpC,YAAeD,SAAS,EAAKpT,MAAMmT,aACnC,mBAAsBC,SAAS,EAAKpT,MAAMsT,oBAC1C,UAAaF,SAAS,EAAKpT,MAAMuT,WACjC,aAAgBH,SAAS,EAAKpT,MAAMwT,cACpC,UAAaJ,SAAS,EAAKpT,MAAMyT,WACjC,aAAgBL,SAAS,EAAKpT,MAAM0T,cACpC,YAAeN,SAAS,EAAKpT,MAAM2T,cAEvC7N,QAAQC,IAAId,GACZ,EAAKvH,MAAMkW,UAAU3O,IArFrB,EAAKjF,MAAQ,CACRwL,UAAW,EACXnF,MAAO,EACPkL,KAAO,CAAC,MAAM,gBAAgB,uBAAuB,aAAa,gBAClE,aAAa,gBAAgB,iBAC7BsB,UAAY,CAAC,eAAe,cAAc,qBAAqB,YAC/D,eAAe,YAAY,eAAe,eAC1CzP,KAAO,GACPiQ,aAAe,EACfF,YAAc,EACdG,mBAAqB,EACrBC,UAAY,EACZC,aAAe,EACfC,UAAY,EACZC,aAAe,EACfC,YAAc,EACdlM,SAAW,CAER,CAAC,UAAU,YAEfqL,YAAa,EACbC,eAAiB,GACjBE,cAAgB,GAChBD,oBAAsB,GAzBZ,E,gEAkCdvV,KAAKC,MAAMmW,a,+BAyDN,IAAD,OAEJ,OACI,6BACC,kBAAC,WAAD,CACKhM,UAAYpK,KAAKuC,MAAMyH,SACvBK,SAAS,aACTC,SAAW,IACXC,MAAM,SACNzK,MAAO,CAACe,OAAQ,UAElB,kBAAC2J,EAAA,EAAD,KACA,kBAACC,EAAA,EAAD,KAEI,kBAACC,EAAA,EAAD,CAAKC,GAAG,KACR,kBAACG,EAAA,EAAD,CAAOuL,SAAO,EAACtL,UAAQ,EAACC,OAAK,EAAClL,MAAOV,GAAO8D,WAC5C,+BACI,4BACA,iCACA,oCACA,uCAGJ,+BACA,wBAAIpD,MAAK,2BAAMV,GAAOO,QAAUP,GAAOyT,MAAO3S,QAAS,kBAAI,EAAKiV,UAAU,EAAK5S,MAAMuR,KAAK,GAAG,EAAKvR,MAAM6S,UAAU,GAAG,EAAK7S,MAAMqT,gBAC5H,iCACA,4BAAK5V,KAAKuC,MAAMuR,KAAK,IACrB,4BAAK9T,KAAKuC,MAAMqT,eAEpB,wBAAI9V,MAAK,2BAAMV,GAAOO,QAAUP,GAAOyT,MAAO3S,QAAS,kBAAI,EAAKiV,UAAU,EAAK5S,MAAMuR,KAAK,GAAG,EAAKvR,MAAM6S,UAAU,GAAG,EAAK7S,MAAMmT,eAC5H,iCACA,4BAAK1V,KAAKuC,MAAMuR,KAAK,IACrB,4BAAK9T,KAAKuC,MAAMmT,cAEpB,wBAAI5V,MAAK,2BAAMV,GAAOO,QAAUP,GAAOyT,MAAO3S,QAAS,kBAAI,EAAKiV,UAAU,EAAK5S,MAAMuR,KAAK,GAAG,EAAKvR,MAAM6S,UAAU,GAAG,EAAK7S,MAAMsT,sBAC5H,iCACA,4BAAK7V,KAAKuC,MAAMuR,KAAK,IACrB,4BAAK9T,KAAKuC,MAAMsT,qBAEpB,wBAAI/V,MAAK,2BAAMV,GAAOO,QAAUP,GAAOyT,MAAO3S,QAAS,kBAAI,EAAKiV,UAAU,EAAK5S,MAAMuR,KAAK,GAAG,EAAKvR,MAAM6S,UAAU,GAAG,EAAK7S,MAAMuT,aAC5H,iCACA,4BAAK9V,KAAKuC,MAAMuR,KAAK,IACrB,4BAAK9T,KAAKuC,MAAMuT,YAEpB,wBAAIhW,MAAK,2BAAMV,GAAOO,QAAUP,GAAOyT,MAAO3S,QAAS,kBAAI,EAAKiV,UAAU,EAAK5S,MAAMuR,KAAK,GAAG,EAAKvR,MAAM6S,UAAU,GAAG,EAAK7S,MAAMwT,gBAC5H,iCACA,4BAAK/V,KAAKuC,MAAMuR,KAAK,IACrB,4BAAK9T,KAAKuC,MAAMwT,eAEpB,wBAAIjW,MAAK,2BAAMV,GAAOO,QAAUP,GAAOyT,MAAO3S,QAAS,kBAAI,EAAKiV,UAAU,EAAK5S,MAAMuR,KAAK,GAAG,EAAKvR,MAAM6S,UAAU,GAAG,EAAK7S,MAAMyT,aAC5H,iCACA,4BAAKhW,KAAKuC,MAAMuR,KAAK,IACrB,4BAAK9T,KAAKuC,MAAMyT,YAEpB,wBAAIlW,MAAK,2BAAMV,GAAOO,QAAUP,GAAOyT,MAAO3S,QAAS,kBAAI,EAAKiV,UAAU,EAAK5S,MAAMuR,KAAK,GAAG,EAAKvR,MAAM6S,UAAU,GAAG,EAAK7S,MAAM0T,gBAC5H,iCACA,4BAAKjW,KAAKuC,MAAMuR,KAAK,IACrB,4BAAK9T,KAAKuC,MAAM0T,eAEpB,wBAAInW,MAAK,2BAAMV,GAAOO,QAAUP,GAAOyT,MAAO3S,QAAS,kBAAI,EAAKiV,UAAU,EAAK5S,MAAMuR,KAAK,GAAG,EAAKvR,MAAM6S,UAAU,GAAG,EAAK7S,MAAM2T,eAC5H,iCACA,4BAAKlW,KAAKuC,MAAMuR,KAAK,IACrB,4BAAK9T,KAAKuC,MAAM2T,iBAKpB,kBAACxL,EAAA,EAAD,CAAKC,GAAG,KAAR,KACA,kBAACD,EAAA,EAAD,CAAKC,GAAG,KACR,yBAAK7K,MAAOV,GAAOuV,WAEf3U,KAAKuC,MAAM8S,WACX,6BACA,kBAAC,EAAD,CACArT,QAAU,UACV5B,KAAO,oBACPG,MAAS,QAET,kBAAC,EAAD,CACAH,KAAOJ,KAAKuC,MAAM+S,iBAElB,kBAAC,EAAD,CACA/T,MAASvB,KAAKuC,MAAMgT,oBACpBpU,SAAU,SAAC0H,GAAD,OAAK,EAAK4M,YAAY5M,EAAE,EAAKtG,MAAMiT,kBAG7C,kBAAC,EAAD,CAAYpV,KAAK,WACjB4B,QAAU,OACVzB,MAAS,MACTJ,QAAW,kBAAI,EAAKoJ,aAKpB,c,gDAnJYtJ,EAAMsC,GAClC,OAAiB,OAAdtC,EAAM0F,WAA8BgG,IAAd1L,EAAM0F,MAAqBpD,EAAMqG,KACpD,CACFjD,KAAO1F,EAAM0F,KACbiQ,aAAe3V,EAAM2V,aACrBF,YAAczV,EAAMyV,YACpBG,mBAAqB5V,EAAM4V,mBAC3BC,UAAY7V,EAAM6V,UAClBC,aAAe9V,EAAM8V,aACrBC,UAAY/V,EAAM+V,UAClBC,aAAehW,EAAMgW,aACrBC,YAAcjW,EAAMiW,aAGrB,S,GArDW7V,aAoOPuL,oBA7Bf,SAAyBrJ,GACxB,MAAO,CACAoD,KAAOpD,EAAM+T,eAAe3Q,KAC5BiQ,aAAerT,EAAM+T,eAAeV,aACpCF,YAAcnT,EAAM+T,eAAeZ,YACnCG,mBAAqBtT,EAAM+T,eAAeT,mBAC1CC,UAAYvT,EAAM+T,eAAeR,UACjCC,aAAexT,EAAM+T,eAAeP,aACpCC,UAAYzT,EAAM+T,eAAeN,UACjCC,aAAe1T,EAAM+T,eAAeL,aACpCC,YAAc3T,EAAM+T,eAAeJ,YACnC/L,IAAM5H,EAAM+T,eAAeC,SAC3B7K,MAAQnJ,EAAM+T,eAAe5K,MAC7B8K,YAAcjU,EAAM+T,eAAeE,YACnCC,eAAiBlU,EAAM+T,eAAeG,mBAG9C,SAA4BvK,GAC3B,MAAO,CACAkK,SAAW,WACNlK,ECtOF,CACH9K,KAAOsC,GAAWkR,qBDuOlBuB,UAAY,SAACzR,GACTwH,ECnOD,CACH9K,KAAOsC,GAAWqR,qBAClBpQ,QDiOuBD,QAMhBkH,CAA6CsJ,IE9L7C9V,GAnDA,CAEX8D,UAAY,CAGZpB,OAAS,OACTjB,OAAS,SAGT6V,UAAY,CACRlW,gBAAgB,UAChBT,MAAM,QACNP,WAAeC,IAAYC,UAC3BiX,aAAe,GAEnBrT,IAAM,CACF7B,UAAU,IAEd8E,MAAO,CACH/F,gBAAgB,cAChBhB,WAAeC,IAAYC,UAC3BiX,aAAe,EACfrX,SAAW,GACXK,OAASF,IAAYE,QAEzBA,OAAS,CACLA,OAASF,IAAYE,QAEzBiX,UAAY,CACRnV,UAAa,GACblB,MAAQ,OAEZmG,UAAY,CACRnG,MAAQ,OACRf,WAAaC,IAAYC,UACzBkC,cAAgB,YAChBpB,gBAAgB,cAChBT,MAAQN,IAAYM,MAAMwP,MAC1BjQ,SAAW,GACXC,cAAgB,GAEpBsX,WAAa,CACTtW,MAAQ,MACRC,gBAAgB,cAChBoB,cAAe,YACf+U,aAAe,MCtCRjT,ICHUrD,YDNN,CACfyW,WAAa,aACbC,mBAAsB,qBACtBC,mBAAqB,qBACrBC,kBAAoB,oBACpBC,0BAA4B,4BAC5BC,0BAA4B,8BEJhC,IA2Be/X,GA3BA,CAGXsH,UAAY,CAERlG,gBAAgB,cAChBT,MAAQ,SAEZqX,MAAQ,CACJ5W,gBAAgB,SAEpB6Q,MAAQ,CACJ7R,WAAeC,IAAY4X,SAC3BtX,MAAQN,IAAYM,MAAMqP,MAC1B9P,SAAW,IAEfuT,KAAM,CAEF9S,MAAQN,IAAYM,MAAMwP,MAC1BhQ,cAAgB,EAChBD,SAAW,IAEfwN,IAAM,CACF/M,MAAQ,QC0CDuX,G,kDA5DX,WAAYrX,GAAO,IAAD,8BACd,cAAMA,IACDsC,MAAQ,CACTE,MAAO,GAHG,E,qDAQd,OACI,yBAAK3C,MAAO,CAACS,MAAQ,QAChB,kBAACiC,EAAA,EAAD,CAAQC,KAAMzC,KAAKuC,MAAME,KACzB8U,kBAAgB,gCAChBC,OAAQxX,KAAKC,MAAMwX,QACnBC,MAAStY,GAAOgY,OAE3B,kBAAC5U,EAAA,EAAMyD,OAAP,CAAc0R,aAAW,GACvB,kBAACnV,EAAA,EAAMuQ,MAAP,CAAa1L,GAAG,gCAAgCvH,MAAOV,GAAOiS,OAC5DrR,KAAKC,MAAM+F,SAGf,kBAACxD,EAAA,EAAMyD,OAAP,KACE,kBAACzD,EAAA,EAAMuQ,MAAP,CAAa1L,GAAG,gCAAgCvH,MAAOV,GAAOyT,MAA9D,sBACoB7S,KAAKC,MAAM2H,UAGjC,kBAACpF,EAAA,EAAMyD,OAAP,KACE,kBAACzD,EAAA,EAAMuQ,MAAP,CAAa1L,GAAG,gCAAgCvH,MAAOV,GAAOyT,MAA9D,mBACiB7S,KAAKC,MAAM2X,MAG9B,kBAACpV,EAAA,EAAMyD,OAAP,KACE,kBAACzD,EAAA,EAAMuQ,MAAP,CAAa1L,GAAG,gCAAgCvH,MAAOV,GAAOyT,MAA9D,yBACuB7S,KAAKC,MAAMmT,OAGpC,kBAAC5Q,EAAA,EAAMyD,OAAP,KACE,kBAACzD,EAAA,EAAMuQ,MAAP,CAAa1L,GAAG,gCAAgCvH,MAAOV,GAAOyT,MAA9D,qBACmB7S,KAAKC,MAAM4X,WAGhC,kBAACrV,EAAA,EAAMyD,OAAP,KACE,kBAACzD,EAAA,EAAMuQ,MAAP,CAAa1L,GAAG,gCAAgCvH,MAAOV,GAAOyT,MAA9D,oBACiB,0BAAM/S,MAAOV,GAAO0N,KAApB,IAA2B9M,KAAKC,MAAMmB,KAAtC,OAIG,kBAACoB,EAAA,EAAMsV,OAAP,KACA,kBAAC,EAAD,CAAY9V,QAAQ,UACpB7B,QAASH,KAAKC,MAAMwX,QACpBrX,KAAO,iB,GAnDXC,aCkCTjB,GArCA,CACPiS,MAAQ,CACJ/R,SAAW,GACXE,WAAaC,IAAYsY,WAG7BC,SAAW,CACPxY,WAAaC,IAAYwY,OACzB3Y,SAAW,GACXC,cAAgB,KAEpB2Y,OAAS,CAELnV,QAAU,EACVyK,WAAc,GACdhO,WAAaC,IAAYwY,OACzB3Y,SAAW,GACXC,cAAgB,IAEpByG,OAAS,CACLzF,MAAQ,OAEZ4X,KAAO,CACHpV,QAAU,EACVjB,OAAS,GAEbsW,UAAY,CACR5Y,WAAaC,IAAYwY,OACzB3Y,SAAW,IAEf+Y,MAAQ,CACJ7Y,WAAaC,IAAYwY,OACzB3Y,SAAW,GACXC,cAAgB,ICfb+Y,G,uKAZP,OAEQ,yBAAKxY,MAAK,aAAGsG,cAAgB,MAAQjD,QAAU,QAAU/D,GAAO+Y,OAC5D,yBAAKrY,MAAK,aAAGS,MAAQP,KAAKC,MAAMM,OAAUnB,GAAO8Y,SAAjD,KAA6DlY,KAAKC,MAAMmH,KAAxE,MACA,yBAAKtH,MAAO,CAACS,MAAQ,QAArB,SACA,yBAAKT,MAAK,yBAAGS,MAAQ,OAAUnB,GAAO8Y,QAAU9Y,GAAO+Y,OAAvD,IAAgEnY,KAAKC,MAAMsB,MAA3E,W,GARMlB,aC4SXkY,G,kDAvSX,WAAYtY,GAAO,IAAD,8BACd,cAAMA,IAOVwT,SAAW,SAACN,GACR,IAIKC,EAAO,IAAIC,KAAKF,GACjBK,EAAKJ,EAAKK,WACHL,EAAKM,cAGnB,MATsB,CAAC,UAAW,WAAY,QAAS,QAAS,MAAO,OACnE,OAAQ,SAAU,YAAa,UAAW,WAAY,YAQvCF,IAlBF,EAoBlBgF,QAAU,SAACrF,GAEP,OADY,IAAIE,KAAKF,GACRO,eAtBC,EA0BlBR,YAAc,SAACC,GACX,IAAKC,EAAO,IAAIC,KAAKF,GACjBG,EAAKF,EAAKG,UACVC,EAAKJ,EAAKK,WAAW,EAIzB,OAFGH,EAAG,KAAIA,EAAG,IAAIA,GACdE,EAAG,KAAIA,EAAG,IAAIA,GACNF,EAAG,IAAIE,EAAG,IAHVJ,EAAKM,eA5BhB,EAAKnR,MAAO,CACRkW,YAAchP,KAAK0E,MAAMtG,aAAamE,QAAQ,gBAC/C0M,eAAiBjP,KAAK0E,MAAMtG,aAAamE,QAAQ,oBAJtC,E,qDAuCd,OACI,6BACK,kBAACxJ,EAAA,EAAD,CAAQC,KAAMzC,KAAKC,MAAMwC,KAEzB3C,MAAO,CAACU,gBAAkB,eACd2F,KAAK,KACLoR,kBAAgB,gCAChBC,OAAQxX,KAAKC,MAAMwX,SAGpB,kBAACjV,EAAA,EAAMyD,OAAP,CAAc0R,aAAW,IAG5B,kBAACnV,EAAA,EAAMG,KAAP,CAAY7C,MAAO,CAACU,gBAAkB,YACnC,kBAACsK,EAAA,EAAD,CAAQC,UAAQ,EAAEjL,MAAK,aAAGS,MAAQ,QAAUnB,GAAO+Y,OACnD,+BACI,wBAAIrY,MAAK,aAAGe,OAAS,GAAGH,WAAa,eAAmBtB,GAAO+Y,OAC/D,wBAAIrY,MAAK,yBAAGS,MAAQ,OAAUnB,GAAO+Y,MAA5B,IAAiC3K,WAAa,MACvD,kBAAC,EAAD,CAAWrL,IAAMa,EAAQ,KAAgBzC,MAAS,GAAIM,OAAU,MAEhE,wBAAIf,MAAK,2BAAMV,GAAO4G,QAAU5G,GAAO+Y,OACvC,yBAAKrY,MAAOV,GAAO4Y,UAAnB,+CACA,yBAAKlY,MAAOV,GAAO4Y,UAAnB,mCACA,0BAAMlY,MAAK,aAAG0N,WAAa,KAAOpO,GAAO4Y,WAAzC,sCAEA,wBAAIlY,MAAOV,GAAO+Y,MACf,kBAAC,GAAD,CAAa5X,MAAO,MAAO6G,KAAO,SAAS7F,MAAQ,MACnD,kBAAC,GAAD,CAAahB,MAAO,MAAO6G,KAAO,aAAc7F,MAAQ,aACxD,kBAAC,GAAD,CAAahB,MAAO,MAAO6G,KAAO,gBAAiB7F,MAAQ,gBAKlE,kBAACuJ,EAAA,EAAD,CAAQC,UAAQ,EAAEjL,MAAK,aAAGS,MAAQ,QAAUnB,GAAO+Y,OAC/C,+BACA,wBAAIrY,MAAOV,GAAO+Y,MAElB,wBAAIrY,MAAK,aAAGS,MAAQ,OAASnB,GAAO+Y,OACpC,kBAAC,GAAD,CAAa5X,MAAO,MAAO6G,KAAO,iBAAiB7F,MAASvB,KAAKuC,MAAMkW,YAAYE,sBAEnF,wBAAI7Y,MAAOV,GAAO+Y,MACf,kBAAC,GAAD,CAAa5X,MAAO,MAAO6G,KAAO,aAAa7F,MAASvB,KAAKuC,MAAMkW,YAAY1E,gBAC/E,kBAAC,GAAD,CAAaxT,MAAO,MAAO6G,KAAO,WAAY7F,MAASvB,KAAKuC,MAAMkW,YAAYzE,sBAAsB4E,UAAU,EAAE,MAChH,kBAAC,GAAD,CAAarY,MAAO,MAAO6G,KAAO,gBAAiB7F,MAASvB,KAAKuC,MAAMkW,YAAYI,qBAM1F,kBAAC/N,EAAA,EAAD,CAAUC,UAAQ,EAAE5E,KAAK,KAAK2S,YAAU,EAAChZ,MAAOV,GAAO+Y,MAEvD,2BAAOrY,MAAOV,GAAO+Y,MAEjB,wBAAIrY,MAAOV,GAAO+Y,MACd,wBAAIrY,MAAK,aAAGS,MAAQ,MAAMG,WAAa,eAAiBtB,GAAO+Y,OAC/D,kBAACrN,EAAA,EAAD,CAAUC,UAAQ,EAAE5E,KAAK,KAAK2S,YAAU,EAAChZ,MAAOV,GAAO+Y,MACvD,2BAAOrY,MAAOV,GAAO+Y,MACrB,wBAAIrY,MAAOV,GAAO+Y,MAClB,wBAAIrY,MAAOV,GAAO+Y,MAClB,kBAAC,GAAD,CAAa5X,MAAO,MAAO6G,KAAO,gBAClC7F,MAASvB,KAAKuC,MAAMmW,eAAexE,kBAInC,wBAAIpU,MAAOV,GAAO+Y,MAClB,wBAAIrY,MAAOV,GAAO+Y,MAClB,kBAAC,GAAD,CAAa5X,MAAO,MAAO6G,KAAO,aAEpC7F,MAAO,uBAIL,wBAAIzB,MAAOV,GAAO+Y,MAClB,wBAAIrY,MAAOV,GAAO+Y,MAClB,kBAACrN,EAAA,EAAD,CAAOhL,MAAOV,GAAO+Y,MACrB,2BAAOrY,MAAOV,GAAO+Y,MACrB,4BACA,wBAAIrY,MAAOV,GAAO+Y,MAClB,kBAAC,GAAD,CAAa5X,MAAO,MAAO6G,KAAO,aAClC7F,MAASvB,KAAKkT,YAAYlT,KAAKuC,MAAMmW,eAAetE,0BAGpD,wBAAItU,MAAOV,GAAO+Y,MAClB,kBAAC,GAAD,CAAa5X,MAAO,MAAO6G,KAAO,WAClC7F,MAASvB,KAAKkT,YAAYlT,KAAKuC,MAAMmW,eAAerE,6BAQpD,wBAAIvU,MAAOV,GAAO+Y,MAClB,wBAAIrY,MAAOV,GAAO+Y,MAClB,kBAAC,GAAD,CAAa5X,MAAO,MAAO6G,KAAO,WAClC7F,MAAU,0BAET,kBAAC,GAAD,CAAahB,MAAO,MAAO6G,KAAO,YACnC7F,MAAW,kCAIX,wBAAIzB,MAAOV,GAAO+Y,MAClB,wBAAIrY,MAAOV,GAAO+Y,MAClB,kBAAC,GAAD,CAAa5X,MAAO,MAAO6G,KAAO,cAClC7F,MAAU,+BAIV,wBAAIzB,MAAOV,GAAO+Y,MAClB,wBAAIrY,MAAOV,GAAO+Y,MAClB,kBAAC,GAAD,CAAa5X,MAAO,MAAO6G,KAAO,gBAClC7F,MAAU,+BAIV,wBAAIzB,MAAOV,GAAO+Y,MAClB,wBAAIrY,MAAOV,GAAO+Y,MAClB,kBAAC,GAAD,CAAa5X,MAAO,MAAO6G,KAAO,cAClC7F,MAAW,QAIX,wBAAIzB,MAAOV,GAAO+Y,MAClB,wBAAIrY,MAAOV,GAAO+Y,MAClB,kBAAC,GAAD,CAAa5X,MAAO,MAAO6G,KAAO,yBAClC7F,MAAU,QAIV,wBAAIzB,MAAO,CAACe,OAAS,MACjB,8BAEJ,4BACC,4BACD,0BAAMf,MAAOV,GAAOgZ,WAApB,qBACA,0BAAMtY,MAAOV,GAAOiZ,OAApB,uDAQA,wBAAIvY,MAAK,aAAGS,MAAQ,MAAMG,WAAa,eAAiBtB,GAAO+Y,OAC3D,kBAACrN,EAAA,EAAD,CAAUC,UAAQ,EAAE5E,KAAK,KAAK2S,YAAU,EAAChZ,MAAOV,GAAO+Y,MAC3D,2BAAOrY,MAAOV,GAAO+Y,MACrB,wBAAIrY,MAAOV,GAAO+Y,MAClB,wBAAIrY,MAAOV,GAAO+Y,MAClB,kBAAC,GAAD,CAAa5X,MAAO,MAAO6G,KAAO,oBAClC7F,MAASvB,KAAKuC,MAAMmW,eAAepE,gBAEnC,kBAAC,GAAD,CAAa/T,MAAO,MAAO6G,KAAO,aAClC7F,MAAQ,SAER,kBAAC,GAAD,CAAahB,MAAO,MAAO6G,KAAO,gBAClC7F,MAAQ,WAKR,wBAAIzB,MAAOV,GAAO+Y,MAClB,wBAAIrY,MAAOV,GAAO+Y,MAClB,kBAAC,GAAD,CAAa5X,MAAO,MAAO6G,KAAO,uBAClC7F,MAASvB,KAAKuC,MAAMmW,eAAepE,gBAEnC,kBAAC,GAAD,CAAa/T,MAAO,MAAO6G,KAAO,gBAClC7F,MAAQ,WAIR,wBAAIzB,MAAOV,GAAO+Y,MAClB,wBAAIrY,MAAOV,GAAO+Y,MAClB,kBAAC,GAAD,CAAa5X,MAAO,MAAO6G,KAAO,iBAClC7F,MAASvB,KAAKuC,MAAMmW,eAAepE,gBAEnC,kBAAC,GAAD,CAAa/T,MAAO,MAAO6G,KAAO,iBAClC7F,MAAQ,SAEP,kBAAC,GAAD,CAAahB,MAAO,MAAO6G,KAAO,oBACnC7F,MAAS,SAET,kBAAC,GAAD,CAAahB,MAAO,MAAO6G,KAAO,aAClC7F,MAAQ,WAIR,4BACA,wBAAIzB,MAAO,CAACyS,WAAa,SACzB,kBAAC,GAAD,CAAahS,MAAO,MAAO6G,KAAO,eAClC7F,MAASvB,KAAKuC,MAAMmW,eAAepE,cAAgB,MAInD,4BACA,4BACA,kBAAC,GAAD,CAAa/T,MAAO,MAAO6G,KAAO,kBAClC7F,MAAS,SAER,kBAAC,GAAD,CAAahB,MAAO,MAAO6G,KAAO,wBACnC7F,MAAS,SAER,kBAAC,GAAD,CAAahB,MAAO,MAAO6G,KAAO,aACnC7F,MAAS,WAIT,4BACA,wBAAIzB,MAAO,CAACyS,WAAa,SACzB,kBAAC,GAAD,CAAahS,MAAO,MAAO6G,KAAO,sBAClC7F,MAASvB,KAAKuC,MAAMmW,eAAepE,cAAgB,MAInD,4BACA,4BACA,kBAAC,GAAD,CAAa/T,MAAO,MAAO6G,KAAO,uBAClC7F,MAASvB,KAAKuC,MAAMmW,eAAepE,cAAgB,MAInD,4BACA,wBAAIxU,MAAO,CAACyS,WAAa,SACzB,kBAAC,GAAD,CAAahS,MAAO,MAAO6G,KAAO,aAClC7F,MAASvB,KAAKuC,MAAMmW,eAAepE,cAAgB,MAInD,4BACA,4BACA,kBAAC,GAAD,CAAa/T,MAAO,MAAO6G,KAAO,+BAClC7F,MAASvB,KAAKuC,MAAMmW,eAAepE,cAAgB,aAc3D,kBAAC9R,EAAA,EAAMsV,OAAP,KACA,kBAAC/V,EAAA,EAAD,CAAQC,QAAQ,UAAU9B,QAASF,KAAKC,MAAMwX,SAA9C,gB,GA/RHpX,aCiBVjB,GAvBA,CAEX8D,UAAY,CAGZpB,OAAS,OACTjB,OAAS,SAGTuW,MAAQ,CACJ5W,gBAAgB,WAEpBwF,OAAS,CACLxF,gBAAgB,WAGpB6Q,MAAO,CACH7R,WAAaC,IAAY4X,SACzB9X,cAAgB,EAChBD,SAAW,KCXbyZ,G,kDAEF,WAAY9Y,GAAO,IAAD,8BACd,cAAMA,IAqBV6I,MAAQ,SAACD,EAAEzB,GACP,IAAI7F,EAAQsH,EAAEF,OAAOpH,MAErB,EAAKgH,UACH,SAAAQ,GAAS,MAAK,CACZC,QAAQ,2BACDD,EAAUC,SADV,kBAEF5B,EAAO7F,SA7BF,EAmCfgI,OAAS,WAER,IAAIM,EAAU,CACV,WAAc,EAAKtH,MAAMyW,WACzB,cAAiB,EAAKzW,MAAMyG,QAAQ+K,cACnC,gBAAoB,EAAKxR,MAAMyG,QAAQiQ,gBACxC,mBAAsB,EAAK1W,MAAMyG,QAAQ2P,mBACzC,sBAAyB,EAAKpW,MAAMyG,QAAQgL,sBAC5C,kBAAqB,EAAKzR,MAAMyG,QAAQkQ,kBACxC,gBAAmB,2BACnB,eAAkB,EAAK3W,MAAMyG,QAAQ6P,gBAIxC,EAAK5Y,MAAMkZ,gBAAgBtP,GAC3B,EAAKtB,SAAS,CACVgB,QAAS,EACTsD,WAAa,yBAlDlB,EAAKtK,MAAQ,CACTE,MAAO,EACP8G,QAAS,EACTsD,WAAa,GACb4L,YAAchP,KAAK0E,MAAMtG,aAAamE,QAAQ,gBAC9C0M,eAAiBjP,KAAK0E,MAAMtG,aAAamE,QAAQ,mBACjDgN,WAAanR,aAAamE,QAAQ,cAClChD,QAAU,CACNzB,WAAYM,aAAamE,QAAQ,cACjC+H,cAAetK,KAAK0E,MAAMtG,aAAamE,QAAQ,gBAAgB+H,cAC/DkF,gBAAkBxP,KAAK0E,MAAMtG,aAAamE,QAAQ,gBAAgBoN,mBAClET,mBAAoBlP,KAAK0E,MAAMtG,aAAamE,QAAQ,gBAAgB2M,mBACpE3E,sBAAuBvK,KAAK0E,MAAMtG,aAAamE,QAAQ,gBAAgBgI,sBACvEkF,kBAAsBzP,KAAK0E,MAAMtG,aAAamE,QAAQ,gBAAgBkN,kBACtEG,gBAAkB,2BAElBR,eAAiBpP,KAAK0E,MAAMtG,aAAamE,QAAQ,gBAAgB6M,iBAlB3D,E,qDAwDT,IAAD,OAEJ,OADAxQ,QAAQC,IAAItI,KAAKC,MAAMsJ,QAEnB,yBAAKzJ,MAAO,CAACS,MAAQ,QAChB,kBAACiC,EAAA,EAAD,CAAQC,KAAMzC,KAAKuC,MAAME,KACzB8U,kBAAgB,gCAChBC,OAAQxX,KAAKC,MAAMwX,SAGpB,kBAACjV,EAAA,EAAMyD,OAAP,CAAc0R,aAAW,EAAC7X,MAAOV,GAAO4G,QACpC,kBAACxD,EAAA,EAAMuQ,MAAP,CAAa1L,GAAG,gCAAgCvH,MAAOV,GAAOiS,OAA9D,oBACkBrR,KAAKuC,MAAMkW,YAAYzE,wBAI7C,kBAACxR,EAAA,EAAMG,KAAP,CAAY7C,MAAO,CAACU,gBAAkB,YACtC,kBAAC,EAAD,CAAOJ,KAAM,gBACb,kBAAC,EAAD,CACAmB,MAAQvB,KAAKuC,MAAMyG,QAAQ+K,cAC1B5S,SAAU,SAAC0H,GAAD,OAAK,EAAKC,MAAMD,EAAE,oBAE7B,kBAAC,EAAD,CAAOzI,KAAM,oBACb,kBAAC,EAAD,CACAf,MAAM,cACNkC,MAAQvB,KAAKuC,MAAMyG,QAAQ2P,mBAC1BxX,SAAU,SAAC0H,GAAD,OAAK,EAAKC,MAAMD,EAAE,yBAG7B,kBAAC,EAAD,CAAOzI,KAAM,eACb,kBAAC,EAAD,CAAWmB,MAAQvB,KAAKuC,MAAMyG,QAAQgL,sBACrC7S,SAAU,SAAC0H,GAAD,OAAK,EAAKC,MAAMD,EAAE,4BAE7B,kBAAC,EAAD,CAAOzI,KAAM,gBACb,kBAAC,EAAD,CAAWmB,MAAQvB,KAAKuC,MAAMyG,QAAQkQ,kBACtC/X,SAAU,SAAC0H,GAAD,OAAK,EAAKC,MAAMD,EAAE,wBAG5B,kBAAC,EAAD,CAAOzI,KAAM,sBACb,kBAAC,EAAD,CAAWmB,MAAQvB,KAAKuC,MAAMyG,QAAQqQ,gBACtClY,SAAU,SAAC0H,GAAD,OAAK,EAAKC,MAAMD,EAAE,kCAE5B,kBAAC,EAAD,CAAOzI,KAAM,kBACb,kBAAC,EAAD,CAAWmB,MAAQvB,KAAKuC,MAAMyG,QAAQ6P,eACtC1X,SAAU,SAAC0H,GAAD,OAAK,EAAKC,MAAMD,EAAE,sBAI5B,wBAAI/I,MAAO,CAACC,MAAM,QAAQR,cAAe,EAAIiO,WAAc,KAAK,8BAAQxN,KAAKuC,MAAMsK,aAEnF,kBAACrK,EAAA,EAAMsV,OAAP,CAAchY,MAAOV,GAAOka,QAC5B,kBAAC,EAAD,CAAYtX,QAAQ,UACnB7B,QAAS,kBAAI,EAAKoJ,UAClBnJ,KAAO,WAER,kBAAC,EAAD,CAAY4B,QAAQ,SACnB7B,QAASH,KAAKC,MAAMwX,QACpBrX,KAAQJ,KAAKuC,MAAMgH,OAAS,MAAQ,kB,GAlH3BlJ,aA+IXuL,oBAlBf,SAAyBrJ,GACxB,MAAO,CAEDgH,OAAShH,EAAMgX,iBAAiBhL,UAChCpE,IAAM5H,EAAMgX,iBAAiBC,cAIpC,SAA4BtN,GAC3B,MAAO,CACNiN,gBAAkB,SAACzU,GACTwH,ECxID,CACH9K,KAAOsC,GAAWuT,kBAClBtS,QDsI6BD,QAOtBkH,CAA6CmN,IEvItDU,G,kDAEF,WAAYxZ,GAAO,IAAD,8BACd,cAAMA,IAgDVyZ,eAAiB,SAAChV,EAAIiV,GAEpB,EAAK1Z,MAAMwE,YAAYkV,GACrB,EAAK1Z,MAAMiI,QAAQC,KAAK,YAAYzD,IApDtB,EAuDlBkV,aAAe,SAACjU,GAEZkC,aAAaC,QAAQ,cAAc2B,KAAKC,UAAU/D,IAClD,EAAK4C,SAAS,CACVlB,GAAK1B,EAAKoO,cACV3T,KAAOuF,EAAKqO,sBACZ6F,aAAc,EACdC,UAAYnU,KA9DF,EAkElBoU,UAAY,WACR,EAAKxR,SAAS,CACVyR,eAAiB,EAAKzX,MAAMyX,iBApElB,EAwElBC,QAAU,WACN,EAAK1R,SAAS,CACV2R,WAAa,EAAK3X,MAAM2X,UACxBC,YAAc,EAAK5X,MAAM4X,cA3Ef,EA+ElBC,OAAQ,SAAC1V,GAGR,EAAK2V,UAAU3V,GACb,EAAKzE,MAAM8O,mBAAmB,EAAKxM,MAAM8E,KAnF1B,EAsFlBiT,aAAe,WACX,EAAKL,WAvFS,EA0FlBM,gBAAkB,SAAC5U,GAEnBkC,aAAaC,QAAQ,iBAAiB2B,KAAKC,UAAU/D,IACrD,EAAK6U,YA7Fa,EA+FlBA,SAAW,WACP,EAAKjS,SAAS,CACVkS,WAAa,EAAKlY,MAAMkY,aAjGd,EAqGlBC,YAAc,WACV,EAAKnS,SAAS,CACVoS,aAAe,EAAKpY,MAAMoY,eAvGhB,EA2GlBC,YAAc,WACV,EAAKrS,SAAS,CACVsR,aAAc,EACdc,aAAc,KA9GJ,EAkHlBN,UAAY,SAAC3V,GACT,EAAK6D,SAAS,CACVsS,aAAc,EAEd7U,OAAStB,KAtHC,EA0HlBoW,UAAY,SAACpW,GACT,EAAK2V,UAAU3V,GACf,IAAI8C,EAAS,EAAKjF,MAAM8E,GAAK,EAAK9E,MAAMwY,KACxC,EAAK9a,MAAM8O,mBAAmBvH,IA7HhB,EAiIlBgR,QAAU,SAACrF,GAGL,OAFaA,EACK6H,MAAM,KACZ,IAlId,EAAKzY,MAAO,CACRyD,OAAS,MACT5F,KAAO,oBACPyZ,aAAc,EACdG,eAAgB,EAChBG,YAAa,EACbM,WAAY,EACZQ,WAAa,GACbf,WAAY,EACZJ,UAAY,GACZa,aAAc,EACd3Q,SAAW,CACP,CAAC,UAAU,YAEfrE,KAAO,GACP0B,GAAK,GACL6T,MAAQrT,aAAamE,QAAQ,QAC7BhE,OAASH,aAAamE,QAAQ,UAC9BpE,QAAUC,aAAamE,QAAQ,WAC/B6O,aAAc,EACdE,KAAO,uBAtBG,E,gEA0BE,IACC/M,EAAahO,KAAKC,MAA3BgO,MAASD,OAEjBnG,aAAaC,QAAQ,UAAUkG,EAAO3G,IACtCrH,KAAKC,MAAMqa,aAAatM,EAAO3G,M,yCAGhB6C,EAAWnB,GAC1B,IAAMoS,EAAUtT,aAAamE,QAAQ,WAEvB9B,EAAUX,SAAWvJ,KAAKC,MAAMsJ,QAAUvJ,KAAKC,MAAMqa,aAAaa,K,+BAqG3E,IAAD,OAEJ,OACI,6BACI,kBAAC,WAAD,CACA/Q,UAAYpK,KAAKuC,MAAMyH,SACvBK,SAAS,aACTC,SAAW,IACXC,MAAM,UAEN,kBAACC,EAAA,EAAD,CAAW1K,MAAOV,GAAO8D,WACzB,kBAACuH,EAAA,EAAD,KACI,kBAACC,EAAA,EAAD,CAAKC,GAAI,EAAG7K,MAAOV,GAAOkE,KAEtBtD,KAAKuC,MAAM2X,UACX,kBAACpP,EAAA,EAAD,CAASC,UAAQ,EAACC,OAAK,GAC7B,+BACE,wBAAIlL,MAAOV,GAAOsX,WAChB,iCACA,wBAAI5W,MAAO,CAAC8Q,UAAU,WAAtB,UAEA,8CAGJ,+BAEI5Q,KAAKC,MAAMgL,UACX,kBAAC,EAAD,CAASxI,KAAMzC,KAAKC,MAAMgL,YAC5BjL,KAAKuC,MAAMoD,KAAKsO,OAAS,EAC5BjU,KAAKuC,MAAMoD,KAAKuF,KAAI,SAACvF,EAAKwF,GAAN,OAEb,wBAAIC,IAAKD,EAAOrL,MAAOV,GAAOmH,MAChCrG,QAAW,kBAAI,EAAK0Z,aAAajU,KAE3B,4BAAKwF,EAAM,GACX,4BAAKxF,EAAKqO,uBAEV,4BAAKrO,EAAKyT,wBAIrB,4BACW,kCACA,kCACA,qCASV,6BACE,uBAAGlZ,QAAS,kBAAI,EAAKoa,iBACvB,kBAAC,EAAD,CACAnY,IAAK,iEACL5B,MAAS,MAET,yBAAKT,MAAO,CAACgC,OAAS,cAIc6J,IAA1B3L,KAAKC,MAAMgb,WACX,6BACA,kBAAC,EAAD,CAAQjZ,QAAU,OAAQ5B,KAAQJ,KAAKuC,MAAMnC,KAAO,oBAAsB+F,KAAQ,GACtF5F,MAAQ,QACR,kBAAC8K,EAAA,EAAD,KAEQrL,KAAKC,MAAMgb,WAAW/P,KAAI,SAACvF,EAAKwF,GAAN,OAC1B,kBAACE,EAAA,EAAUC,KAAX,CAAgBF,IAAKD,EAAOrL,MAAOV,GAAOyX,WAC3C3W,QAAS,kBAAI,EAAKqa,gBAAgB5U,KADjC,IAEF,uBAAG7F,MAAOV,GAAOO,QAAjB,IAA2BgG,EAAKuO,qBASjC,QAST,kBAACxJ,EAAA,EAAD,CAAKC,GAAI,EAAG7K,MAAO,CAAC2B,UAAY,KAC3B,kBAAC,GAAD,CACAuE,OAAW,cAAgBhG,KAAKuC,MAAM2Y,MACtC7J,MAAS,YAAcrR,KAAKuC,MAAMyF,OAClCJ,QAAW,aAAe5H,KAAKuC,MAAMqF,UAIlC5H,KAAKuC,MAAMsX,YACX,yBAAK/Z,MAAOV,GAAOwX,WACvB,kBAAC,EAAD,CAAWxW,KAAQ,iBAAmBJ,KAAKuC,MAAMnC,KAAKgb,OAAO,GAAG,IAAK7a,MAAQ,SAC7E,kBAAC8K,EAAA,EAAD,CAAWvL,MAAOV,GAAOsH,WACrB,kBAAC2E,EAAA,EAAUC,KAAX,CAAgBxL,MAAOV,GAAOsH,UAC9BxG,QAAS,kBAAI,EAAK6Z,cADlB,IAEE,uBAAGja,MAAOV,GAAOO,QAAjB,gBACF,kBAAC0L,EAAA,EAAUC,KAAX,CAAgBxL,MAAOV,GAAOsH,UAC9BxG,QAAS,kBAAI,EAAKwa,gBADlB,IAEE,uBAAG5a,MAAOV,GAAOO,QAAjB,kBACF,kBAAC0L,EAAA,EAAUC,KAAX,CAAgBxL,MAAOV,GAAOsH,UAC7BxG,QAAS,kBAAI,EAAKka,OAAO,0BACzB,uBAAGta,MAAOV,GAAOO,QAAjB,4BACD,kBAAC0L,EAAA,EAAUC,KAAX,CAAgBxL,MAAOV,GAAOsH,UAC7BxG,QAAS,kBAAI,EAAK4a,UAAU,wBAC5B,uBAAGhb,MAAOV,GAAOO,QAAjB,4BAIH,MAQFK,KAAKuC,MAAMsY,YACf,kBAACnQ,EAAA,EAAD,CAAKC,GAAI,GACD,yBAAK7K,MAAO,CAAC2B,UAAY,KACzB,kBAAC,EAAD,CAAWrB,KAAQJ,KAAKuC,MAAMyD,OAASzF,MAAQ,SACnD,kBAAC8K,EAAA,EAAD,CAAWvL,MAAOV,GAAOsH,WAErB1G,KAAKC,MAAMgb,YAAcjb,KAAKC,MAAMgb,WAAWhH,OAAS,EACpDjU,KAAKC,MAAMgb,WAAW/P,KAAI,SAACvF,EAAKwF,GAAN,OAC1B,kBAACE,EAAA,EAAUC,KAAX,CAAgBF,IAAKD,EAAOrL,MAAOV,GAAOsH,UAC3CxG,QAAS,kBAAI,EAAKqa,gBAAgB5U,KADjC,IAEF,uBAAG7F,MAAOV,GAAOO,QAAjB,IAA2BgG,EAAKuO,cAAhC,IAAiD,EAAKsE,QAAQ7S,EAAK0V,yBAG/D,QAKD,MAIpBrb,KAAKuC,MAAMyX,cACX,kBAAC,GAAD,CACAjI,MAAS/R,KAAKuC,MAAMuX,UAAU9F,sBAC9BhO,OAAWhG,KAAKuC,MAAMnC,KAEtBwH,QAAW5H,KAAKuC,MAAMuX,UAAUnB,mBAChCf,IAAO5X,KAAKuC,MAAMuX,UAAUZ,kBAC5B9F,KAAQpT,KAAKuC,MAAMuX,UAAUT,gBAC7BxB,SAAY7X,KAAKuC,MAAMuX,UAAUjB,eACjCzX,KAAQpB,KAAKuC,MAAMuX,UAAUV,mBAC7B3B,QAAW,kBAAI,EAAKsC,eAElB,KAIE/Z,KAAKuC,MAAMkY,UACX,kBAAC,GAAD,CACAhY,KAAOzC,KAAKuC,MAAMkY,UAClBhD,QAAWzX,KAAKwa,WAGV,KAINxa,KAAKuC,MAAMoY,YACX,kBAAC,GAAD,CACAlD,QAAWzX,KAAK4a,cAEd,W,gDAlRiB3a,EAAMsC,GAClC,OAAiB,OAAdtC,EAAM0F,WAA8BgG,IAAd1L,EAAM0F,KACzB,CACFA,KAAO1F,EAAM0F,MAGd,S,GAhDctF,aAmWVuL,oBA7Bf,SAAyBrJ,GACxB,MAAO,CAGAoD,KAAOpD,EAAMgX,iBAAiB5T,KAC9BsV,WAAa1Y,EAAMkS,eAAe9O,KAClC4D,OAAShH,EAAMgX,iBAAiBhQ,OAChCiQ,UAAYjX,EAAMgX,iBAAiBC,UACnCvO,UAAY1I,EAAMgX,iBAAiBtO,cAI3C,SAA4BiB,GAC3B,MAAO,CACAoO,aAAe,SAAC5V,GACXwH,EDpWH,CACF9K,KAAOsC,GAAWoT,WAClBnS,QCkW2BD,KAExBD,YAAc,SAACC,GACXwH,EAASzH,EAAYC,KAEzBqK,mBAAqB,SAACrK,GACrBwH,EAAS6C,GAAmBrK,KAE9B4W,eAAiB,SAAC5W,GAChBwH,EvBrWD,CACH9K,KAAOsC,GAAWkL,sBAClBjK,QuBmW4BD,QAKrBkH,CAA6C6N,ICzV7Cra,GA1BA,CAEX4G,OAAS,CACLzG,cAAc,EACdC,WAAa+b,IAAY7b,UACzBK,MAAQwb,IAAYxb,MAAMqP,OAE9BrC,UAAY,CACRxM,MAAO,IAEPuB,OAAQ,OACRpB,WAAa,eAGf8a,eAAiB,CACf5a,aAAe,IAGnBiM,WAAa,CACTpL,UAAY,GACZlC,cAAc,EACdC,WAAa+b,IAAY7b,UACzBK,MAAQwb,IAAYxb,MAAMqP,QChBnB1L,GARI,CAEf+X,eAAiB,iBACjBC,uBAAyB,yBACzBC,uBAAyB,0B,ICUvBC,G,kDAEF,WAAY3b,GAAO,IAAD,8BACd,cAAMA,IAwDVoO,UAAY,SAACD,GACT,EAAK7F,SAAS,CACVwF,UAAWK,KA3DD,EA+DlBqH,YAAc,SAAC5M,EAAEzB,GACf,IAAI7F,EAAQsH,EAAEF,OAAOpH,MACrB,EAAKgH,UACH,SAAAQ,GAAS,MAAK,CACZ8S,WAAW,2BACN9S,EAAU8S,YADL,kBAEPzU,EAAe,gCAATA,GAAmD,oBAATA,GAChC,sBAATA,GAA0C,mBAATA,EAA6BuO,SAASpU,GAASA,SAtE9E,EA6EhBua,OAAS,WAEP,IAAMtU,EAAS,CACb,WAAc,EAAKjF,MAAM8E,GACzB,+BAAkC,EAAK9E,MAAMsZ,WAAWE,+BACxD,mBAAsB,EAAKxZ,MAAMsZ,WAAWlD,mBAC5C,gBAAmB,EAAKpW,MAAMsZ,WAAW5C,gBACzC,gBAAmB,EAAK1W,MAAMsZ,WAAWG,gBACzC,sBAAyB,EAAKzZ,MAAMsZ,WAAW7H,sBAC/C,kBAAqB,EAAKzR,MAAMsZ,WAAW3C,kBAC3C,gBAAmB,2BACnB,4BAA+B,EAAK3W,MAAMsZ,WAAWI,4BACrD,eAAkB,EAAK1Z,MAAMsZ,WAAWhD,gBAG1CxQ,QAAQC,IAAI,EAAK/F,MAAMsZ,YACtB,EAAK5b,MAAMic,eAAe1U,IA3F3B,EAAKjF,MAAQ,CACT8E,GAAK,GACL6T,MAAQrT,aAAamE,QAAQ,QAC7BhE,OAASH,aAAamE,QAAQ,UAC9BpE,QAAUC,aAAamE,QAAQ,WAC/B+B,UAAY,EACZoO,OAAS,GACTN,WAAY,CAETtU,WAAa,GACbwU,+BAAgC,GAChCpD,mBAAoB,GACpBM,gBAAiB,WACjB+C,gBAAiB,EACjBhI,sBAAuB,GACvBkF,kBAAoB,EACpBG,gBAAkB,2BAClB4C,4BAA8B,EAC9BpD,eAAgB,GAuBnB7O,SAAW,CACT,CAAC,UAAU,aA5CH,E,gEAiDE,IACCgE,EAAahO,KAAKC,MAA3BgO,MAASD,OACjB3F,QAAQC,IAAI,oBAAoB0F,EAAO3G,IACxCrH,KAAKuI,SAAS,CACVlB,GAAK2G,EAAO3G,O,+BA2CV,IAAD,OACJ,OACI,6BACG,kBAAC,WAAD,CACC+C,UAAYpK,KAAKuC,MAAMyH,SACvBK,SAAS,aACTC,SAAW,IACXC,MAAM,UAGN,kBAACC,EAAA,EAAD,CAAW1K,MAAO,CAACe,OAAS,UAE5B,kBAAC4J,EAAA,EAAD,KACI,kBAACC,EAAA,EAAD,CAAK0R,GAAI,EAAGtc,MAAO,CAAC2B,UAAU,KAC9B,kBAAC,OAAD,CAAMsM,UAAW/N,KAAKuC,MAAMwL,UAAW7M,SAAU,SAACkN,GAAD,OAAS,EAAKC,UAAUD,IAAQE,QAAM,EAACxO,MAAOV,GAAO4G,QACtG,kBAAC,MAAD,qBAEwC,YAA1ChG,KAAKuC,MAAMsZ,WAAW5C,gBAAiC,kBAAC,MAAD,qBAA0B,kBAAC,MAAD,sBAE/E,kBAAC,MAAD,sBAEA,6BAASnZ,MAAO,CAAC2B,UAAW,KAC5B,yBAAK3B,MAAgC,IAAzBE,KAAKuC,MAAMwL,UAAkB,CAAC5K,QAAU,SAAW,CAACA,QAAU,SACtE,yBAAKrD,MAAOV,GAAO2N,WACnB,yBAAKjN,MAAOV,GAAOoc,gBACnB,kBAAC,EAAD,CAAOpb,KAAK,oBACZ,kBAAC,EAAD,CAAYkB,YAAc,OAC1BH,SAAU,SAAC0H,GAAD,OAAK,EAAK4M,YAAY5M,EAAE,sCAGlC,yBAAK/I,MAAOV,GAAOoc,gBACnB,kBAAC,EAAD,CAAOpb,KAAK,6BACZ,kBAAC,EAAD,CAAakB,YAAc,OAC1BH,SAAU,SAAC0H,GAAD,OAAK,EAAK4M,YAAY5M,EAAE,0BAGnC,yBAAK/I,MAAOV,GAAOoc,gBACnB,kBAAC,EAAD,CAAOpb,KAAK,qBACZ,kBAAC,GAAD,CAAce,SAAU,SAAC0H,GAAD,OAAK,EAAK4M,YAAY5M,EAAE,uBAEhD,yBAAK/I,MAAOV,GAAOoc,gBACnB,kBAAC,EAAD,CAAOpb,KAAK,kCACZ,kBAAC,EAAD,CAAYkB,YAAc,OAC1BH,SAAU,SAAC0H,GAAD,OAAK,EAAK4M,YAAY5M,EAAE,6BAGlC,yBAAK/I,MAAOV,GAAOoc,gBACnB,kBAAC,EAAD,CAAOpb,KAAK,iBACR,kBAAC,GAAD,CACA+M,OAAS,QACTG,OAAS,QACTI,GAAG,OACHL,MAAM,UAAWM,OAAO,WACxBP,OAAO,UAAUG,OAAO,WACxBpM,SAAU,SAAC0H,GAAD,OAAK,EAAK4M,YAAY5M,EAAE,uBAEtC,yBAAK/I,MAAOV,GAAOoc,gBACnB,kBAAC,EAAD,CAAYpb,KAAK,SAEbD,QAAU,kBAAI,EAAKkO,UAAU,IAC7B9N,MAAS,IACTM,OAAU,QAMjB,yBAAKf,MAAgC,IAAzBE,KAAKuC,MAAMwL,UAAkB,CAAC5K,QAAU,SAAW,CAACA,QAAU,SAE/B,aAA1CnD,KAAKuC,MAAMsZ,WAAW5C,gBAEtB,yBAAMnZ,MAAOV,GAAO2N,WACpB,yBAAKjN,MAAOV,GAAOoc,gBACb,kBAAC,EAAD,CAAOpb,KAAK,wBACZ,kBAAC,EAAD,CAAWkB,YAAc,OAAOjC,MAAM,uBAAuB+B,KAAK,SAClEqK,QAAQ,uBAAsBC,MAAO,kBACpCvK,SAAU,SAAC0H,GAAD,OAAK,EAAK4M,YAAY5M,EAAE,yBAElC,yBAAK/I,MAAOV,GAAOoc,gBACpB,kBAAC,EAAD,CAAOpb,KAAK,iBAAgB,kBAAC,EAAD,CAAWgB,KAAK,OAAO/B,MAAM,GACzD8B,SAAU,SAAC0H,GAAD,OAAK,EAAK4M,YAAY5M,EAAE,uBAElC,yBAAK/I,MAAOV,GAAOoc,gBACnB,kBAAC,EAAD,CAAOpb,KAAK,oCACZ,kBAAC,EAAD,CAAWkB,YAAc,OAAOjC,MAAM,gCAAgC+B,KAAK,SAC1EqK,QAAQ,uBAAsBC,MAAO,kBACrCvK,SAAU,SAAC0H,GAAD,OAAK,EAAK4M,YAAY5M,EAAE,iCAElC,yBAAK/I,MAAOV,GAAOoc,gBACpB,kBAAC,EAAD,CAAOpb,KAAK,sBACZ,kBAAC,EAAD,CAAWkB,YAAc,OAAOjC,MAAM,oBACtC8B,SAAU,SAAC0H,GAAD,OAAK,EAAK4M,YAAY5M,EAAE,mCAElC,yBAAK/I,MAAOV,GAAOoc,gBACnB,kBAAC,EAAD,CAAOpb,KAAK,kBACZ,kBAAC,EAAD,CAAWkB,YAAc,OAAOjC,MAAM,gBACtC8B,SAAU,SAAC0H,GAAD,OAAK,EAAK4M,YAAY5M,EAAE,sBAElC,kBAAC,EAAD,CAAYzI,KAAK,SAChBD,QAAU,kBAAI,EAAKkO,UAAU,IAC7B9N,MAAS,IACTM,OAAU,MAGnB,yBAAKf,MAAOV,GAAO2N,WACX,kBAAC,EAAD,CAAO3M,KAAK,sBACZ,kBAAC,EAAD,CAAWkB,YAAc,OAAOjC,MAAM,oBAAsB8B,SAAU,SAAC0H,GAAD,OAAK,EAAK4M,YAAY5M,EAAE,sBAC9F,kBAAC,EAAD,CAAOzI,KAAK,6BAEZ,kBAAC,GAAD,CACA+M,OAAS,WACTG,OAAS,WACTI,GAAG,OACHL,MAAM,KAAMM,OAAO,MACnBP,QAAQ,EAAOG,QAAQ,EACvBpM,SAAU,SAAC0H,GAAD,OAAK,EAAK4M,YAAY5M,EAAE,+BAElC,kBAAC,EAAD,CAAOzI,KAAK,yBACZ,kBAAC,EAAD,CAAWkB,YAAc,OAAOjC,MAAM,uBAAuB+B,KAAK,SAClEsK,MAAQ,0BAA0BD,QAAQ,uBAC1CtK,SAAU,SAAC0H,GAAD,OAAK,EAAK4M,YAAY5M,EAAE,yBAElC,kBAAC,EAAD,CAAOzI,KAAO,4BACd,kBAAC,GAAD,CACA+M,OAAS,UACTG,OAAS,UACTI,GAAG,OACHL,MAAM,UAAWM,OAAO,SACxBP,OAAO,QAAQG,OAAO,OACtBpM,SAAU,SAAC0H,GAAD,OAAK,EAAK4M,YAAY5M,EAAE,qCAElC,kBAAC,EAAD,CAAOzI,KAAK,sBACZ,kBAAC,GAAD,CACA+M,OAAS,WACTG,OAAS,WACTI,GAAG,OACHL,MAAM,UAAWM,OAAO,SACxBP,OAAO,QAAQG,OAAO,OACtBpM,SAAU,SAAC0H,GAAD,OAAK,EAAK4M,YAAY5M,EAAE,8BAEnC,kBAAC,EAAD,CAAOzI,KAAK,oBACX,kBAAC,EAAD,CAAWkB,YAAc,OAAOjC,MAAM,kBAAkB+B,KAAK,SAC7DsK,MAAQ,0BAA0BD,QAAQ,uBAC1CtK,SAAU,SAAC0H,GAAD,OAAK,EAAK4M,YAAY5M,EAAE,oBAElC,kBAAC,EAAD,CAAOzI,KAAK,kBACZ,kBAAC,GAAD,CACA+M,OAAS,UACTG,OAAS,UACTI,GAAG,OACHL,MAAM,UAAWM,OAAO,SACxBP,OAAO,QAAQG,OAAO,OACtBpM,SAAU,SAAC0H,GAAD,OAAK,EAAK4M,YAAY5M,EAAE,4BAElC,kBAAC,EAAD,CAAOzI,KAAK,2BACZ,kBAAC,EAAD,CAAWkB,YAAc,OAAOjC,MAAM,yBAAyB+B,KAAK,SACpEsK,MAAQ,0BAA0BD,QAAQ,uBAC1CtK,SAAU,SAAC0H,GAAD,OAAK,EAAK4M,YAAY5M,EAAE,0BAElC,kBAAC,EAAD,CAAOzI,KAAK,gBACZ,kBAAC,EAAD,CAAWkB,YAAc,OAAOjC,MAAM,cAAc+B,KAAK,SACzDsK,MAAQ,0BAA0BD,QAAQ,uBAC1CtK,SAAU,SAAC0H,GAAD,OAAK,EAAK4M,YAAY5M,EAAE,gBAElC7I,KAAKuC,MAAM4Z,OAAOlI,OAAS,EAAM,kBAAC,EAAD,CAAO7T,KAAK,cAAiB,KAC7DJ,KAAKuC,MAAM4Z,OAAOjR,KAAI,SAAApC,GAAK,OAC1B,kBAAC,EAAD,CAAWxH,YAAc,OAAOjC,MAAM,UAAU+L,IAAKtC,EAAO3H,SAAU,SAAC0H,GAAD,OAAK,EAAKwT,oBAAoBxT,EAAEC,SAGxG,kBAAC,EAAD,CAAY1I,KAAK,SAChBD,QAAS,kBAAI,EAAKkO,UAAU,IAC5B9N,MAAS,IACTM,OAAU,KAEV,yBAAKf,MAAO,CAAC2B,UAAY,QAKhC,yBAAK3B,MAAgC,IAAzBE,KAAKuC,MAAMwL,UAAkB,CAAC5K,QAAU,SAAW,CAACA,QAAU,SACxE,yBAAKrD,MAAOV,GAAO2N,WAGf,kBAAC,EAAD,CAAO3M,KAAK,qBACZ,kBAAC,GAAD,CACA+M,OAAS,MACTG,OAAS,MACTI,GAAG,OACHL,MAAM,KAAMM,OAAO,MACnBP,OAAO,KAAKG,OAAO,MACnBpM,SAAU,SAAC0H,GAAD,OAAK,EAAK4M,YAAY5M,EAAE,4BAClC,kBAAC,EAAD,CAAOzI,KAAK,uBACZ,kBAAC,GAAD,CACA+M,OAAS,QACTG,OAAS,QACTI,GAAG,OACHL,MAAM,KAAMM,OAAO,MACnBP,OAAO,KAAKG,OAAO,MACnBpM,SAAU,SAAC0H,GAAD,OAAK,EAAK4M,YAAY5M,EAAE,4BAClC,kBAAC,EAAD,CAAYzI,KAAK,WACjBkc,SAAYtc,KAAKuC,MAAMga,aACvBpc,QAAS,kBAAI,EAAK2b,UAClBvb,MAAS,IACRM,OAAU,KAEX,yBAAKf,MAAOV,GAAOyN,YAEjB7M,KAAKC,MAAMuc,QACX,0BAAM1c,MAAOV,GAAOyN,YAApB,yCAA8E,0BAAM/M,MAAOV,GAAOyN,YAApB,IAAkC7M,KAAKC,MAAMkK,IAA7C,WAUxF,kBAACO,EAAA,EAAD,CAAK0R,GAAI,EAAGtc,MAAO,CAAC2B,UAAY,MAChC,kBAACiJ,EAAA,EAAD,CAAK0R,GAAI,EAAGtc,MAAO,CAAC2B,UAAY,KAC5B,kBAAC,GAAD,CACCuE,OAAW,cAAgBhG,KAAKuC,MAAM2Y,MACtC7J,MAAS,YAAcrR,KAAKuC,MAAMyF,OAClCJ,QAAW,aAAe5H,KAAKuC,MAAMqF,mB,GAjU3BvH,aA6VpBuL,oBAhBf,SAAyBrJ,GACxB,MAAO,CACAia,QAAUja,EAAMka,kBAAkBD,QAClCrS,IAAM5H,EAAMka,kBAAkBtS,QAKtC,SAA4B+B,GAC3B,MAAO,CACNgQ,eAAiB,SAACxX,GACRwH,ECnWD,CACH9K,KAAOsC,GAAW+X,eAClB9W,QDiW4BD,QAKrBkH,CAA6CgQ,IE3V7ClY,GAhBI,CAEfgZ,cAAgB,gBAChBC,sBAAwB,wBACxBC,sBAAwB,wBACxBC,gBAAkB,kBAClBC,wBAA0B,0BAC1BC,wBAA0B,0BAC1BC,gBAAkB,kBAClBC,wBAA0B,0BAC1BC,wBAA0B,0BAC1BC,gBAAkB,kBAClBC,wBAA0B,0BAC1BC,wBAA0B,2BCX9B,IAeeje,GAfD,CACVmH,MAAQ,CACJ/G,WAAaC,IAAYC,UACzBJ,SAAW,GACXwC,OAAS,IAEb2E,UAAW,CAEPtD,QAAU,OACViD,cAAgB,QCClBkX,G,kDACF,WAAYrd,GAAO,IAAD,8BACd,cAAMA,IA6CV6I,MAAQ,SAACD,EAAEzB,GACT,IAAI7F,EAAQsH,EAAEF,OAAOpH,MACrB,EAAKgH,UACH,SAAAQ,GAAS,MAAK,CACZC,QAAQ,2BACHD,EAAUC,SADR,kBAEJ5B,EAAO7F,SApDE,EA0DlBgc,YAAc,SAAC1U,GACb,IAAItH,EAAQsH,EAAEF,OAAOpH,MAErB,EAAKgH,SAAS,CACZiV,YAAejc,KA9DD,EAkElB0H,OAAS,WAEP,IAAMzB,EAAS,CACf,cAAkB,EAAKjF,MAAMyG,QAAQyU,cACpC,SAAY,EAAKlb,MAAMyG,QAAQE,SAC/B,SAAY,EAAK3G,MAAMyG,QAAQG,SAC/B,UAAa,EAAK5G,MAAMyG,QAAQvB,UAChC,SAAY,EAAKlF,MAAMyG,QAAQtB,SAC/B,MAAS,EAAKnF,MAAMyG,QAAQI,MAC5B,SAAY,EAAK7G,MAAMyG,QAAQrB,SAC/B,UAAa,EAAKpF,MAAMyG,QAAQK,WAGjC,EAAKpJ,MAAMyd,aAAalW,GACxB,EAAK8B,eAhFW,EAoFlBA,YAAc,WACZ,EAAKf,SAAS,CACZgB,QAAS,EACTP,QAAS,CACPvB,UAAW,GACXC,SAAU,GACV+V,cAAgB,GAChBrU,MAAO,GACPzB,SAAU,GACV0B,UAAW,GACXH,SAAU,GACVC,SAAU,OA/FE,EAqGlBW,UAAY,SAACnE,GAAS,IAAD,EAEnB,EAAK4C,SAAS,CACZgB,QAAS,EACTnJ,KAAO,mBACPud,MAAQhY,EAAKgY,MACb3U,SAAO,mBACJ,gBAAmBrD,EAAK8X,eADpB,cAEJ,YAAe9X,EAAK8B,WAFhB,cAGJ,WAAc9B,EAAK+B,UAHf,cAIJ,QAAW/B,EAAKyD,OAJZ,cAKJ,WAAczD,EAAKgC,UALf,cAMJ,YAAehC,EAAK0D,WANhB,cAOJ,WAAc1D,EAAKuD,UAPf,MA3GO,EAwHlBK,OAAS,WACP,IAAMqU,EAAQ,EAAKrb,MAAMob,MACnBnW,EAAS,CACb,MAAU,EAAKjF,MAAMob,MACrB,cAAkB,EAAKpb,MAAMyG,QAAQyU,cACpC,SAAY,EAAKlb,MAAMyG,QAAQE,SAC/B,UAAa,EAAK3G,MAAMyG,QAAQvB,UAChC,SAAY,EAAKlF,MAAMyG,QAAQtB,SAC/B,MAAS,EAAKnF,MAAMyG,QAAQI,MAC5B,SAAY,EAAK7G,MAAMyG,QAAQrB,SAC/B,UAAa,EAAKpF,MAAMyG,QAAQK,WAGjC,EAAKpJ,MAAM4d,eAAerW,EAAOoW,GACjC,EAAKtU,eAtIS,EAyIlBwU,OAAS,WACT,IAAMzW,EAAK,EAAK9E,MAAMob,MACtB,EAAK1d,MAAM8d,eAAe1W,GAC1B,EAAKiC,eA5Ia,EA+IlB0U,OAAS,WACP,EAAKzV,SAAS,CACZgB,QAAS,EACTnJ,KAAO,mBACP4I,QAAS,CACPvB,UAAW,GACXC,SAAU,GACV+V,cAAgB,GAChBrU,MAAO,GACPzB,SAAU,GACV0B,UAAW,GACXH,SAAU,GACVC,SAAU,OA3JE,EAkKlB8U,eAAiB,WAEhB5V,QAAQC,OAlKL,EAAK/F,MAAQ,CAEXyH,SAAW,CAET,CAAC,UAAU,YAEbT,QAAS,EACTnJ,KAAO,mBACPud,MAAQ,KACRhY,KAAO,GACP6X,YAAc,GACdxU,QAAS,CACPvB,UAAW,GACXC,SAAU,GACV+V,cAAgB,GAChBrU,MAAO,GACPzB,SAAU,GACV0B,UAAW,GACXH,SAAU,GACVC,SAAU,KArBA,E,gEA4BhBnJ,KAAKC,MAAMie,gB,yCAGIhU,EAAWnB,GAEdmB,EAAUiU,UAAYne,KAAKC,MAAMke,SAAWne,KAAKC,MAAMie,gB,+BAuI5D,IAAD,OACJ,OACI,6BACG,kBAAC,WAAD,CACC9T,UAAYpK,KAAKuC,MAAMyH,SACvBK,SAAS,aACTC,SAAW,IACXC,MAAM,UAGN,yBAAKzK,MAAO,CAACgC,OAAO,IACpB,kBAAC0I,EAAA,EAAD,KACA,kBAACC,EAAA,EAAD,KACI,kBAACC,EAAA,EAAD,CAAMC,GAAI,EAAG7K,MAAO,CAAC2B,UAAU,KACnC,kBAACqJ,EAAA,EAAD,CAAQC,UAAQ,EAACC,OAAK,EAAElL,MAAO,CAACa,aAAe,KAC7C,+BACE,wBAAIb,MAAO,CAACU,gBAAgB,UAAUT,MAAM,UAC1C,iCAEA,oCACA,qCACA,sCACA,2CAGJ,2BAAOD,MAAOV,GAAOmH,YAEGoF,IAApB3L,KAAKuC,MAAMoD,KACX3F,KAAKuC,MAAMoD,KAAKuF,KAAI,SAACvF,EAAKwF,GAAN,OACpB,wBAAIC,IAAKD,EAAOrL,MAAO,CAACH,OAAQ,QAASO,QAAS,kBAAI,EAAK4J,UAAUnE,KACpE,4BAAKwF,EAAM,GAEZ,4BAAKxF,EAAK8B,WACV,4BAAK9B,EAAKyD,OACV,4BAAKzD,EAAKgC,UACV,4BAAKhC,EAAKuD,cAEL,QAQX,kBAACwB,EAAA,EAAD,CAAKC,GAAI,EAAI7K,MAAO,CAACU,gBAAgB,cAAciB,UAAY,KAEjE,kBAAC,EAAD,CAASO,QAAQ,OAAQ5B,KAAQJ,KAAKuC,MAAMnC,KAAMG,MAAQ,QAC1D,kBAACgL,EAAA,EAAD,CAAMzL,MAAO,CAACU,gBAAgB,gBAC5B,kBAAC+K,EAAA,EAAKC,MAAN,KACA,kBAAC,EAAD,CAAOpL,KAAK,iBACZ,kBAAC,EAAD,CAAYa,YAAc,GAC1BM,MAAUvB,KAAKuC,MAAMyG,QAAQyU,cAE7Btc,SAAU,SAAC0H,GAAD,OAAK,EAAKC,MAAMD,EAAE,qBAG5B,kBAAC0C,EAAA,EAAKC,MAAN,KACA,kBAAC,EAAD,CAAOpL,KAAK,gBACZ,kBAAC,EAAD,CAAYa,YAAc,GAC1BM,MAAWvB,KAAKuC,MAAMyG,QAAQvB,UAC9BtG,SAAU,SAAC0H,GAAD,OAAK,EAAKC,MAAMD,EAAE,iBAG5B,kBAAC0C,EAAA,EAAKC,MAAN,KACA,kBAAC,EAAD,CAAOpL,KAAK,eACZ,kBAAC,EAAD,CAAYa,YAAc,GACzBM,MAAWvB,KAAKuC,MAAMyG,QAAQtB,SAC/BvG,SAAU,SAAC0H,GAAD,OAAK,EAAKC,MAAMD,EAAE,gBAG5B,kBAAC0C,EAAA,EAAKC,MAAN,KACA,kBAAC,EAAD,CAAOpL,KAAK,gBACZ,kBAAC,EAAD,CAAYa,YAAc,GACzBM,MAAUvB,KAAKuC,MAAMyG,QAAQI,MAC9BjI,SAAU,SAAC0H,GAAD,OAAK,EAAKC,MAAMD,EAAE,aAG5B,kBAAC0C,EAAA,EAAKC,MAAN,KACA,kBAAC,EAAD,CAAOpL,KAAK,iBACZ,kBAAC,EAAD,CAAYa,YAAc,GAC1BM,MAAUvB,KAAKuC,MAAMyG,QAAQrB,SAC7B8D,QAAU,uBAAsBrK,KAAK,SAASsK,MAAO,wBACzCvK,SAAU,SAAC0H,GAAD,OAAK,EAAKC,MAAMD,EAAE,gBAGxC,kBAAC0C,EAAA,EAAKC,MAAN,KACA,kBAAC,EAAD,CAAOpL,KAAK,gBACZ,kBAAC,EAAD,CAAYa,YAAc,GAC1BM,MAAWvB,KAAKuC,MAAMyG,QAAQK,UAC9BlI,SAAU,SAAC0H,GAAD,OAAK,EAAKC,MAAMD,EAAE,iBAG5B,kBAAC0C,EAAA,EAAKC,MAAN,KACA,kBAAC,EAAD,CAAOpL,KAAK,cACZ,kBAAC,EAAD,CAAYa,YAAc,GAC1BM,MAAWvB,KAAKuC,MAAMyG,QAAQE,SAC9B/H,SAAU,SAAC0H,GAAD,OAAK,EAAKC,MAAMD,EAAE,gBAG5B,kBAAC0C,EAAA,EAAKC,MAAN,KACA,kBAAC,EAAD,CAAOpL,KAAK,cACZ,kBAAC,EAAD,CAAYa,YAAc,SAASG,KAAK,WAAWD,SAAU,SAAC0H,GAAD,OAAK,EAAKC,MAAMD,EAAE,gBAG/E,kBAAC0C,EAAA,EAAKC,MAAN,KACA,kBAAC,EAAD,CAAOpL,KAAK,qBACZ,kBAAC,EAAD,CAAYa,YAAc,SAAUG,KAAK,WAAWD,SAAU,SAAC0H,GAAD,OAAK,EAAK0U,YAAY1U,OAIpF,kBAAC0C,EAAA,EAAKC,MAAN,KAEKxL,KAAKuC,MAAMgH,OAMZ,yBAAKzJ,MAAOV,GAAOqH,WACnB,kBAAC,EAAD,CACAzE,QAAW,SACX5B,KAAO,WACPG,MAAQ,OACRJ,QAAS,kBAAI,EAAKoJ,YAElB,kBAAC,EAAD,CACAvH,QAAW,UACX5B,KAAO,SACPG,MAAS,GACTJ,QAAS,kBAAI,EAAK6d,YAGlB,kBAAC,EAAD,CACAhc,QAAW,OACX5B,KAAO,SACPG,MAAS,GACTJ,QAAS,kBAAI,EAAK2d,aAvBlB,kBAAC,EAAD,CACA1d,KAAO,UACPG,MAAQ,MACRJ,QAAS,kBAAI,EAAK8I,uB,gDAxPJhJ,EAAMsC,GAClC,OAAItC,EAAM0F,OAASpD,EAAMoD,KACnB,CACFA,KAAO1F,EAAM0F,MAGd,S,GA5CetF,aAiWTuL,oBA1Bf,SAAyBrJ,GACxB,MAAO,CAEAoD,KAAOpD,EAAM6b,gBAAgBzY,KAC7BwY,QAAU5b,EAAM6b,gBAAgBD,YAKxC,SAA4BjS,GAC3B,MAAO,CACNgS,YAAc,WACJhS,EC5VF,CACF9K,KAAOsC,GAAWgZ,iBD6VtBgB,aAAe,SAAChZ,GACRwH,ECzVF,CACF9K,KAAOsC,GAAWmZ,gBAClBlY,QDuV0BD,KAE9BqZ,eAAiB,SAACrZ,GACVwH,ECrVF,CACF9K,KAAOsC,GAAWsZ,gBAClBrY,QDmV4BD,KAEhCmZ,eAAiB,SAAC1R,EAAKC,GACfF,ECjVF,CACF9K,KAAOsC,GAAWyZ,gBAClBxY,QAAU,CD+UkBwH,EAAKC,SAK1BR,CAA6C0R,IEjV7Cle,GA1BD,CACV8D,UAAY,CACRC,QAAQ,OACRqK,WAAa,OASjBpK,KAAO,CAEH7C,MAAQ,MACRG,WAAa,cACbe,UAAY,KAEhB+B,OAAS,CACLgK,WAAa,GACbzN,MAAQN,IAAYM,MAAM0D,MAC1BlE,cAAgB,ICjBTmE,GANI,CACf2a,kBAAoB,oBACpBC,0BAA4B,4BAC5BC,0BAA4B,6B,ICQ1BC,G,kDACF,WAAYve,GAAO,IAAD,8BACd,cAAMA,IAWNkJ,SAAW,SAACN,GACR,IAAItH,EAAQsH,EAAEF,OAAOpH,MACrB,EAAKgH,SAAS,CACVY,SAAW5H,KAfL,EAmBdkd,eAAiB,WAEhB,IAAIjX,EAAS,CAEN,YAAe,EAAKjF,MAAM4G,UAGP,KAAvB,EAAK5G,MAAM4G,SACd,EAAKlJ,MAAMye,aAAalX,GAEpB,EAAKe,SAAS,CACVK,MAAO,EACPuV,QAAU,qBACZ,kBAAI9V,QAAQC,IAAI,EAAK/F,MAAMqG,KAAO,EAAKrG,MAAM4b,aA9BpD,EAAK5b,MAAQ,CACT4G,SAAW,GACXgV,QAAU,GACVvV,MAAO,EACPoB,SAAW,CAEV,CAAC,UAAU,aARF,E,qDAmCT,IAAD,OACJ,OACI,yBAAKlK,MAAO,IACR,kBAAC,WAAD,CACEsK,UAAYpK,KAAKuC,MAAMyH,SACvBK,SAAS,aACTC,SAAW,IACXC,MAAM,SACNzK,MAAO,CAACe,OAAS,UAEtB,yBAAKf,MAAOV,GAAO8D,WAChB,kBAACyJ,EAAA,EAAD,CAAM7M,MAAOV,GAAOgE,MAEQ,IAApBpD,KAAKC,MAAM2I,KACX,0BAAM9I,MAAOV,GAAOoE,QAApB,iBAAmD,KAItD,kBAACmJ,EAAA,EAAKhK,KAAN,KACD,kBAAC,EAAD,CAAOvC,KAAK,eAAeL,MAAQ,UACnC,kBAAC,EAAD,CAAWkB,YAAa,UAAUG,KAAK,WAAWD,SAAU,SAACuD,GAAD,OAAO,EAAKyE,SAASzE,MAEjF,kBAAC,EAAD,CAAY1C,QAAQ,OACZjC,MAAQ,QACRQ,MAAS,MACTH,KAAO,UAAUD,QAASH,KAAKye,kBAIlCze,KAAKC,MAAM0e,KACX,0BAAM7e,MAAOV,GAAOoE,QAApB,IAA8BxD,KAAKC,MAAMke,QAAzC,KACDne,KAAKuC,MAAMqG,KACX,0BAAM9I,MAAOV,GAAOoE,QAApB,IAA8BxD,KAAKuC,MAAM4b,QAAzC,KACA,0BAAMre,MAAOV,GAAOoE,QAApB,IAA8BxD,KAAKC,MAAMke,QAAzC,a,GArEA9d,aAsGTuL,oBAnBf,SAAyBrJ,GACxB,MAAO,CAEDoc,KAAOpc,EAAMqc,iBAAiBD,KAC9BR,QAAU5b,EAAMqc,iBAAiBT,QACjCvV,KAAOrG,EAAMqc,iBAAiBhW,SAKrC,SAA4BsD,GAC3B,MAAO,CACNwS,aAAe,SAACha,GACNwH,ECxGD,CACH9K,KAAOsC,GAAW2a,kBAClB1Z,QDsG0BD,QAMnBkH,CAA6C4S,IEnG7C9a,GAdI,CAEfmb,kBAAoB,oBACpBC,0BAA4B,4BAC5BC,0BAA4B,4BAC5BC,gCAAkC,kCAClCC,wCAA0C,0CAC1CC,wCAA0C,0CAC1CC,uBAAyB,yBACzBC,+BAAiC,iCACjCC,+BAAiC,mCCR9B,SAASC,KACZ,MAAM,CACFle,KAAOsC,GAAWmb,mBCF1B,IAiCezf,GAjCC,CAEZ8D,UAAY,CACRzB,UAAY,IAGhBuE,OAAS,CACLxF,gBAAkB,cAClBhB,WAAaC,IAAYC,UACzBJ,SAAW,IAEfigB,eAAiB,CACbjgB,SAAW,GACXkB,gBAAgB,UAChBT,MAAQ,SAEZJ,OAAS,CACLA,OAASF,IAAYE,QAEzBiO,UAAY,CACRrN,MAAQ,IACRM,OAAS,GACTrB,WAAaC,IAAYC,WAE7B8f,YAAc,CACV/d,UAAY,GACZjC,WAAaC,IAAYC,UACzBJ,SAAW,GACXS,MAAQ,UCnBV0f,G,kDAEF,WAAYxf,GAAO,IAAD,8BACd,cAAMA,IAuCTyf,SAAW,SAAC/Z,GACT,EAAK4C,SAAS,CACVwL,cAAgBpO,EAAKoO,cACrBhC,MAASpM,EAAKoO,cAAc4L,MAAM,GAAI,QA3C5B,EA+CjBC,cAAgB,SAAC/W,GACb,IAAInE,EAAMmE,EAAEF,OAAOpH,MACnB,EAAKgH,SAAS,CACXsX,UAAYnb,KAlDF,EAsDjBob,cAAgB,WACZ,IAAItY,EAAS,CACV,iBAAoB,EAAKjF,MAAMwR,cAC/B,kBAAqB,EAAKxR,MAAMsd,WAGlCxX,QAAQC,IAAId,GAEZ,EAAKvH,MAAM8f,aAAavY,IA5D1B,EAAKjF,MAAQ,CACToD,KAAO,GACPqa,QAAU,GACVC,QAAU,EACVjW,SAAW,CAEP,CAAC,UAAU,YAEf5J,KAAQ,sBACR2T,cAAgB,KAChB8L,UAAY,EACZ9N,MAAQ,sBAbE,E,gEAiBb/R,KAAKC,MAAMqf,iBACXtf,KAAKC,MAAMigB,yB,yCAIIhW,EAAWnB,GAEbmB,EAAUsV,cAAgBxf,KAAKC,MAAMuf,aAAexf,KAAKC,MAAMqf,mB,+BAyCxE,IAAD,OACJ,OACI,6BACI,kBAAC,WAAD,CACElV,UAAYpK,KAAKuC,MAAMyH,SACvBK,SAAS,aACTC,SAAW,IACXC,MAAM,SACNzK,MAAO,CAACe,OAAS,UAEjB,kBAAC2J,EAAA,EAAD,KACA,kBAACC,EAAA,EAAD,KACE,kBAACC,EAAA,EAAD,CAAKC,GAAG,KACR,yBAAK7K,MAAOV,GAAO8D,WACnB,kBAAC4H,EAAA,EAAD,CAAOuL,SAAO,EAACtL,UAAQ,EAACC,OAAK,EAACzK,MAAM,OACpC,+BACI,wBAAIT,MAAK,2BAAMV,GAAO4G,QAAU5G,GAAOmgB,iBACvC,iCACA,wCACA,0CACA,oCAGA,sCACA,wCAGJ,+BAEIvf,KAAKuC,MAAMoD,KAAKsO,OAAQ,EACxBjU,KAAKuC,MAAMoD,KAAKuF,KAAI,SAACvF,EAAKwF,GAAN,OACpB,wBAAIC,IAAOD,EAAOrL,MAAK,eAAMV,GAAO4G,SAEpC,4BAAKmF,EAAM,GACX,4BAAKxF,EAAKoO,eACV,4BAAKpO,EAAKqO,uBACV,4BAAKrO,EAAKyT,oBAGV,wCACA,wBAAItZ,MAAOV,GAAOO,OAAQO,QAAS,kBAAI,EAAKwf,SAAS/Z,KACrD,yBAAKxD,IAAI,gEAIP,wBAAIrC,MAAOV,GAAO4G,QACZ,kDAOR,kBAAC0E,EAAA,EAAD,CAAKC,GAAG,KACR,yBAAK7K,MAAOV,GAAO8D,WACX,kBAAC,EAAD,CAAQ9C,KAAMJ,KAAKuC,MAAMnC,OACzB,kBAAC,EAAD,CACAL,MAAQ,UACRK,KAAM,eAAiBJ,KAAKuC,MAAMwP,QAClC,4BAAQjS,MAAOV,GAAOwO,UACtB1M,SAAU,SAAC2H,GAAD,OAAK,EAAK+W,cAAc/W,KAElC,6CAEI7I,KAAKuC,MAAM0d,QAAS,EAEhBjgB,KAAKuC,MAAMyd,QAAQ9U,KAAI,SAACvF,EAAKwF,GAAN,OACvB,4BAAQ5J,MAAOoE,EAAKwa,mBAAoBxa,EAAKwa,sBAE7C,MAKR,kBAAC,EAAD,CACAne,QAAU,OACV5B,KAAO,YACPD,QAAW,kBAAI,EAAK2f,mBAIhB9f,KAAKC,MAAMmgB,SACX,yBAAKtgB,MAAOV,GAAOogB,aACdxf,KAAKC,MAAMuf,aAGd,c,gDA3HDvf,EAAMsC,GAClC,OAAiB,OAAdtC,EAAM0F,WAA8BgG,IAAd1L,EAAM0F,KACzB,CACFA,KAAO1F,EAAM0F,KACbqa,QAAU/f,EAAM+f,QAChBC,QAAUhgB,EAAMggB,SAIjB,S,GAvCc5f,aAmMXuL,oBA1Bf,SAAyBrJ,GACxB,MAAO,CACAoD,KAAOpD,EAAM8d,mBAAmB1a,KAChCsO,OAAS1R,EAAM8d,mBAAmBpM,OAClC+L,QAAUzd,EAAM8d,mBAAmBL,QACnCC,QAAU1d,EAAM8d,mBAAmBJ,QACnCG,SAAW7d,EAAM8d,mBAAmBD,SACpCZ,YAAcjd,EAAM8d,mBAAmBb,gBAI/C,SAA4BtT,GAC3B,MAAO,CAEAoT,eAAiB,WACbpT,EAASoT,OAEbY,qBAAuB,WACnBhU,EF7LF,CACF9K,KAAOsC,GAAWsb,mCE8LlBe,aAAe,SAACrb,GACZwH,EF1LF,CACF9K,KAAOsC,GAAWyb,uBAClBxa,QEwL0BD,QAKnBkH,CAA6C6T,IChMtDa,G,uKAGA,OADAjY,QAAQC,IAAItI,KAAKC,MAAMuM,OAGrB,kBAAC,IAAD,KAEKxM,KAAKC,MAAMuM,MAUf,kBAAC,IAAD,KACC,kBAAC,IAAD,CAAO+T,OAAK,EAACC,KAAK,IAAMC,UAAWvZ,KACnC,kBAAC,IAAD,CAAOsZ,KAAO,iBAAkBC,UAAWhH,KAC3C,kBAAC,IAAD,CAAO+G,KAAO,iBAAkBC,UAAW7E,KAE3C,kBAAC,IAAD,CAAQ4E,KAAK,WAAWC,UAAW3S,GAAchO,MAAO,CAAC4gB,gBAAgB,WACzE,kBAAC,IAAD,CAAOF,KAAM,eAAeC,UAAWxN,KACvC,kBAAC,IAAD,CAAOuN,KAAO,YAAaC,UAAWvL,KACtC,kBAAC,IAAD,CAAOsL,KAAO,YAAaC,UAAWnD,KACtC,kBAAC,IAAD,CAAOkD,KAAK,kBAAkBC,UAAWjC,KACzC,kBAAC,IAAD,CAAOmC,IAAI,WAAWF,UAAWhB,MAnBlC,kBAAC,IAAD,KACC,kBAAC,IAAD,CAAOc,OAAK,EAAEC,KAAO,IAAKC,UAAWpU,KACrC,kBAAC,IAAD,CAAOmU,KAAO,iBAAkBC,UAAWpU,KAC3C,kBAAC,IAAD,CAAQmU,KAAK,OAAOC,UAAWpU,GAAOvM,MAAO,CAAC4gB,gBAAgB,WAC9D,kBAAC,IAAD,CAAOF,KAAM,eAAeC,UAAWpU,KACvC,kBAAC,IAAD,CAAOmU,KAAO,YAAaC,UAAWpU,KACtC,kBAAC,IAAD,CAAOmU,KAAO,YAAaC,UAAWpU,W,GAd9BhM,aAwDHuL,oBAjBf,SAAyBrJ,GACxB,MAAO,CAEDoD,KAAQpD,EAAM0J,aAAatG,KAC3B+F,MAAQnJ,EAAM0J,aAAaP,MAC3Bc,MAAQ3E,aAAamE,QAAQ,SAAWnE,aAAamE,QAAQ,SAAWzJ,EAAM0J,aAAaO,UAIlG,SAA4BN,GAC3B,MAAO,KAOON,CAA6C0U,ICE7ClhB,GAvEA,CAEX8D,UAAY,CACPrC,OAAQ,SAGb+f,eAAiB,CACbpgB,gBAAiBf,IAAYohB,qBAEjC7a,OAAS,CACLxF,gBAAiBf,IAAYqhB,gBAC7B3d,QAAQ,QAGZuT,UAAY,CACRvT,QAAU,OACVP,eAAiB,iBAErByO,MAAQ,CACJ/R,SAAW,GAEXE,WAAaC,IAAYshB,SACzBhhB,MAAMN,IAAYM,MAAMihB,KACxBpf,cAAgB,aAEpBqf,KAAO,CACH3hB,SAAW,GACXsC,cAAgB,YAChB7B,MAAQN,IAAYM,MAAM0D,MAE1BlE,cAAgBE,IAAYyhB,qBAEhCC,SAAW,CACPphB,MAAQ,WAGZqhB,UAAY,CACR5gB,gBAAgB,UAChBhB,WAAaC,IAAYC,UACzBK,MAAMN,IAAYM,MAAM0D,OAE5B4d,OAAS,CACL7hB,WAAaC,IAAY4X,SACzBtX,MAAMN,IAAYM,MAAMwP,MACxBjQ,SAAWG,IAAY6hB,SACvB/hB,cAAgBE,IAAYyR,eAEhCqQ,SAAW,CACP/hB,WAAaC,IAAY4X,SACzBtX,MAAMN,IAAYM,MAAM+M,IACxBxN,SAAWG,IAAYiC,YACvBnC,cAAgBE,IAAYyR,eAEhCsQ,QAAU,CACNhU,WAAa,IAEjBiU,KAAO,CACHte,QAAU,QAEdlB,MAAQ,CACJmE,cAAgB,SAChBjD,QAAU,SAEdue,YAAc,CACVpiB,SAAW,GACXE,WAAaC,IAAY4X,SACzB9X,cAAgB,ICtDlBoiB,G,kDACF,WAAY1hB,GAAQ,IAAD,8BACf,cAAMA,IA0BV2hB,SAAW,SAACld,EAAI0C,GACZ,EAAKmB,SAAS,CACVsZ,YAAcnd,IAGtB,EAAKzE,MAAMwE,YAAY2C,IAhCJ,EAmCnBwM,WAAa,WACT,EAAK3T,MAAMiI,QAAQC,KAAK,SApCT,EAuCjB2Z,QAAU,WACP,EAAK7hB,MAAMwE,YAAY,UACvBoD,aAAaoK,QACb,EAAKhS,MAAM8hB,iBAxCZ,EAAKxf,MAAQ,CACTsf,YAAc,EACdL,QAAU,IACVre,QAAU,OACVwC,KAAO,GACPqc,QAAS,EACThc,OAAU,GACVuG,KAA2C,OAApC1E,aAAamE,QAAQ,WAAsBnE,aAAamE,QAAQ,WAAc,IAT1E,E,gEAgBfhM,KAAKC,MAAMqf,mB,+BAgCP,IAAD,OAEP,OADAjX,QAAQC,IAAItI,KAAKC,MAAMsM,MAEnB,yBAAKzM,MAAOV,GAAO8D,WACnB,kBAAC,SAAD,CAAQ+e,aAAW,EAACC,aAAW,GAC/B,kBAAC,SAAD,CAAQ7Q,MAAO,8BAAM,gCACpBvR,MAAOV,GAAO4G,QAGf,kBAAC,YAAD,CAAYlG,MAAOV,GAAOsX,WACzB,0BAAM5W,MAAOV,GAAO6hB,MAAOjhB,KAAKC,MAAMghB,KAAtC,MAEWjhB,KAAKC,MAAMuM,MACtB,kBAAC,aAAD,CAAY1M,MAAO,CAACqiB,MAAQ,UAErB,yBAAKriB,MAAO,CAACsiB,SAAU,aAEnB,0BAAMtiB,MAAOV,GAAOsiB,aAApB,kBAAiD1hB,KAAKC,MAAMsM,KAA5D,KAIR,kBAAC,aAAD,CAAYnF,KAAK,YAAYC,GAAG,0BAEhC,kBAAC,OAAD,CAAMsB,OAAO,wBAAwB0Z,MAAM,QAAQviB,MAAO,CAACY,WAAa,gBACpD,kBAAC,WAAD,CAAUZ,MAAOV,GAAOkjB,UACxB,kBAAC,IAAD,CAAMC,GAAG,kBAAkBriB,QAAS,kBAAI,EAAK0hB,SAAS,EAAE,qBAAoB,0BAAM9hB,MAAOV,GAAO+hB,UAApB,qBAE5E,kBAAC,WAAD,CAAUrhB,MAAOV,GAAOkjB,UACxB,kBAAC,IAAD,CAAMC,GAAG,KAAK,0BAAMziB,MAAOV,GAAO+hB,SAAUjhB,QAASF,KAAK8hB,SAA5C,gBAMhC,OAKN,kBAAC,SAAD,CAAQzQ,MAAO,0BAAMvR,MAAOV,GAAOiS,OAApB,aAA6CvR,MAAOV,GAAOwhB,gBAG9C,UAApB5gB,KAAKC,MAAMghB,KACX,kBAAC,aAAD,KACA,kBAAC,IAAD,CAAMsB,GAAG,IAAIziB,MAAgC,IAAzBE,KAAKuC,MAAMsf,YAAkBziB,GAAOmiB,SAAWniB,GAAOiiB,OAAQnhB,QAAS,kBAAI,EAAK0hB,SAAS,EAAE,UAA/G,QAEI5hB,KAAKC,MAAMgU,OAAS,EACpB,kBAAC,IAAD,CAAMsO,GAAG,WAAWziB,MAAgC,KAAzBE,KAAKuC,MAAMsf,YAAmBziB,GAAOmiB,SAAWniB,GAAOiiB,OAAQnhB,QAAS,kBAAI,EAAK0hB,SAAS,GAAG,mBAAxH,kBAA0J5hB,KAAKC,MAAMgU,OAArK,KACG,KAIP,kBAAC,IAAD,CAAMsO,GAAG,YAAYziB,MAAgC,IAAzBE,KAAKuC,MAAMsf,YAAkBziB,GAAOmiB,SAAWniB,GAAOiiB,OAAQnhB,QAAS,kBAAI,EAAK0hB,SAAS,EAAE,aAAvH,YACA,kBAAC,IAAD,CAAMW,GAAG,YAAYziB,MAAgC,IAAzBE,KAAKuC,MAAMsf,YAAkBziB,GAAOmiB,SAAWniB,GAAOiiB,OAAQnhB,QAAS,kBAAI,EAAK0hB,SAAS,EAAE,yBAAvH,uBACA,0BAAM9hB,MAAO,CAAEH,OAAO,WAAYO,QAASF,KAAK8hB,SAAhD,aAEE,MAMV,kBAAC,UAAD,KAEI,kBAAC,GAAD,a,GAjHgBzhB,aAqKbuL,oBAxCf,SAAyBrJ,GACxB,MAAO,CAEAgM,UAAYhM,EAAMigB,cAAcjU,UAChC5I,KAAOpD,EAAMigB,cAAc7c,KAC3B8c,QAAUlgB,EAAMigB,cAAcC,QAC9BxB,KAAO1e,EAAMigB,cAAcvB,KAC3ByB,KAAOngB,EAAMigB,cAAcE,KAC3B1c,OAASzD,EAAM0J,aAAatG,KAC5B+F,MAAQnJ,EAAM0J,aAAaP,MAC3Bc,MAAQjK,EAAM0J,aAAaQ,UAC3BF,KAAOhK,EAAM0J,aAAaM,KAC1BoW,aAAepgB,EAAM8d,mBAAmB1a,KACxCsO,OAAS1R,EAAM8d,mBAAmBpM,WAI1C,SAA4B/H,GAC3B,MAAO,CAIA0W,aAAe,SAACle,GACZwH,E9DxJL,SAAsBxH,GACzB,MAAM,CACFtD,KAAOsC,EAAWS,qBAClBQ,QAAUD,G8DqJGke,CAAale,KAE1Bme,cAAgB,WACZ3W,E9DjKF,CACF9K,KAAOsC,EAAWU,kB8DkKlBK,YAAc,SAACC,GACXwH,EAASzH,EAAYC,KAEzBqd,cAAgB,WACZ7V,EnDxJF,CACF9K,KAAOsC,EAAWI,0BmDyJlBwb,eAAiB,WACbpT,EAASoT,UAKN1T,CAA6C+V,I,SC1K7Cje,GARI,CAEfof,mBAAsB,qBACtBC,2BAA6B,6BAC7BC,2BAA6B,8BCF3BC,GAAe,CACjBhY,WAAY,EACZtF,KAAO,ICFLsd,GAAe,CACjBhY,WAAY,EACZtF,KAAO,GACP8c,QAAU,KACVxB,KAAOpZ,aAAamE,QAAQ,SAAY,OAAS,QACjD0W,MAAO,GCLLO,GAAe,CACjBhY,WAAY,EACZtF,KAAO,GACP6O,SAAW,ICFTyO,GAAgB,CAElBhY,WAAY,EACZtF,KAAO,EACP+F,OAAQ,EACRvB,IAAM,6BCNJ8Y,GAAe,CACjBhY,WAAY,EACZtF,KAAO,GACP+O,UAAY,GACZwO,QAAU,GAEVxX,MAAQ,GACRsG,KAAO,MCPLiR,GAAe,CACjBhY,WAAY,EACZ2K,aAAe,EACfF,YAAc,EACd/P,KAAO,GACPkQ,mBAAqB,EACrBC,UAAY,EACZvM,QAAS,EACTmC,OAAQ,EACR6K,SAAW,GACXC,aAAc,EACdC,eAAiB,ICXdwM,GAAgB,CACnBhY,WAAY,EACZtF,KAAQ,GACR4D,QAAS,EACTiQ,UAAY,aCJVyJ,GAAe,CACjBhY,WAAY,EACZtF,KAAO,KACPiD,KAAO,EACP8C,OAAQ,EACRe,YAAY5E,aAAamE,QAAQ,UAAWnE,aAAamE,QAAQ,SACjEO,KAA2C,OAApC1E,aAAamE,QAAQ,WAAsBnE,aAAamE,QAAQ,WAAc,IAuDzF,SAASmX,GAAkBnd,GAEvB6B,aAAaC,QAAQ,SAAQ,GAC7BD,aAAaC,QAAQ,qCAAqC9B,GChE9D,IAAMid,GAAe,CACjBhY,WAAY,EACZtF,KAAO,GACPyd,SAAW,GACXjF,QAAU,MCJR8E,GAAe,CACjBhY,WAAY,EACZtF,KAAO,GACP6W,SAAU,EACVrS,IAAM,KCJJ8Y,GAAe,CACjBhY,WAAY,EACZtF,KAAO,GACPwY,QAAU,KACVQ,MAAO,EACP/V,KAAO,GCLLqa,GAAe,CACjBhY,WAAY,EACZtF,KAAO,GACPsO,OAAS,EACTkK,QAAU,KACV6B,QAAU,GACVC,QAAU,EACVG,UAAW,EACXZ,YAAc,ICIH6D,gBAAgB,CAE3BC,YZTW,WAAoC,IAAnC/gB,EAAkC,uDAA1B0gB,GAAeM,EAAW,uCAC9C,OAAQA,EAAOniB,MAEX,KAAMsC,GAAWof,mBACjB,MAAO,CACHvU,WAAY,GAIhB,KAAK7K,GAAWqf,2BACZ,MAAO,CACJ9X,WAAY,EACZtF,KAAO4d,EAAO5d,KAAK6d,QAAQC,YAGlC,QACI,OAAOlhB,IYNfigB,cXJW,WAAoC,IAAnCjgB,EAAkC,uDAA1B0gB,GAAeM,EAAW,uCAC9C,OAAQA,EAAOniB,MAEX,KAAMsC,EAAWM,qBACjB,OAAO,2BACAzB,GADP,IAEIgM,WAAY,IAIhB,KAAK7K,EAAWO,6BACZ,OAAO,2BACC1B,GADR,IAEI0I,WAAY,EACZtF,KAAO4d,EAAO5d,KAAK+d,YAAYC,YAGvC,KAAKjgB,EAAWS,qBACZ,MAAO,CACHse,QAAUc,EAAO5e,SAEzB,KAAKjB,EAAWa,YACZ,OAAO,2BACAhC,GADP,IAEI0e,KAAOsC,EAAO5e,QACd+d,KAA0B,SAAnBa,EAAO5e,SAAyC,iBAAnB4e,EAAO5e,SAAiD,YAAnB4e,EAAO5e,UAIxF,QACI,OAAOpC,IWzBfsJ,gBVVW,WAAoC,IAAnCtJ,EAAkC,uDAA1B0gB,GAAeM,EAAW,uCAC9C,OAAQA,EAAOniB,MAEX,KAAMsC,EAAWkB,cACjB,MAAO,CACHqG,WAAY,GAIhB,KAAKvH,EAAWmB,sBACZ,MAAO,CAEHoG,WAAY,EAEZtF,KAAO4d,EAAO5d,KAAK,GAAGie,SAG9B,KAAKlgB,EAAWqB,cACZ,OAAO,2BACAxC,GADP,IAEIiS,SAAW+O,EAAO5e,UAI1B,QACI,OAAOpC,IUdfwJ,WTRW,WAA+B,IAA9BxJ,EAA6B,uDAAvB0gB,GAAcM,EAAS,uCAEzC,OAAOA,EAAOniB,MAEV,KAAMsC,EAAWyB,oBACjB,MAAO,CACH8F,WAAY,GAGhB,KAAKvH,EAAW0B,4BAChB,MAAO,CACH6F,WAAY,EACZtF,KAAO4d,EAAOM,MACdnY,OAAQ,EACRvB,IAAM,8BAEV,KAAKzG,EAAW2B,4BAChB,MAAO,CACH4F,WAAY,EACZS,OAAQ,EACRvB,IAAM,sDAGV,KAAKzG,EAAW6B,4BACZ,MAAO,CAEJ4E,IAAM,8BAEb,KAAKzG,EAAW+B,qBACZ,MAAO,CACH0E,IAAM,6BAIb,QACD,OAAO5H,IS1BXkS,eRRW,WAAoC,IAAnClS,EAAkC,uDAA1B0gB,GAAeM,EAAW,uCAC9C,OAAQA,EAAOniB,MAEX,KAAMsC,GAAW+K,iBACjB,MAAO,CACHF,WAAY,GAIhB,KAAK7K,GAAWgL,yBACZ,MAAO,CAEHzD,WAAY,EACZtF,KAAO4d,EAAO5d,KAAKme,4BAEnBpP,UAAY6O,EAAO5d,KAAKoe,iBAMhC,QACI,OAAOxhB,IQbf+T,ePJW,WAAoC,IAAnC/T,EAAkC,uDAA1B0gB,GAAeM,EAAW,uCAC9C,OAAQA,EAAOniB,MAEX,KAAMsC,GAAWkR,kBACjB,MAAO,CACHrG,WAAY,GAGhB,KAAM7K,GAAWmR,0BACjB,MAAO,CACHtG,WAAY,EACZ5I,KAAO4d,EAAO5d,KACdiQ,kBAA+CjK,IAAhC4X,EAAO5d,KAAK,GAAGiQ,cAA8D,OAAhC2N,EAAO5d,KAAK,GAAGiQ,aAAwB2N,EAAO5d,KAAK,GAAGiQ,aAAgB,GAClIF,YAAc6N,EAAO5d,KAAK,GAAG+P,YAC7BG,mBAAqB0N,EAAO5d,KAAK,GAAGkQ,mBACpCC,UAAYyN,EAAO5d,KAAK,GAAGmQ,UAC3BC,aAAewN,EAAO5d,KAAK,GAAGoQ,aAC9BC,UAAYuN,EAAO5d,KAAK,GAAGqQ,UAC3BC,aAAesN,EAAO5d,KAAK,GAAGsQ,aAC9BC,YAAcqN,EAAO5d,KAAK,GAAGuQ,aAIjC,KAAKxS,GAAWoR,0BAChB,MAAO,CACHpJ,OAAQ,EACR6K,SAAW,uBAGf,KAAK7S,GAAWqR,qBAChB,MAAO,CACHyB,aAAc,EACdC,eAAiB,KAGrB,KAAK/S,GAAWsR,6BAChB,MAAO,CACHwB,aAAc,EACdC,eAAiB,wBAGrB,KAAK/S,GAAWuR,6BAChB,MAAO,CACHuB,aAAc,EACdC,eAAiB,uBAGrB,QACI,OAAOlU,IO3CfgX,iBNbW,WAAoC,IAAnChX,EAAkC,uDAA1B0gB,GAAeM,EAAW,uCAC9C,OAAQA,EAAOniB,MAEX,KAAMsC,GAAWoT,WACjB,MAAO,CACH7L,WAAY,GAIhB,KAAKvH,GAAWqT,mBACZ,MAAO,CAEH9L,WAAY,EACZtF,KAAO4d,EAAO5d,KAAKqe,sBAI3B,KAAKtgB,GAAWwT,0BACZ,MAAO,CACH3N,QAAS,EACTiQ,UAAY,uBAEpB,KAAK9V,GAAWyT,0BACZ,MAAO,CACH5N,QAAS,EACTiQ,UAAY,4CAGpB,QACI,OAAOjX,IMff0J,aLZW,WAAoC,IAAnC1J,EAAkC,uDAA1B0gB,GAAeM,EAAW,uCAC9C,OAAQA,EAAOniB,MAEX,KAAMsC,EAAWC,OACjB,OAAO,2BACApB,GADP,IAEI0I,WAAY,IAIhB,KAAKvH,EAAWE,eACZ,MAAO,CAEH8H,OAAQ,EACRT,WAAY,EACZtF,KAAM4d,EAAO5d,KACb8G,WAAY,EACZwX,QAAUd,GAAkBI,EAAO5d,MACnCiD,KAAO,EACP2D,KAAO1E,aAAamE,QAAQ,YAEhC,KAAKtI,EAAWG,eAChB,OAAO,2BACAtB,GADP,IAEI0I,WAAY,EACZS,OAAQ,EACR9C,KAAO,EACP6D,WAAY,IAGhB,KAAK/I,EAAWI,uBAChB,MAAO,CACH4H,OAAQ,EACRa,KAAO,GACPE,WAAY,GAGhB,KAAK/I,EAAWK,qBAChB,OAAO,2BACAxB,GADP,IAEIgK,KAAOgX,EAAO5e,UAKtB,QACI,OAAOpC,IKjCf6b,gBJfW,WAAoC,IAAnC7b,EAAkC,uDAA1B0gB,GAAeM,EAAW,uCAC9C,OAAQA,EAAOniB,MAEX,KAAMsC,GAAWgZ,cACjB,MAAO,CACHnO,WAAY,GAIhB,KAAK7K,GAAWiZ,sBACZ,MAAO,CAEH1R,WAAY,EACZhC,QAAS,EACTtD,KAAO4d,EAAO5d,KAAK,IAG3B,KAAKjC,GAAWoZ,wBACZ,MAAO,CAEJqB,QAAU,QAEjB,KAAKza,GAAWsZ,gBACZ,MAAO,CAEJmB,QAAU,KAEjB,KAAKza,GAAWuZ,wBACZ,MAAO,CAEJkB,QAAU,QAEb,KAAKza,GAAWyZ,gBAChB,MAAO,CAEJgB,QAAU,KAEjB,KAAKza,GAAW0Z,wBACZ,MAAO,CAEJe,QAAU,QAIjB,QACI,OAAO5b,II7Bfka,kBHfU,WAAmC,IAAlCla,EAAiC,uDAA1B0gB,GAAeM,EAAW,uCAExC,OAAOA,EAAOniB,MAEV,KAAKsC,GAAW+X,eACZ,MAAO,CACHxQ,WAAY,GAIpB,KAAKvH,GAAWgY,uBACZ,MAAO,CACHzQ,WAAY,EACZuR,SAAU,EACVrS,IAAM,0BAGd,QACI,OAAO5H,IGFnBqc,iBFhBW,WAAoC,IAAnCrc,EAAkC,uDAA1B0gB,GAAeM,EAAW,uCAC9C,OAAQA,EAAOniB,MAEX,KAAMsC,GAAW2a,kBACjB,MAAO,CACH9P,WAAY,GAIhB,KAAK7K,GAAW4a,0BACZ,MAAO,CAEHrT,WAAY,EACZ0T,MAAO,EACPR,QAAU,gCACVvV,KAAO,GAGf,KAAKlF,GAAW6a,0BACZ,OAAO,2BACAhc,GADP,IAEIoc,MAAO,EACPR,aAAUxS,EACV/C,KAAO,IAIf,QACI,OAAOrG,IEXf8d,mBDdW,WAAoC,IAAnC9d,EAAkC,uDAA1B0gB,GAAeM,EAAW,uCAC9C,OAAQA,EAAOniB,MAEX,KAAMsC,GAAWmb,kBACjB,MAAO,CACHtQ,WAAY,GAIhB,KAAK7K,GAAWob,0BACZ,OAAO,2BACAvc,GADP,IAEI0I,WAAY,EACZhC,QAAS,EACTtD,KAAO4d,EAAO5d,KAAK,GAAGie,QACtB3P,OAASsP,EAAO5d,KAAK,GAAGie,QAAQ3P,SAGxC,KAAKvQ,GAAWqb,0BACZ,OAAO,2BACAxc,GADP,IAEG4b,QAAU,SAGb,KAAKza,GAAWub,wCAChB,OAAO,2BACA1c,GADP,IAEGyd,QAAUuD,EAAO5d,KAAK,GACtBsa,QAAUsD,EAAO5d,KAAK,GAAGsO,SAG5B,KAAKvQ,GAAWwb,wCAChB,MAAO,CACJc,QAAU,IAGb,KAAKtc,GAAWyb,uBAChB,MAAO,CACHiB,UAAW,GAEf,KAAK1c,GAAW0b,+BAChB,MAAO,CACHgB,UAAW,EACXZ,YAAc,cAElB,KAAK9b,GAAW2b,+BAChB,MAAO,CACHe,UAAW,GAKnB,QACI,OAAO7d,M,2DE9DT2hB,IAAV,SAAUA,KAAV,0EAIyB,OAHrB7b,QAAQC,IAAI,SADhB,SAGQD,QAAQC,IAAI,OAHpB,SAI+B6b,aAAKC,MAAO,iFAJ3C,OAKqB,OADPC,EAJd,gBAK2BA,EAASC,OALpC,OAOQ,OAFM3e,EALd,iBAOc4e,aAAI,CAAEnjB,KAAOsC,GAAWqf,2BAA4Bpd,SAPlE,0DAWO0C,QAAQC,IAAR,MAXP,uDAkBO,IAAMkc,GAAW,CAClBC,aAAU/gB,GAAWof,mBAAoBoB,KCClCQ,GAAa,GCkBXC,GA1CE,CAEbnY,MAAQ,CAAC,OAAO,qBAChBvC,YAAc,CAAC,MAAM,cACrB2a,eAAiB,CAAC,OAAO,cACzB/e,eAAiB,CAAC,MAAM,cAGxBqY,YAAc,CAAC,MAAM,mCACrBR,aAAe,CAAC,OAAO,mCACvBK,eAAiB,CAAC,SAAS,2CAC3BF,eAAiB,CAAC,MAAM,2CAKxBgH,sBAAwB,CAAC,YAAY,kDACrCC,gBAAkB,CAAC,YAAY,6EAG/BC,YAAc,CAAC,OAAO,0BACtBC,gBAAkB,CAAC,OAAO,4BAC1BC,eAAiB,CAAC,MAAM,0DAExBC,YAAc,CAAC,MAAM,qBACrBC,aAAe,CAAC,MAAM,yCAItBC,UAAY,CAAC,MAAM,oBAKnBC,gBAAkB,CAAC,MAAM,mBACzBC,iBAAmB,CAAC,OAAO,oBCxBhBC,GAXC,CAMRC,QAAU,+B,oBCDC,SAASC,GAAUC,EAAI1f,GAEhC,IAAI6D,EAAU,CACZkR,KAAO2K,EAAI,GACXC,QAAU,CACR,cAAmB3f,IAKzB,OADAqC,QAAQC,IAAIid,GAAQC,QAAS,IAAME,EAAI,GAAI7b,GACnC+b,KAAMC,KAAKN,GAAQC,QAAS,IAAME,EAAI,GAAI7b,GAGhD,SAASic,GAAcJ,EAAI/f,EAAKK,GAClC,IAAI6D,EAAU,CACZlE,KAAOA,EACPoV,KAAO2K,EAAI,GACXC,QAAU,CACR,cAAmB3f,IAK1B,OAAQ4f,KAAMC,KAAKN,GAAQC,QAAS,IAAME,EAAI,GAAI7b,GAG7C,SAASkc,GAAWL,EAAI/f,EAAKK,GAGlC,IAAI6D,EAAS,CACZlE,KAAOA,EACPoV,KAAO2K,EAAI,GACXC,QAAU,CACR,eAAgB,mBAChB,cAAmB3f,IAIvB,OAAQ4f,KAAMC,KAAKN,GAAQC,QAAS,IAAME,EAAI,GAAI7b,GAG1C,SAASmc,GAAaN,EAAI/f,EAAKK,GACrC,IAAMigB,EAAMV,GAAQC,QAAS,IAAME,EAAI,GAEpC7b,EAAU,CACZlE,KAAOA,EACPoV,KAAO2K,EAAI,GACXC,QAAU,CACT,cAAmB3f,IAGrB,OAAO4f,KAAM9H,OAAOmI,EAAK,CAAEtgB,KAAMkE,IAK7B,SAASqc,GAAUR,EAAI/f,EAAKK,GAClC,IAAI6D,EAAS,CACXlE,KAAOA,EAAK,GACZoV,KAAO2K,EAAI,GACXre,GAAK1B,EAAK,GACVggB,QAAU,CACR,eAAgB,mBAChB,cAAmB3f,IAGvB,OAAQ4f,KAAMrB,IAAIgB,GAAQC,QAAS,IAAME,EAAI,GAAI7b,GAG3C,SAASsc,GAAgBT,EAAI/f,EAAKK,GACxC,IAAI6D,EAAS,CACXlE,KAAOA,EACPoV,KAAO2K,EAAI,GACXre,GAAK,EACLse,QAAU,CACR,eAAgB,mBAChB,cAAmB3f,IAGvB,OAAQ4f,KAAMrB,IAAIgB,GAAQC,QAAS,IAAME,EAAI,GAAI7b,GCpF9C,IAAMuc,GAAY,SAAA7jB,GAAK,OAAIA,EAAM0J,aAAaQ,UACrD,WAAa5E,aAAamE,QAAQ,sCAAwC,WAAazJ,EAAM0J,aAAatG,M,aCOhGsE,IAAV,SAAUA,KAAV,4EACoB,OADpB,SAC0Boc,aAAOD,IADjC,OAIyB,OAHdE,EADX,yBAI+BnC,aAAKsB,GAAUd,GAAS1a,YAAYqc,GAJnE,OAMqB,OAFPjC,EAJd,gBAM2BA,EAAS1e,KAAKhB,QANzC,OAQQ,OAFMgB,EANd,iBAQc4e,aAAI,CAAEnjB,KAAOsC,EAAWmB,sBAAuBc,SAR7D,0DAYO0C,QAAQC,IAAR,MAZP,uDAkBO,IAAMie,GAAe,CACtB9B,aAAU/gB,EAAWkB,cAAeqF,K,aCpBhCrE,I,aAoBAC,IApBV,SAAUD,GAAc2d,GAAxB,gFACmB,OADnB,SACyB8C,aAAOD,IADhC,OAIyB,OAHfE,EADV,gBAGc/Z,EAAOgX,EAAO5e,QAH5B,SAI+Bwf,aAAK4B,GAAWpB,GAASC,eAAerY,EAAK+Z,GAJ5E,OAKqB,OADPjC,EAJd,iBAK2BA,EAAS1e,KALpC,WAKcA,EALd,OAMcke,EAAQpa,KAAKC,UAAU/D,EAAKhB,SAElC0D,QAAQC,IAAI,wBAAyBmB,KAAKC,UAAU/D,EAAK6gB,SACvB,QAA/B/c,KAAKC,UAAU/D,EAAK6gB,QAT/B,iBAUQ,OAVR,UAUcjC,aAAI,CAAEnjB,KAAOsC,EAAW2B,8BAVtC,gCAYQ,OAZR,UAYckf,aAAI,CAAEnjB,KAAOsC,EAAW0B,4BAA4Bye,UAZlE,gCAcQ,OAdR,oCAccU,aAAI,CAAEnjB,KAAOsC,EAAW2B,8BAdtC,QAgBOgD,QAAQC,IAAR,MAhBP,uDAoBA,SAAUzC,GAAe0d,GAAzB,4EACmB,OADnB,SACyB8C,aAAOD,IADhC,OAKyB,OAJfE,EADV,gBAGcG,EAAGlD,EAAO5e,QAChB0D,QAAQC,IAAIme,GAJpB,SAK+BtC,aAAK+B,GAAUvB,GAAS9e,eAAe4gB,EAAEH,GALxE,OAMqB,OADPjC,EALd,iBAM2BA,EAN3B,QAQQ,OARR,iBAQcE,aAAI,CAAEnjB,KAAOsC,EAAW6B,8BARtC,gCAWQ,OAXR,0BAUQ8C,QAAQC,IAAI,eAVpB,UAWcic,aAAI,CAAEnjB,KAAOsC,EAAW8B,4BAA6BqD,EAAC,OAXpE,yFAkBO,IAAM6d,GAAU,CACjBjC,aAAU/gB,EAAWyB,oBAAqBS,IAC1C6e,aAAU/gB,EAAW4B,oBAAoBO,K,aCxCrCkJ,IAAV,SAAUA,GAAmBwU,GAA7B,8EACmB,OADnB,SACyB8C,aAAOD,IADhC,OAKyB,OAJfE,EADV,gBAGY5hB,EAAM6e,EAAO5e,QACjB0D,QAAQC,IAAI,mBAAmB5D,GAJvC,SAK+Byf,aAAK2B,GAAcnB,GAASG,gBAAgBpgB,EAAI4hB,GAL/E,OAMqB,OADPjC,EALd,iBAM2BA,EAAS1e,KANpC,QAQQ,OAFMA,EANd,OAOQ0C,QAAQC,IAAI,4BAA4B3C,GAPhD,UAQc4e,aAAI,CAAEnjB,KAAOsC,GAAWgL,yBAA0B/I,SARhE,0DAYO0C,QAAQC,IAAR,MAZP,uDAgBO,IAAMqe,GAAc,CACrBlC,aAAU/gB,GAAW+K,iBAAkBM,K,aCjBnCqH,I,aAgBAD,IAhBV,SAAUC,KAAV,4EACmB,OADnB,SACyBiQ,aAAOD,IADhC,OAKyB,OAJfE,EADV,yBAK+BnC,aAAKsB,GAAUd,GAASU,gBAAgBiB,GALvE,OAMqB,OADPjC,EALd,gBAM2BA,EAAS1e,KAAKhB,QANzC,OAQQ,OAFMgB,EANd,OAOQ0C,QAAQC,IAAI,mBAAmB3C,GAPvC,UAQc4e,aAAI,CAAEnjB,KAAOsC,GAAWmR,0BAA2BlP,SARjE,gCAUQ,OAVR,oCAUc4e,aAAI,CAAEnjB,KAAOsC,GAAWoR,0BAA2BjM,EAAC,OAVlE,yFAgBA,SAAUsN,GAAUoN,GAApB,gFACmB,OADnB,SACyB8C,aAAOD,IADhC,OAIyB,OAHfE,EADV,gBAGc/Z,EAAOgX,EAAO5e,QAH5B,SAI+Bwf,aAAK4B,GAAWpB,GAASW,iBAAiB/Y,EAAK+Z,GAJ9E,OAKqB,OADPjC,EAJd,iBAK2BA,EAAS1e,KALpC,QAUS,OALKA,EALd,OAMcke,EAAQle,EAEd0C,QAAQC,IAAI,wBAAyBmB,KAAKC,UAAUma,EAAMrH,UARlE,UAUe+H,aAAI,CAAEnjB,KAAOsC,GAAWsR,+BAVvC,gCAcQ,OAdR,oCAccuP,aAAI,CAAEnjB,KAAOsC,GAAWuR,+BAdtC,QAgBO5M,QAAQC,IAAR,MAhBP,uDAoBO,IAAMse,GAAc,CACrBnC,aAAU/gB,GAAWkR,kBAAmBwB,IACxCqO,aAAU/gB,GAAWqR,qBAAqBoB,K,aCtCtCmE,I,aAkBAnB,IAlBV,SAAUmB,GAAaiJ,GAAvB,8EAEmB,OAFnB,SAEyB8C,aAAOD,IAFhC,OAMyB,OAJfE,EAFV,gBAIY5hB,EAAM6e,EAAO5e,QACjB0D,QAAQC,IAAI,mBAAmB5D,GALvC,SAM+Byf,aAAK2B,GAAcnB,GAASE,sBAAsBngB,EAAI4hB,GANrF,OAOqB,OADPjC,EANd,iBAO2BA,EAAS1e,KAPpC,QASQ,OAFMA,EAPd,OAQQ0C,QAAQC,IAAI,mBAAmB3C,GARvC,UASc4e,aAAI,CAAEnjB,KAAOsC,GAAWqT,mBAAoBpR,SAT1D,0DAaO0C,QAAQC,IAAR,MAbP,uDAkBA,SAAU6Q,GAAgBoK,GAA1B,8EACmB,OADnB,SACyB8C,aAAOD,IADhC,OAKyB,OAJfE,EADV,gBAGcG,EAAGlD,EAAO5e,QAChB0D,QAAQC,IAAIme,GAJpB,SAK+BtC,aAAKgC,GAAgBxB,GAASO,YAAYuB,EAAEH,GAL3E,OAMqB,OADPjC,EALd,iBAM2BA,EAN3B,QAQQ,OAFM1e,EANd,iBAQc4e,aAAI,CAAEnjB,KAAOsC,GAAWwT,0BAA2BvR,SARjE,gCAWQ,OAXR,oCAWc4e,aAAI,CAAEnjB,KAAOsC,GAAWyT,0BAA2BtO,EAAC,OAXlE,yFAkBO,IAAMge,GAAgB,CACvBpC,aAAU/gB,GAAWoT,WAAYwD,IACjCmK,aAAU/gB,GAAWuT,kBAAkBkC,K,aCvCnC3M,IAAV,SAAUA,GAAM+W,GAAhB,gFAKyB,OALzB,SAEqB,GACT7e,EAAM6e,EAAO5e,QAHzB,SAK+Bwf,aAAK4B,GAAWpB,GAASnY,MAAM9H,EAHzC,IAFrB,OAMoB,OADN2f,EALd,gBAM0BA,EAAS1e,KANnC,OAcU,OARKwN,EANf,OAOeG,EAAKH,EAAExO,QACPgB,EAAO2N,EAAG,GAAGwT,YAR5B,UAcgBvC,aAAI,CAAEnjB,KAAOsC,EAAWE,eAAgB+B,SAdxD,gCAiBQ,OAjBR,oCAiBc4e,aAAI,CAAEnjB,KAAOsC,EAAWG,eAAgBgF,EAAC,OAjBvD,QAmBOR,QAAQC,IAAR,MAnBP,uDAuBO,IAAMye,GAAY,CACnBtC,aAAU/gB,EAAWC,OAAQ6I,K,aCtBzB0R,I,aAcAR,I,aAsBAK,I,aAkBAF,IAtDV,SAAUK,KAAV,4EACoB,OADpB,SAC0BmI,aAAOD,IADjC,OAGyB,OAFdE,EADX,yBAG+BnC,aAAKsB,GAAUd,GAASzG,YAAYoI,GAHnE,OAIqB,OADPjC,EAHd,gBAI2BA,EAAS1e,KAAKhB,QAJzC,OAMQ,OAFMgB,EAJd,iBAMc4e,aAAI,CAAEnjB,KAAOsC,GAAWiZ,sBAAuBhX,SAN7D,0DAUO0C,QAAQC,IAAR,MAVP,uDAcA,SAAUoV,GAAa6F,GAAvB,gFACmB,OADnB,SACyB8C,aAAOD,IADhC,OAMyB,OALfE,EADV,gBAIc/Z,EAAOgX,EAAO5e,QAJ5B,SAM+Bwf,aAAK4B,GAAWpB,GAASjH,aAAanR,EAAK+Z,GAN1E,OAOqB,OADPjC,EANd,iBAO2BA,EAAS1e,KAPpC,WAOcA,EAPd,OAQcke,EAAQle,EAGoB,QAA/B8D,KAAKC,UAAU/D,EAAK6gB,QAX/B,iBAYQ,OAZR,UAYcjC,aAAI,CAAEnjB,KAAOsC,GAAWqZ,0BAZtC,gCAcQ,OAdR,UAccwH,aAAI,CAAEnjB,KAAOsC,GAAWoZ,wBAAwB+G,UAd9D,gCAgBQ,OAhBR,oCAgBcU,aAAI,CAAEnjB,KAAOsC,GAAWqZ,0BAhBtC,QAkBO1U,QAAQC,IAAR,MAlBP,uDAsBA,SAAUyV,GAAewF,GAAzB,8EACmB,OADnB,SACyB8C,aAAOD,IADhC,OAKyB,OAJfE,EADV,gBAGcG,EAAGlD,EAAO5e,QAChB0D,QAAQC,IAAIme,GAJpB,SAK+BtC,aAAK6B,GAAarB,GAAS5G,eAAe0I,EAAEH,GAL3E,OAMqB,OADPjC,EALd,iBAM2BA,EAN3B,QAQQ,OAFM1e,EANd,OAOQ0C,QAAQC,IAAI,OAAOmB,KAAKC,UAAU/D,IAP1C,UAQc4e,aAAI,CAAEnjB,KAAOsC,GAAWuZ,wBAAyBtX,SAR/D,gCAWQ,OAXR,0BAUQ0C,QAAQC,IAAI,eAVpB,UAWcic,aAAI,CAAEnjB,KAAOsC,GAAWwZ,wBAAyBrU,EAAC,OAXhE,yFAkBA,SAAUgV,GAAe0F,GAAzB,8EACmB,OADnB,SACyB8C,aAAOD,IADhC,OAKyB,OAJfE,EADV,gBAGcG,EAAGlD,EAAO5e,QAChB0D,QAAQC,IAAIme,GAJpB,SAK+BtC,aAAK+B,GAAUvB,GAAS9G,eAAe4I,EAAEH,GALxE,OAMqB,OADPjC,EALd,iBAM2BA,EAN3B,QAQQ,OAFM1e,EANd,OAOQ0C,QAAQC,IAAI,OAAOmB,KAAKC,UAAU/D,IAP1C,UAQc4e,aAAI,CAAEnjB,KAAOsC,GAAW0Z,wBAAyBzX,SAR/D,gCAWQ,OAXR,0BAUQ0C,QAAQC,IAAI,eAVpB,UAWcic,aAAI,CAAEnjB,KAAOsC,GAAW2Z,wBAAyBxU,EAAC,OAXhE,yFAoBO,IAAMme,GAAe,CACtBvC,aAAU/gB,GAAWgZ,cAAewB,IACpCuG,aAAU/gB,GAAWmZ,gBAAiBa,IACtC+G,aAAU/gB,GAAWsZ,gBAAgBe,IACrC0G,aAAU/gB,GAAWyZ,gBAAgBU,K,aC9EjC3B,IAAV,SAAUA,GAAeqH,GAAzB,gFACmB,OADnB,SACyB8C,aAAOD,IADhC,OAMyB,OALfE,EADV,gBAGQje,QAAQC,IAAI,oBACNiE,EAAOgX,EAAO5e,QACpB0D,QAAQC,IAAIiE,GALpB,SAM+B4X,aAAK4B,GAAWpB,GAASI,YAAYxY,EAAK+Z,GANzE,OAOqB,OADPjC,EANd,iBAO2BA,EAAS1e,KAPpC,QAaQ,OANMA,EAPd,OAQcke,EAAQle,EACb0C,QAAQC,IAAI,wBAAyBub,GAT9C,UAacU,aAAI,CAAEnjB,KAAOsC,GAAWgY,uBAAuBmI,UAb7D,gCAeQ,OAfR,oCAecU,aAAI,CAAEnjB,KAAOsC,GAAWiY,yBAftC,QAiBOtT,QAAQC,IAAR,MAjBP,uDAwBO,IAAM2e,GAAiB,CACxBxC,aAAU/gB,GAAW+X,eAAgBS,K,aCzBjCwC,IAAV,SAAUA,GAAa6E,GAAvB,4EACmB,OADnB,SACyB8C,aAAOD,IADhC,OAKyB,OAJfE,EADV,gBAGcG,EAAGlD,EAAO5e,QAChB0D,QAAQC,IAAIme,GAJpB,SAK+BtC,aAAKgC,GAAgBxB,GAASS,UAAUqB,EAAEH,GALzE,OAMqB,OADPjC,EALd,iBAM2BA,EAASmC,OANpC,kBAOQne,QAAQC,IAAI,OAAOmB,KAAKC,UAAU2a,EAAS1e,KAAK6gB,SACtB,MAAvBnC,EAAS1e,KAAK6gB,OARzB,iBASQ,OATR,UAScjC,aAAI,CAAEnjB,KAAOsC,GAAW6a,4BATtC,gCAWQ,OAXR,UAWcgG,aAAI,CAAEnjB,KAAOsC,GAAW4a,4BAXtC,gCAcQ,OAdR,oCAcciG,aAAI,CAAEnjB,KAAOsC,GAAW6a,4BAdtC,yFAsBO,IAAM2I,GAAgB,CACvBzC,aAAU/gB,GAAW2a,kBAAmBK,K,aCvBpCY,I,aAcAY,I,aAcAH,IA5BV,SAAUT,KAAV,4EACoB,OADpB,SAC0B+G,aAAOD,IADjC,OAGyB,OAFdE,EADX,yBAG+BnC,aAAKsB,GAAUd,GAASM,eAAeqB,GAHtE,OAIqB,OADPjC,EAHd,gBAI2BA,EAAS1e,KAAKhB,QAJzC,OAMQ,OAFMgB,EAJd,OAKQ0C,QAAQC,IAAI,YAAYmB,KAAKC,UAAU/D,IAL/C,UAMc4e,aAAI,CAAEnjB,KAAOsC,GAAWob,0BAA2BnZ,SANjE,0DAUO0C,QAAQC,IAAR,MAVP,uDAcA,SAAU4X,KAAV,4EACiB,OADjB,SACuBmG,aAAOD,IAD9B,OAGsB,OAFdE,EADR,yBAG4BnC,aAAKsB,GAAUd,GAASQ,aAAamB,GAHjE,OAIkB,OADPjC,EAHX,gBAIwBA,EAAS1e,KAAKhB,QAJtC,OAMK,OAFMgB,EAJX,OAKK0C,QAAQC,IAAI,QAAQmB,KAAKC,UAAU/D,IALxC,UAMW4e,aAAI,CAAEnjB,KAAOsC,GAAWub,wCAAyCtZ,SAN5E,gCAQK,OARL,oCAQW4e,aAAI,CAAEnjB,KAAOsC,GAAWwb,wCAAyCrW,EAAC,OAR7E,QAUIR,QAAQC,IAAR,MAVJ,uDAcA,SAAUyX,GAAawD,GAAvB,gFACiB,OADjB,SACuB8C,aAAOD,IAD9B,OAMuB,OALfE,EADR,gBAGMje,QAAQC,IAAI,oBACNiE,EAAOgX,EAAO5e,QACpB0D,QAAQC,IAAIiE,GALlB,SAM6B4X,aAAK4B,GAAWpB,GAASK,gBAAgBzY,EAAK+Z,GAN3E,OAOmB,OADPjC,EANZ,iBAOyBA,EAAS1e,KAPlC,QAaM,OANMA,EAPZ,OAQYke,EAAQle,EACb0C,QAAQC,IAAI,wBAAyBub,GAT5C,UAaYU,aAAI,CAAEnjB,KAAOsC,GAAW0b,+BAA+ByE,UAbnE,gCAeM,OAfN,oCAeYU,aAAI,CAAEnjB,KAAOsC,GAAW2b,iCAfpC,QAiBKhX,QAAQC,IAAR,MAjBL,uDAyBO,IAAM6e,GAAmB,CAC1B1C,aAAU/gB,GAAWmb,kBAAmBS,IACxCmF,aAAU/gB,GAAWsb,gCAAgCkB,IACrDuE,aAAU/gB,GAAWyb,uBAAuBY,K,aChDzBqH,IAAV,SAAUA,KAAV,kEACX,OADW,SACLC,aAAI,GAAD,oBACF7C,IADE,aAEFE,IAFE,aAGF6B,IAHE,aAIFG,IAJE,aAKFC,IALE,aAMFC,IANE,aAOFC,IAPE,aAQFE,IARE,aASFC,IATE,aAUFC,IAVE,aAWFC,IAXE,aAYFC,MAbI,wC,WCTTG,GAAiBC,eACjBC,GAAa,CAACF,ICFpB,IAAMG,GDQS,WACX,IAAMA,EAAQC,aAAYrE,GAAiBsE,KAAe,WAAf,EAAmBH,KAE9D,OADAF,GAAeM,IAAIR,IACZK,ECXGI,GAoBCC,G,uKAdCjgB,aAAamE,QAAQ,SACjC,OACE,kBAAC,IAAD,CAAUyb,MAAOA,IACjB,6BAEI,kBAAC,GAAD,Y,GARQpnB,aCGE0nB,QACW,cAA7BC,OAAOC,SAASC,UAEe,UAA7BF,OAAOC,SAASC,UAEhBF,OAAOC,SAASC,SAASja,MACvB,2D,cCTNka,IAASC,OACL,kBAAC,IAAD,KACA,kBAAC,GAAD,OAGJC,SAASC,eAAe,SDqHlB,kBAAmBC,WACrBA,UAAUC,cAAcC,MAAMC,MAAK,SAAAhjB,GACjCA,EAAaijB,iB,+BE9FJlpB,IAvCK,CAEhBC,UAAY,YACZ2X,SAAW,UACX0J,SAAW,UACX6H,SAAW,UACX3Q,OAAS,SACT4Q,MAAS,cACTC,UAAY,YACZxH,SAAW,GACX5f,YAAa,GACbwP,cAAgB,GAChBgQ,oBAAsB,EACtB6H,aAAe,UACfppB,OAAS,UACTkhB,oBAAuB,UACvBC,gBAAkB,UAClBkI,kBAAoB,UACpBC,sBAAyB,UACzBlpB,MAAQ,CACJ0D,MAAQ,UACR8L,MAAQ,UACRH,MAAQ,UACR8Z,WAAa,UACbC,KAAO,UACPrc,IAAM,UACNsc,KAAO,UACP1W,OAAS,UACTzD,UAAY,UACZO,MAAQ,UACR6Z,UAAY,UACZC,QAAU,UACVC,YAAc,UACdvjB,OAAS,a","file":"static/js/main.f9341abb.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/loading.63eb7825.gif\";","module.exports = __webpack_public_path__ + \"static/media/desco.e6c61793.png\";","module.exports = __webpack_public_path__ + \"static/media/desco.e6c61793.png\";","import commonStyle from '../../components/style'\r\nconst styles = {\r\n\r\n  // container : {\r\n      \r\n  // },\r\n  // name : {\r\n  //   fontSize : commonStyle.normSize,\r\n  //   letterSpacing : commonStyle.letterspacing,\r\n  //   color : commonStyle.color.green,\r\n  //   fontFamily : commonStyle.formTile,\r\n  //   fontWight : 'bold'\r\n\r\n  // }\r\n\r\n  label : {\r\n\r\n    fontSize : 14,\r\n    letterSpacing :1.0,\r\n    fontFamily : commonStyle.basicFont,\r\n    cursor : commonStyle.cursor\r\n   // fontWight : 'bold'\r\n}\r\n\r\n}\r\n\r\nexport default styles ;","import React,{Component} from 'react';\r\n// import styles from './Label.style' ;\r\n\r\n\r\n// class Label extends Component{\r\n   \r\n//   render(){\r\n//     return(\r\n//       <div>\r\n//           <span style={styles.name} onClick={this.props.onclick}>{ this.props.name} </span>\r\n//       </div>\r\n//     )\r\n//   }\r\n// }\r\n\r\n// export default Label;\r\n\r\nimport {label } from 'react-bootstrap';\r\nimport styles from './Label.style'\r\n\r\nclass Label extends Component {\r\n\r\n    render(){\r\n        return(\r\n            <div>\r\n                <label htmlFor=\"basic-url\"\r\n                 style={{...styles.label,color : this.props.color}} onClick={this.props.onclick}>{this.props.text}</label>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default Label ","import commonStyle from '../style'\r\nconst styles = {\r\n   \r\n    area : {\r\n        width  : '75%',\r\n        backgroundColor : 'transparent',\r\n      //  margin : 'auto'\r\n    },\r\n    textField : {\r\n        background : 'transparent',\r\n        borderRadius : 5,\r\n      //  borderColor : 'gray',\r\n        marginBottom : 5 ,\r\n        height : 30,\r\n        fontFamily : commonStyle.basicFont,\r\n        letterSpacing : 2.0\r\n       // fontWight : 'bold',\r\n    }\r\n}\r\n\r\nexport default styles ;\r\n\r\n","import React,{Component} from 'react';\r\nimport styles from './TextField.style' ;\r\nimport { Textfield } from 'react-mdl';\r\nimport {Container,InputGroup,FormControl} from 'react-bootstrap';\r\n\r\nclass TextField extends Component {\r\n\r\n    render(){\r\n        return(\r\n            <div>\r\n                {/* <Textfield style={{...styles.basic,...styles.width}}\r\n                onChange={this.props.onchange}\r\n                onKeyDown = {this.props.onkeydown}\r\n                label={this.props.label}\r\n                type={this.props.type}\r\n                pattern={this.props.pattern}\r\n                error={this.props.error} \r\n                />\r\n                */}\r\n\r\n                <InputGroup style={styles.area}>\r\n                    <FormControl\r\n                    placeholder={this.props.placeholder}\r\n                    onChange = {this.props.onchange}\r\n                    type={this.props.type}\r\n                    style={{...styles.textField,borderColor : this.props.bordercolor}}\r\n                    value = {this.props.value}\r\n                    // label={this.props.label}\r\n                    // pattern={this.props.pattern}\r\n                    // error={this.props.error}\r\n                    />\r\n                    \r\n                </InputGroup>\r\n\r\n            \r\n            </div>\r\n        )\r\n    }\r\n\r\n}\r\n\r\nexport default TextField ","import commonStyle from '../style' ;\r\n\r\nconst styles = {\r\n\r\n    button : {\r\n        marginTop : 10 ,\r\n        // width : 280,\r\n        // height : 40,\r\n        fontSize : commonStyle.focusedSize,\r\n        letterSpacing : 1.0,\r\n        // color : commonStyle.color.white,\r\n        fontFamily : commonStyle.basicFont,\r\n        fontWight : 'bold',\r\n        borderRadius : 3 ,\r\n        textTransform : 'uppercase'\r\n    }\r\n}\r\n\r\nexport default styles ","import React,{Component} from 'react';\r\nimport styles from './Button.style' ;\r\n//import { Button } from 'react-mdl';\r\nimport Button from 'react-bootstrap/Button';\r\n\r\nclass BillButton extends Component {\r\n\r\n    render(){\r\n        return(\r\n            <div style={{margin:'auto'}}>\r\n            {/* <Button raised ripple primary  style={styles.button} variant={this.props.variant}\r\n            onClick={this.props.onclick} error ={this.props.error} disabled={this.props.disabled}>\r\n                {this.props.text}\r\n            </Button> */}\r\n\r\n            <Button variant={this.props.variant} style={{...styles.button,width : this.props.width,\r\n                height : this.props.height,color:this.props.color}} block \r\n                onClick={this.props.onclick}>{this.props.text}</Button>\r\n            </div>\r\n        )\r\n    }\r\n\r\n}\r\n\r\nexport default BillButton","import React , {Component} from 'react' ;\r\n\r\nclass ShowImage extends Component {\r\n    render(){\r\n        return(\r\n            // <div>\r\n                <img src={this.props.src}\r\n                style={{width:this.props.width,height : this.props.height,resizeMode : 'center',alignSelf : 'center'}}\r\n                />\r\n            // </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default ShowImage\r\n    \r\n","import React,{Component} from 'react';\r\nimport styles from './index.style.css'\r\nimport {Modal,Table,Button} from 'react-bootstrap';\r\nimport ShowImage from '../image/Image'\r\n\r\n\r\nclass Loading extends Component {\r\n    constructor(props){\r\n        super(props)\r\n        this.state = {\r\n\r\n        }\r\n    }\r\n\r\n\r\n    render(){\r\n        return (\r\n            <div style={{  marginTop :200}}>\r\n                 <Modal  show={this.props.show} \r\n               \r\n              //  aria-labelledby=\"contained-modal-title-vcenter\"\r\n               // centered\r\n                \r\n                //dialogClassName=\"modal-90w\"\r\n               // aria-labelledby=\"example-custom-modal-styling-title\"\r\n                className=\"special_modal\" //Add class name here\r\n                style={{  marginTop :50}}\r\n\r\n                  >\r\n                           \r\n                         <Modal.Body style={{backgroundColor : 'transparent',\r\n                         justifyContent : 'center',\r\n                         alignItems : 'center',\r\n                         marginInline : 20,\r\n                         padding : 20\r\n                        \r\n                        }}>\r\n                         <ShowImage src={require('../../assets/images/loading.gif')}\r\n                         width = {'30%'}\r\n                         heigth = {30}\r\n                         \r\n                         />\r\n                         </Modal.Body>\r\n                         </Modal>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default Loading ;","import commonStyle from '../../components/style';\r\n\r\nconst  styles = {\r\n\r\n    container : {\r\n        display:'flex',\r\n        width : '100%',\r\n        height : '100vh',\r\n      //  margin : 'auto',\r\n        justifyContent : 'center',\r\n        alignItems : 'center',\r\n    },\r\n  \r\n    card : { \r\n        width: '23rem',\r\n        backgroundColor : 'transparent',\r\n        margin  :'auto' ,\r\n       // display : 'flex',\r\n       // margin : 'auto'\r\n    },\r\n    // old \r\n    adjust :{\r\n          height: '100%',   \r\n          width : 800       \r\n    },\r\n    top : {\r\n        // marginTop : 50\r\n    },\r\n    rightBody : {\r\n        backgroundColor : '#441d0b',\r\n        height : '100%',\r\n        width : '100%'\r\n    },\r\n    \r\n    txtMsg : {\r\n        color : commonStyle.color.white,\r\n        letterSpacing : 2.0 \r\n    }\r\n\r\n}\r\n\r\nexport default styles ","const actionType = {\r\n\r\n   lOG_IN : \"lOG_IN\",\r\n   lOG_IN_SUCCESS : \"lOG_IN_SUCCESS\",\r\n   lOG_IN_FAILURE : \"lOG_IN_FAILURE\",\r\n   lOG_IN_MAKE_ERROR_TRUE : 'lOG_IN_MAKE_ERROR_TRUE',\r\n   LOG_IN_SET_USER_NAME : 'LOG_IN_SET_USER_NAME'\r\n}\r\n\r\nexport default actionType ;","const actionType = {\r\n\r\n    LAYOUT_GET_MENU_DATA  : 'LAYOUT_GET_MENU_DATA',\r\n    LAYOUT_GET_MENU_DATA_SUCCESS : 'LAYOUT_GET_MENU_DATA_SUCCESS',\r\n    LAYOUT_GET_MENU_DATA_FAILURE : 'LAYOUT_GET_MENU_DATA_FAILURE',\r\n    LAYOUT_CURRENT_INDEX : 'LAYOUT_CURRENT_INDEX',\r\n    LAYOUT_GET_API : 'LAYOUT_GET_API',\r\n    LAYOUT_GET_API_SUCCESS : 'LAYOUT_GET_API_SUCCESS',\r\n    LAYOUT_GET_API_FAILURE : 'LAYOUT_GET_API_FAILURE',\r\n    LAYOUT_MENU  : 'LAYOUT_MENU',\r\n    LAYOUT_MENU_BACK : 'LAYOUT_MENU_BACK'\r\n   \r\n}\r\n\r\nexport default actionType","import actionType from '../../constant/layout' ;\r\n\r\nexport function getTheApiLInk(){\r\n    return{\r\n        type : actionType.LAYOUT_GET_API\r\n    }\r\n}\r\n\r\n\r\nexport function currentIndex(val){\r\n    return{\r\n        type : actionType.LAYOUT_CURRENT_INDEX,\r\n        payload : val\r\n    }\r\n}\r\n\r\nexport function currentMenu(val){\r\n   //console.log()\r\n    return{\r\n        type : actionType.LAYOUT_MENU,\r\n        payload : val \r\n    }\r\n}","const actionType = {\r\n\r\n    CUSTOMER_LIST : \"CUSTOMER_LIST\",\r\n    CUSTOMER_LIST_SUCCESS : \"CUSTOMER_LIST_SUCCESS\",\r\n    CUSTOMER_LIST_FAILURE : \"CUSTOMER_LIST_FAILURE\",\r\n    CUSTOMER_DATA : \"CUSTOMER_DATA\",\r\n    CUSTOMER_UPDATE  : \"CUSTOMER_UPDATE\",\r\n    CUSTOMER_UPDATE_SUCCESS : \"CUSTOMER_UPDATE_SUCCESS\",\r\n    CUSTOMER_UPDATE_FAILURE : \"CUSTOMER_UPDATE_FAILURE\"\r\n}\r\n\r\nexport default actionType","const actionType = {\r\n\r\n    REGISTARTION_CREATE  : \"REGISTARTION_CREATE\",\r\n    REGISTARTION_CREATE_SUCCESS : \"REGISTARTION_CREATE_SUCCESS\",\r\n    REGISTARTION_CREATE_FAILURE : \"REGISTARTION_CREATE_FAILURE\",\r\n    REGISTARTION_UPDATE : \"REGISTARTION_UPDATE\",\r\n    REGISTARTION_UPDATE_SUCCESS : \"REGISTARTION_UPDATE_SUCCESS\",\r\n    REGISTARTION_UPDATE_FAILURE : \"REGISTARTION_UPDATE_FAILURE\",\r\n    REGISTARTION_INITIAL : \"REGISTARTION_INITIAL\"\r\n    \r\n}\r\n\r\nexport default actionType ;","import actionType from '../../constant/registration';\r\n\r\n\r\nexport function registration(data){\r\n    return {\r\n        type : actionType.REGISTARTION_INITIAL\r\n    }\r\n}\r\n\r\nexport function createNewUser(data){\r\n    return {\r\n        type : actionType.REGISTARTION_CREATE,\r\n        payload : data \r\n    }\r\n}\r\n\r\nexport function updateCustomer(data1,data2){\r\n    return{\r\n        type : actionType.REGISTARTION_UPDATE,\r\n        payload : [data1,data2]\r\n    }\r\n}","import commonStyle from '../../components/style';\r\n\r\nconst styles = {\r\n    header : {\r\n        fontSize : 18 , \r\n        fontFamily : commonStyle.basicFont,\r\n        letterSpacing : 1.0,\r\n        background : commonStyle.color.header,\r\n        color : '#ffffff'\r\n    }\r\n}\r\n\r\nexport default styles ;\r\n\r\n\r\n    ","import React,{Component} from 'react';\r\nimport {Alert } from 'react-bootstrap';\r\nimport styles from './Alert.style'\r\n\r\n\r\nclass Header extends Component {\r\n\r\n    render(){\r\n        return(\r\n            <div>\r\n                <Alert variant={this.props.variant}   style={{...styles.header, width : this.props.width,fontSize : this.props.size }}>\r\n                   {this.props.text}\r\n                </Alert>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default Header ","import commonStyle from '../../components/style';\r\n\r\nconst styles ={\r\n\r\n    container : {\r\n       // display   : 'flex',\r\n        flexDirection : 'column',\r\n        height : '100vh',\r\n       // jus\r\n    },\r\n\r\n\r\n    searchBox : {\r\n        display : 'flex',\r\n        justifyContent : 'flex-end',\r\n        alignSelf: 'flex-end',\r\n    },\r\n\r\n    thead : {\r\n        backgroundColor:'#1c9cea',\r\n        color:'white'\r\n    },\r\n\r\n    tbody : {\r\n        fontFamily : commonStyle.basicFont,\r\n        fontSize : 14 ,\r\n        margin : 20,\r\n       // color : 'green'\r\n    },\r\n\r\n    addCustomer : {\r\n        marginTop  : 70\r\n    },\r\n    updateBtn : {\r\n        margin : 0,\r\n        display : 'flex'      \r\n    },\r\n    listGroup : {\r\n        width : '80%',\r\n        backgroundColor:'transparent',\r\n        color : 'White'\r\n    },\r\n    cursor : {\r\n        cursor : commonStyle.cursor\r\n    }\r\n\r\n\r\n    \r\n}\r\n\r\nexport default styles \r\n","import React , {Component} from 'react'\r\nimport { Toast } from 'react-bootstrap';\r\n\r\nclass ToastALert extends Component {\r\n    render(){\r\n        return(\r\n            <Toast style={{width:'90%',backgroundColor:'transparent'}} \r\n            onClose={this.props.close}\r\n            >\r\n            <Toast.Header style={{backgroundColor:'transparent',color:'#ffffff'}}>\r\n              <strong className=\"mr-auto\">{this.props.text}</strong>\r\n            </Toast.Header>\r\n          </Toast>\r\n        )\r\n    }\r\n}\r\n\r\nexport default ToastALert ","import React , {Component,Suspense} from 'react';\r\nimport {connect} from 'react-redux' ;\r\nimport {getCustomer,customerData} from '../../../src/redux/Action/customer';\r\nimport {createNewUser,updateCustomer,registration} from '../../redux/Action/registration';\r\nimport {currentMenu} from  '../../../src/redux/Action/layout'\r\nimport {Grid,Cell,Tooltip,Icon } from 'react-mdl';\r\nimport {Table,Container,Row,Col,Form,ListGroup} from 'react-bootstrap';\r\nimport Label from '../../components/label/Label';\r\nimport Header from '../../components/alert/Alert' ;\r\nimport TextField from '../../components/textField/TextField';\r\nimport BillButton from '../../components/button/Button' ; \r\nimport styles from './Customer.style';\r\nimport ToastALert from '../../components/toast/Toast';\r\nimport Loading from '../../components/loading/index';\r\nimport { Gradient } from 'react-gradient';\r\nconst  SearchBox = React.lazy(() => import('../../components/search'));\r\n\r\n\r\n\r\n\r\nclass Customer extends Component{\r\n    constructor(props){\r\n        super(props)\r\n        this.state = {\r\n            text  : \"ADD NEW CUSTOMER\" ,\r\n            options : false ,\r\n            update : false ,\r\n            cid : 0,\r\n            cdata : [],\r\n            gradient : [\r\n               \r\n             ['#ffffff','#7a6e43']\r\n             ],\r\n            flag : true ,\r\n            data : [],\r\n            newUser: {\r\n                firstName: \"\",\r\n                lastName: \"\",\r\n                email: \"\",\r\n                address: \"\",\r\n                mobileNo: \"\",\r\n                nidNumber: \"\",\r\n                username: \"\",\r\n                password: \"\"\r\n                  \r\n                }\r\n                    }\r\n\r\n      \r\n    }\r\n\r\n    componentDidMount(){\r\n        this.props.getCustomer() \r\n        this.props.currentMenu('Home')\r\n    }\r\n\r\n    componentDidUpdate(prevProps, prevState) {\r\n\r\n        const check = prevProps.msg !== this.props.msg  ? this.props.getCustomer() : null\r\n     \r\n        }\r\n\r\n    static getDerivedStateFromProps(props,state){\r\n        if(props.data!==null && props.data!==undefined && state.flag  ){\r\n        return{\r\n            data : props.data\r\n        }\r\n    }\r\n\r\n    return null \r\n\r\n    }\r\n    \r\n    goBilling = (name) =>{\r\n        const id = this.state.cdata.customerId \r\n        //alert(id)\r\n      let   option = {\r\n            \"id\" : this.state.cdata.customerId,\r\n            \"name\" : this.state.cdata.firstName,\r\n            \"lastname\" : this.state.cdata.lastName === null ? ' ' : this.state.cdata.lastName,\r\n            \"mobile\" : this.state.cdata.mobileNo,\r\n            \"address\" : this.state.cdata.address\r\n        } \r\n\r\n        \r\n\r\n        localStorage.setItem('name',option.name + ' ' +  option.lastname)\r\n        localStorage.setItem('address', option.address)\r\n        localStorage.setItem('mobile', option.mobile)\r\n        localStorage.setItem('customerid', option.id)\r\n        let calls = name === 'Meter-List' ? this.props.customerData(option) : null // here go supporting API's call\r\n        \r\n         this.props.currentMenu(name)\r\n        let page = name === 'Meter-List' ? this.props.history.push('/meterlist/'+id) : \r\n                                           this.props.history.push('/createnew/'+id)\r\n    }\r\n\r\n    searchNow = (value ) =>{\r\n        //alert(this)\r\n        // this.setState({\r\n        //     data : this.state.data.filter(data =>  data.firstName.includes(value) || data.lastName.includes(value)\r\n        //     || data.mobileNo.includes(value) || data.customerId.includes(value))\r\n        // })\r\n\r\n        console.log(value)\r\n\r\n        this.setState({\r\n            data : this.state.data.filter(data =>  data.firstName.includes(value) || data.mobileNo.includes(value) )\r\n        })\r\n    }\r\n\r\n    searchText = (val) =>{\r\n       // alert('blavkk')\r\n         let value = val.target.value ;\r\n        this.setState({\r\n            flag : value !== '' ?  false  : true \r\n        },(e)=>this.searchNow(value))      \r\n       \r\n    }\r\n    input = (e,name) =>{\r\n        let value = e.target.value;\r\n        this.setState(\r\n          prevState => ({\r\n            newUser: {\r\n              ...prevState.newUser,\r\n              [name]: value \r\n            }\r\n          })\r\n        )\r\n       }\r\n    create = () =>{\r\n        // console.log(this.state.newUser)\r\n         const option = {\r\n          \"username\": this.state.newUser.username,\r\n          \"password\": this.state.newUser.password,\r\n          \"firstName\": this.state.newUser.firstName,\r\n          \"lastName\": this.state.newUser.lastName,\r\n          \"email\": this.state.newUser.email,\r\n          \"address\": this.state.newUser.address,\r\n          \"mobileNo\": this.state.newUser.mobileNo,\r\n          \"nidNumber\": this.state.newUser.nidNumber\r\n        }\r\n        console.log(option)\r\n         this.props.createNewUser(option)\r\n         this.makeInitial()\r\n       }\r\n\r\n       makeInitial = () =>{\r\n          \r\n           this.setState({\r\n               update : false ,\r\n               newUser: {\r\n                firstName: \"\",\r\n                lastName: \"\",\r\n                email: \"\",\r\n                address: \"\",\r\n                mobileNo: \"\",\r\n                nidNumber: \"\",\r\n                username: \"\",\r\n                password: \"\"\r\n                  \r\n                }\r\n           })\r\n       }\r\n\r\n    updateFor = (data) => {\r\n        localStorage.setItem('customerdata',JSON.stringify(data))\r\n        this.props.currentMenu('Registration Update : ')\r\n        const id = 1 \r\n        this.props.history.push('/reg/'+id)\r\n    }\r\n\r\n\r\n    makeOptions = (id,cdata) =>{\r\n        this.setState({\r\n            text : \"SELECTED::\"+cdata.firstName,\r\n            cid : id ,\r\n            cdata : cdata,\r\n            options : true \r\n        })\r\n    }\r\n    changeEnv = () =>{\r\n        this.props.registration()\r\n        this.setState({\r\n            text : \"CUSTOMER DETAILS \",\r\n            options : false ,\r\n            update : true ,\r\n            cusid : this.state.cid,\r\n            newUser: {\r\n                  firstName: this.state.cdata.firstName,\r\n                  lastName: this.state.cdata.lastName,\r\n                  email: this.state.cdata.email,\r\n                  address: this.state.cdata.address,\r\n                  mobileNo: this.state.cdata.mobileNo,\r\n                  nidNumber: this.state.cdata.nidNumber,\r\n                  username: this.state.cdata.username\r\n            }\r\n          })\r\n        }\r\n\r\n        update = () =>{\r\n            const cusid = this.state.cid \r\n            const option = {\r\n              \"customerId\" : this.state.cid ,\r\n              \"username\": this.state.newUser.username,\r\n              \"firstName\": this.state.newUser.firstName,\r\n              \"lastName\": this.state.newUser.lastName,\r\n              \"email\":this.state.newUser.email,\r\n              \"address\": this.state.newUser.address,\r\n              \"mobileNo\": this.state.newUser.mobileNo,\r\n              \"nidNumber\": this.state.newUser.nidNumber\r\n            }\r\n        \r\n           // console.log(cusid,option)\r\n           this.props.updateCustomer(option,cusid)\r\n           this.makeInitial()\r\n           }\r\n\r\n    render(){\r\n   //     console.log(this.state.cdata.firstName)\r\n       // console.log(this.props.header)\r\n       // console.log(this.state.data)\r\n        return(\r\n            <div>\r\n                 <Gradient\r\n                  gradients={ this.state.gradient } // required\r\n                  property=\"background\"\r\n                  duration={ 10000 }\r\n                  angle=\"100deg\"\r\n                  > \r\n               <Container>\r\n                <Row >\r\n                    <Col  md={8}>\r\n                    \r\n                        <div style={styles.searchBox}>\r\n                        <Suspense fallback={<div>Loading...</div>}>  \r\n                        <SearchBox \r\n                        label = \"search customer..\"\r\n                        \r\n                        onchange = {(val)=>this.searchText(val)}\r\n                        />\r\n                        </Suspense>\r\n                        </div> \r\n                        <div style={styles.container}>\r\n                        <div style={styles.table}>\r\n                        <Table  bordered hover  style={{borderRadius : 10}}>\r\n                  <thead>\r\n                    <tr style={styles.thead}>\r\n                      <th>#</th>\r\n                      {/* <th>ID</th> */}\r\n                      <th>Name</th>\r\n                      <th>Email</th>\r\n                      <th>Mobile</th>\r\n                      <th>User Name</th>\r\n                      {/* <th>Action</th> */}\r\n                    </tr>\r\n                  </thead>\r\n                  <tbody style={styles.tbody}>\r\n                  \r\n                  \r\n                  {\r\n                    // this.props.isloading || this.props.isregloading ?\r\n                    // <Loading show={this.props.isloading || this.props.isregloading } />\r\n                    this.props.isloading  ?\r\n                    <Loading show={this.props.isloading  } />\r\n                    :\r\n                     \r\n                this.state.data.map((data,index)=>\r\n                    <tr key={index} style={styles.cursor} \r\n                    onClick={()=>this.makeOptions(data.customerId,data)}\r\n                    >\r\n                        <td>{index+1}</td>\r\n                        <td>{data.firstName}</td>\r\n                        <td>{data.email}</td>\r\n                        <td>{data.mobileNo}</td>\r\n                        <td>{data.username}</td>\r\n                        {/* <td>action</td> */}\r\n                    </tr>\r\n\r\n                )}\r\n                  </tbody>\r\n                 \r\n                  </Table>\r\n                        </div>   \r\n                    </div>\r\n                    </Col> \r\n                    <Col  md={4}>\r\n                    {\r\n                        this.state.options ? \r\n                        <div style={styles.addCustomer}>\r\n                        <Header    text = {this.state.text} size = {13} \r\n                        width = '80%' />      \r\n                        <ListGroup >\r\n                            <ListGroup.Item style={styles.listGroup}\r\n                            onClick={()=>this.changeEnv()}\r\n                            > <a style={styles.cursor}>UPDATE </a></ListGroup.Item>\r\n                            <ListGroup.Item style={styles.listGroup} \r\n                             onClick={(id)=>this.goBilling('Meter-List')}\r\n                            ><a style={styles.cursor}>BILLING DETAILS</a></ListGroup.Item>\r\n                            <ListGroup.Item style={styles.listGroup}\r\n                             onClick={(id)=>this.goBilling('ADD NEW ACCOUNT')}\r\n                            ><a style={styles.cursor}>CREATE NEW ACCOUNT </a></ListGroup.Item>\r\n                        </ListGroup>\r\n\r\n                        </div>\r\n                        :\r\n                   \r\n                    <div style={styles.addCustomer}>\r\n                    \r\n                    \r\n                    <Header    text = {this.state.text} width = '75%' />\r\n                    <Form style={{backgroundColor:'transparent'}}>\r\n               \r\n                    <Form.Group >\r\n                    <Label text=\"First Name \"/>\r\n                    <TextField  placeholder = \"\" \r\n                     value = {  this.state.newUser.firstName }\r\n                    onchange={(e)=>this.input(e,'firstName')}/>\r\n                    </Form.Group>\r\n\r\n                    <Form.Group >\r\n                    <Label text=\"Last Name \"/>\r\n                    <TextField  placeholder = \"\"\r\n                     value = {  this.state.newUser.lastName  }\r\n                    onchange={(e)=>this.input(e,'lastName')}/>\r\n                    </Form.Group>\r\n\r\n                    <Form.Group >\r\n                    <Label text=\"Email Name \"/>\r\n                    <TextField  placeholder = \"\" \r\n                     value = { this.state.newUser.email  }\r\n                    onchange={(e)=>this.input(e,'email')} />\r\n                    </Form.Group>\r\n\r\n                    <Form.Group >\r\n                    <Label text=\"Address \"/>\r\n                    <TextField  placeholder = \"\" \r\n                     value = { this.state.newUser.address  }\r\n                    onchange={(e)=>this.input(e,'address')} />\r\n                    </Form.Group>\r\n\r\n                    <Form.Group >\r\n                    <Label text=\" Mobile No  \"/>\r\n                    <TextField  placeholder = \"\" \r\n                    value = { this.state.newUser.mobileNo  }\r\n                    pattern = \"-?[0-9]*(\\.[0-9]+)?\" type=\"number\" error =\"not a mobile number !\" \r\n                                onchange={(e)=>this.input(e,'mobileNo')}/>\r\n                    </Form.Group>\r\n\r\n                    <Form.Group >\r\n                    <Label text=\"NID Number \"/>\r\n                    <TextField  placeholder = \"\"\r\n                    value = {  this.state.newUser.nidNumber  }\r\n                    onchange={(e)=>this.input(e,'nidNumber')} />\r\n                    </Form.Group>\r\n\r\n                    <Form.Group >\r\n                    <Label text=\"UserName \"/>\r\n                    <TextField  placeholder = \"\" \r\n                    value = {  this.state.newUser.username }\r\n                    onchange={(e)=>this.input(e,'username')}/>\r\n                    </Form.Group>\r\n\r\n                    <Form.Group >\r\n                    <Label text=\"Password \"/>\r\n                    <TextField  placeholder = \"******\" type=\"password\" onchange={(e)=>this.input(e,'password')}/>\r\n                    </Form.Group>\r\n\r\n                <Form.Group >\r\n                  {\r\n                    !this.state.update ? \r\n                    <div style={styles.updateBtn}>\r\n                    <BillButton \r\n                    text = \"Submit \"\r\n                     width = {180}\r\n                    onclick={()=>this.create()}\r\n                    />\r\n                    <BillButton \r\n                    variant =  \"success\" \r\n                    text = \"Reset \"\r\n                  //  width = '20%'\r\n                    onclick={()=>this.makeInitial()}\r\n                    />\r\n                    \r\n                    </div> :\r\n                    <div style={styles.updateBtn}>\r\n                    <BillButton\r\n                    variant =  \"danger\" \r\n                    text = \"Update !\"\r\n                    width = '20vh'\r\n                    onclick={()=>this.update()}\r\n                    />\r\n                    <BillButton \r\n                    variant =  \"success\" \r\n                    text = \"Cancel\"\r\n                    width = {80}\r\n                    onclick={()=>this.makeInitial()}\r\n                    />\r\n{/* \r\n                    <BillButton \r\n                    variant =  \"link\" \r\n                    text = \"Delete\"\r\n                    width = {50}\r\n                    onclick={()=>this.delete()}\r\n                    /> */}\r\n                    </div>\r\n                  }\r\n              \r\n                </Form.Group>\r\n\r\n                </Form>\r\n                    <ToastALert\r\n                    text = {this.props.msg}\r\n                  //  close = {this.makeInitial()}\r\n                    />\r\n                    </div>\r\n                    }\r\n                    </Col> \r\n                </Row>\r\n                </Container>\r\n            </Gradient>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nfunction mapStateToProps(state) {\r\n\treturn {\r\n       // courseData:state\r\n        isloading : state.customerReducer.isloading ,\r\n        isregloading : state.regReducer.isloading ,\r\n        data : state.customerReducer.data,\r\n        header :  localStorage.getItem('login') ? localStorage.getItem('header') : state.loginReducer.data,\r\n        msg : state.regReducer.msg \r\n       \r\n\t};\r\n}\r\nfunction mapDispatchToProps(dispatch) {\r\n\treturn {\r\n\t\tgetCustomer : () =>{\r\n            dispatch(getCustomer())\r\n          },\r\n\r\n        customerData : (val) =>{\r\n            dispatch(customerData(val))\r\n        },\r\n        currentMenu : (val)=>{\r\n            dispatch(currentMenu(val))\r\n        },\r\n        createNewUser : (val) =>{\r\n            dispatch(createNewUser(val))\r\n          },\r\n        updateCustomer : (val1,val2) =>{\r\n            dispatch(updateCustomer(val1,val2))\r\n            },\r\n        registration : () =>{\r\n                dispatch(registration())\r\n        }\r\n            \r\n            \r\n\t};\r\n}\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Customer);","import actionType from '../../constant/customer'\r\n\r\nexport function getCustomer(){\r\n    return{\r\n        type : actionType.CUSTOMER_LIST\r\n    }\r\n}\r\n\r\nexport function customerData(data){\r\n    return {\r\n        type : actionType.CUSTOMER_DATA,\r\n        payload : data \r\n    }\r\n}\r\n\r\n\r\n\r\n\r\n\r\n","import React , {Component} from 'react' ;\r\nimport {Container,Row,Col,Card,Button,Form} from 'react-bootstrap';\r\nimport Label from '../../components/label/Label'\r\nimport TextField from '../../components/textField/TextField';\r\nimport BillButton from '../../components/button/Button';\r\nimport Loading from '../../components/loading';\r\nimport styles from './Login.style';\r\n//import Desco from '../../components/desco/Desco';\r\nimport {connect} from 'react-redux' ;\r\nimport { Gradient } from 'react-gradient';\r\nimport {login ,setUserName} from '../../redux/Action/login'\r\nimport { Route , withRouter} from 'react-router-dom';\r\nimport {currentMenu} from '../../redux/Action/layout' ;\r\nimport Customer from '../customer/Customer'\r\n\r\n\r\n\r\nclass Login extends Component {\r\n    constructor(props){\r\n        super(props)\r\n        this.state = {\r\n            username : '',\r\n            password : '',\r\n            error : false   ,\r\n            gradient : [\r\n               //['#a23628','#007bff'],\r\n             //  ['#007bff','#a23628']\r\n            //  ['#a28628','#f8f2bd'],\r\n           // ['#fffff9','#000000'],\r\n           ['#585858','#f8f2bd']\r\n            ]\r\n        }\r\n    }\r\n\r\n    componentDidMount(){\r\n        this.props.currentMenu('Login')\r\n   }\r\n   // static getDerivedStateFromProps(props,state){\r\n    //     if(props.header !==null && props.header!== undefined ){\r\n    //     return{\r\n    //         header : props.header \r\n    //     }\r\n    // }\r\n    // }\r\n\r\n    username = (e) =>{\r\n        let value = e.target.value ;\r\n        this.setState({\r\n            username : value \r\n        })\r\n    }\r\n\r\n    password = (e) =>{\r\n        let value = e.target.value ;\r\n        this.setState({\r\n            password : value \r\n        })\r\n    }\r\n\r\n    makeLogin = () =>{\r\n        \r\n        let user = this.state.username ;\r\n        let pass = this.state.password ;\r\n\r\n        let option = {\r\n            username : user ,\r\n            password : pass\r\n        }\r\n        localStorage.setItem('theuser',user)\r\n        if(this.state.username === '' || this.state.password === '')\r\n        {\r\n            this.setState({\r\n                error : true \r\n        })\r\n        }\r\n        else {\r\n            this.setState({\r\n                error : false  \r\n        })\r\n        }\r\n        this.props.login(option)\r\n        if(this.props.loginFlag){\r\n         //   console.log(this.props.loginFlag)\r\n            this.props.setUserName(user)\r\n            this.props.currentMenu('Home')\r\n        }\r\n        \r\n        this.props.history.push('/')\r\n\r\n    }\r\n\r\n\r\n\r\n    render(){\r\n      //  console.log(this.props.login)\r\n        return(\r\n            <div>\r\n            <Gradient\r\n                gradients={ this.state.gradient } // required\r\n                property=\"background\"\r\n                duration={ 10000 }\r\n                angle=\"120deg\"\r\n            >\r\n            <div  style={styles.container}>\r\n            <div >\r\n                    <Card style={styles.card}>\r\n                    {\r\n                        this.props.flag === 1 && !this.state.error  ? \r\n                        <span style={styles.txtMsg}> Wrong user name or password </span> : null \r\n                    }\r\n                     {\r\n                        this.state.error   ? \r\n                        <span style={styles.txtMsg}> Field can't be null  </span> : null \r\n                    }\r\n                    \r\n                    \r\n                     <Card.Body>\r\n                    <Card.Img className=\"text-center\" src={require('../../assets/images/desco.png')} style={{width :100,margin : 10,marginTop : 0}}/> \r\n                   \r\n                    <Label text=\"User Name\" color = \"white\" />\r\n\r\n                    <TextField placeholder =\"User ID\" onchange={(val)=>this.username(val)} />\r\n\r\n                    <Label text=\"Password\" color = \"white\" />\r\n                    <TextField placeholder =\"*******\" type=\"password\" onchange={(val)=>this.password(val)} />\r\n                          \r\n                    <BillButton variant=\"info\"\r\n                            color = \"white\" width = {'75%'}\r\n                            text = \"LOG IN !\" onclick={this.makeLogin} />   \r\n                     \r\n                    </Card.Body>\r\n                    </Card>\r\n                   \r\n            </div>\r\n            </div>\r\n            <Loading show={this.props.isloading} />\r\n            </Gradient>\r\n            </div>\r\n                \r\n        )\r\n        \r\n    }\r\n}\r\n\r\n\r\nfunction mapStateToProps(state) {\r\n\treturn {\r\n        isloading : state.loginReducer.isloading ,\r\n       data  : state.loginReducer.data,\r\n       error : state.loginReducer.error,\r\n       loginFlag : state.loginReducer.loginFlag ,\r\n       flag : state.loginReducer.flag \r\n       \r\n\t};\r\n}\r\nfunction mapDispatchToProps(dispatch) {\r\n\treturn {\r\n        login : (val) =>{\r\n             dispatch(login(val))\r\n           },\r\n\r\n        currentMenu : (val)=>{\r\n            dispatch(currentMenu(val))\r\n        },\r\n        \r\n        setUserName : (val) =>{\r\n            dispatch(setUserName(val))\r\n        }\r\n            \r\n\t};\r\n}\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Login)","import actionType from '../../constant/login'\r\n\r\nexport function login(data){\r\n    ///console.log(\"action\")\r\n    return{\r\n        type : actionType.lOG_IN,\r\n        payload : data \r\n    }\r\n}\r\n\r\nexport function setUserName(data){\r\n    return{\r\n        type : actionType.LOG_IN_SET_USER_NAME,\r\n        payload : data\r\n    }\r\n}\r\n\r\nexport function makeErrorTrue(){\r\n    return{\r\n        type : actionType.lOG_IN_MAKE_ERROR_TRUE\r\n    }\r\n}\r\n","import commonStyle from '../../components/style'\r\nconst styles = {\r\n\r\n  successMsg : {\r\n    marginTop : 10,\r\n    color : commonStyle.color.red,\r\n    fontFamily : commonStyle.basicFont\r\n  },\r\n  container : {\r\n      \r\n  },\r\n  mainframe : {\r\n    width: 400,\r\n    height: 100,\r\n    margin: 'auto'\r\n  }\r\n\r\n}\r\n\r\nexport default styles ;","// import commonStyle from '../../components/style'\r\nconst styles = {\r\n\r\n  container : {\r\n      marginTop : 15,\r\n      marginBottom : 15,\r\n      display: 'flex',\r\n      justfyContent : 'space-between'\r\n  },\r\n  radio : {\r\n   // fontSize : commonStyle.normSize,\r\n    letterSpacing : 3.0,\r\n    //color : commonStyle.color.green\r\n }\r\n\r\n\r\n}\r\n\r\nexport default styles ;","import React,{Component} from 'react';\r\nimport styles from './RadioButton.style' ;\r\n\r\n\r\nclass BillingRadio extends Component{\r\n\r\n  constructor(props)\r\n  {\r\n    super(props)\r\n  }\r\n   \r\n  render(){\r\n    return(\r\n        <div style={styles.container}>\r\n             <input type=\"radio\" name={this.props.radio1} value={this.props.value1} onChange={this.props.onchange} /><span style={styles.radio}> &nbsp;  {this.props.first} </span>\r\n             \r\n             <input type=\"radio\" name={this.props.radio2} value={this.props.value2} style={{marginLeft: 60}} \r\n             defaultChecked={this.props.v2}  \r\n             onChange={this.props.onchange} />\r\n             <span style={styles.radio}>\r\n                &nbsp;   {this.props.second} </span> \r\n             \r\n        </div>\r\n    )\r\n\r\n  }\r\n\r\n}\r\n\r\nexport default BillingRadio","import commonStyle from '../../components/style'\r\nconst styles = {\r\n\r\n  container : {\r\n      marginTop : 15,\r\n      marginBottom : 15,\r\n      display: 'flex',\r\n      justfyContent : 'space-between'\r\n  },\r\n  selectBtn : {\r\n      width : 300,\r\n      height : 30,\r\n      fontFamily : commonStyle.basicFont\r\n  }\r\n\r\n}\r\n\r\nexport default styles ;","import React,{Component} from 'react';\r\nimport styles from './Dropdown.style' ;\r\n// import { RadioGroup,Radio } from 'react-mdl';\r\n\r\n\r\nclass BillDropDown extends Component{\r\n   \r\n  render(){\r\n    return(\r\n        <div style={styles.container}>\r\n            <select style={styles.selectBtn} onChange={this.props.onchange}>\r\n            <option value=\"\">SELECT</option>\r\n            <option value=\"1\">LT-A</option>\r\n            <option value=\"2\">LT-B</option>\r\n            <option value=\"3\">LT-C</option>\r\n            <option value=\"4\">LT-D</option>\r\n            </select>\r\n        </div>\r\n    )\r\n\r\n  }\r\n\r\n}\r\n\r\nexport default BillDropDown","import React,{Component} from 'react';\r\nimport styles from './Registration.style' ;\r\nimport { Tabs,Tab,ProgressBar} from 'react-mdl';\r\nimport TextField from '../../components/textField/TextField';\r\nimport Label from '../../components/label/Label' ;\r\nimport BillButton from '../../components/button/Button' ;\r\nimport BillingRadio from '../../components/radio/RadioButton';\r\nimport BillDropDown from '../../components/dropdown/Dropdown' ;\r\nimport {connect} from 'react-redux' ;\r\nimport {createNewUser,updateCustomer,registration} from '../../redux/Action/registration';\r\n\r\n\r\n\r\nclass Registration extends Component{\r\n    constructor(props){\r\n        super(props)\r\n        this.state = {\r\n            activeTab : 0,\r\n            update : false ,\r\n            cusid : 0 ,\r\n            newUser: {\r\n              firstName: \"\",\r\n              lastName: \"\",\r\n              email: \"\",\r\n              address: \"\",\r\n              mobileNo: \"\",\r\n              nidNumber: \"\",\r\n              username: \"\",\r\n              password: \"\"\r\n                \r\n              }\r\n        }\r\n\r\n    }\r\n\r\n    componentDidMount(){\r\n      this.props.registration()\r\n      const { match: { params } } = this.props;\r\n      console.log(\"the customer === \"+params.id)\r\n      const data = localStorage.getItem('customerdata')\r\n      const thisdata = JSON.parse(data) \r\n     /// console.log(thisdata)\r\n     if(params.id==='1')\r\n     {\r\n      this.setState({\r\n        update : true ,\r\n        cusid : thisdata.customerId,\r\n        newUser: {\r\n              customerId : thisdata.id,\r\n              firstName: thisdata.firstName,\r\n              lastName: thisdata.lastName,\r\n              email: thisdata.email,\r\n              address: thisdata.address,\r\n              mobileNo: thisdata.mobileNo,\r\n              nidNumber: thisdata.nidNumber,\r\n              username: thisdata.username\r\n        }\r\n      })\r\n     }\r\n     else {\r\n      this.makeInitial()\r\n     } \r\n    \r\n  }\r\n\r\n  makeInitial = () =>{\r\n    this.setState({\r\n      update : false ,\r\n      newUser: {\r\n        firstName: \"\",\r\n        lastName: \"\",\r\n        email: \"\",\r\n        address: \"\",\r\n        mobileNo: \"\",\r\n        nidNumber: \"\",\r\n        username: \"\",\r\n        password: \"\"\r\n          \r\n        }\r\n    })\r\n  }\r\n\r\n   input = (e,name) =>{\r\n    let value = e.target.value;\r\n    this.setState(\r\n      prevState => ({\r\n        newUser: {\r\n          ...prevState.newUser,\r\n          [name]: value \r\n        }\r\n      })\r\n    )\r\n   }\r\n\r\n   create = () =>{\r\n    // console.log(this.state.newUser)\r\n     const option = {\r\n      \"username\": this.state.newUser.username,\r\n      \"password\": this.state.newUser.password,\r\n      \"firstName\": this.state.newUser.firstName,\r\n      \"lastName\": this.state.newUser.lastName,\r\n      \"email\": this.state.newUser.email,\r\n      \"address\": this.state.newUser.address,\r\n      \"mobileNo\": this.state.newUser.mobileNo,\r\n      \"nidNumber\": this.state.newUser.nidNumber\r\n    }\r\n     this.props.createNewUser(option)\r\n   }\r\n\r\n   update = () =>{\r\n    const cusid = this.state.cusid \r\n    const option = {\r\n      \"customerId\" : this.state.cusid ,\r\n      \"username\": this.state.newUser.username,\r\n      \"firstName\": this.state.newUser.firstName,\r\n      \"lastName\": this.state.newUser.lastName,\r\n      \"email\": this.state.newUser.email,\r\n      \"address\": this.state.newUser.address,\r\n      \"mobileNo\": this.state.newUser.mobileNo,\r\n      \"nidNumber\": this.state.newUser.nidNumber\r\n    }\r\n\r\n   // console.log(cusid,option)\r\n   this.props.updateCustomer(option,cusid)\r\n   }\r\n      \r\n\r\n  render(){\r\n    console.log(this.state.update)\r\n    return(\r\n      <div>\r\n         <div className=\"demo-tabs\">\r\n                <Tabs activeTab={this.state.activeTab} onChange={(tabId)=>this.changeTab(tabId)} ripple>\r\n                    {/* {this.props.msg} */}\r\n                </Tabs>\r\n               <span style={{marginLeft :20,color : 'red',letterSpacing:1.5}}>{this.props.msg}</span>\r\n                <section style={{marginTop: 0}}>\r\n                    <div style={this.state.activeTab === 0 ? {display : 'block'} : {display : 'none'}}>\r\n                        <div style={styles.mainframe}>\r\n                            <Label text =\"First Name\"/>\r\n                            <TextField  \r\n                            label=\"First name \" \r\n                            value = {  this.state.newUser.firstName}\r\n                             onchange={(e)=>this.input(e,'firstName')}/>\r\n                            <Label text=\"Last Name\"/>\r\n                            <TextField  \r\n                            label=\"Last name \"\r\n                            value = {  this.state.newUser.lastName}\r\n                            onchange={(e)=>this.input(e,'lastName')} />\r\n                            <Label text=\"Email\"/>\r\n                            <TextField  \r\n                            label=\"Email\"\r\n                            value = {  this.state.newUser.email}\r\n                             onchange={(e)=>this.input(e,'email')}/>\r\n                            <Label text=\"Address\"/>\r\n                            <TextField \r\n                             label=\"Address\" \r\n                             value = {  this.state.newUser.address} \r\n                             onchange={(e)=>this.input(e,'address')} />\r\n                            <Label text=\"Mobile \"/>\r\n                            <TextField  \r\n                            label=\"Mobile \" \r\n                            value = {  this.state.newUser.mobileNo}\r\n                            pattern = \"-?[0-9]*(\\.[0-9]+)?\" \r\n                            type=\"number\" \r\n                            error =\"not a mobile number !\" \r\n                            onchange={(e)=>this.input(e,'mobileNo')}/>\r\n                            <Label text=\"National ID\"/>\r\n                            <TextField  \r\n                            label=\"National ID \" \r\n                            value = {  this.state.newUser.nidNumber}\r\n                            onchange={(e)=>this.input(e,'nidNumber')} />\r\n                            <Label text=\"User Name\"/>\r\n                            <TextField  \r\n                            label=\"User name \"\r\n                            value = {  this.state.newUser.username}\r\n                             onchange={(e)=>this.input(e,'username')} />\r\n                            <Label text=\"Password\"/><TextField  label=\"Password \" type=\"password\" onchange={(e)=>this.input(e,'password')} />\r\n                           <div style={{display : 'flex' ,flexDirection : 'row'}}> \r\n                            <BillButton\r\n                             text={this.state.update ? \"UPDATE \" : \"SUBMIT\"}\r\n                           // onclick={()=>this.changeTab(1)}\r\n                            onclick={this.state.update ? ()=>this.update() : ()=>this.create()}\r\n                            width = {this.state.update ? 200  : 280 }\r\n                            />\r\n                            {\r\n                              this.state.update ? \r\n                              <BillButton\r\n                              variant = \"link\"\r\n                             text= \"cancel\"\r\n                           // onclick={()=>this.changeTab(1)}\r\n                            onclick={this.makeInitial}\r\n                            width = {40}\r\n                            /> : null \r\n                            }\r\n                          </div>\r\n\r\n                        </div>\r\n                    </div>\r\n                   \r\n                </section>\r\n            </div>  \r\n      </div>\r\n    )\r\n  }\r\n}\r\n\r\nfunction mapStateToProps(state) {\r\n\treturn {\r\n        isLoading : state.regReducer.isLoading ,\r\n        data : state.regReducer.data ,\r\n        msg : state.regReducer.msg  \r\n\t};\r\n}\r\nfunction mapDispatchToProps(dispatch) {\r\n\treturn {\r\n\t\tcreateNewUser : (val) =>{\r\n            dispatch(createNewUser(val))\r\n          },\r\n    updateCustomer : (val1,val2) =>{\r\n            dispatch(updateCustomer(val1,val2))\r\n    },\r\n    registration : () =>{\r\n            dispatch(registration())\r\n    }\r\n            \r\n\t};\r\n}\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Registration);","import commonStyle from '../../components/style';\r\n\r\nconst styles ={\r\n\r\n    norecord : {\r\n      \r\n       display : 'flex',\r\n      justifyContent : 'center'\r\n     //  marginLeft : 20 ,\r\n      \r\n\r\n    }\r\n}\r\n\r\nexport default styles ;","const actionType = {\r\n\r\n    CUSTOMER_BILLING : \"CUSTOMER_BILLING\",\r\n    CUSTOMER_BILLING_SUCCESS : \"CUSTOMER_BILLING_SUCCESS\",\r\n    CUSTOMER_BILLING_FAILURE : \"CUSTOMER_BILLING_FAILURE\",\r\n    CUSTOMER_PAID_BILLING : \"CUSTOMER_PAID_BILLING\",\r\n    CUSTOMER_PAID_BILLING_SUCCESS : \"CUSTOMER_PAID_BILLING_SUCCESS\",\r\n    CUSTOMER_PAID_BILLING_FAILURE : \"CUSTOMER_PAID_BILLING_FAILURE\",\r\n\r\n}\r\n\r\nexport default actionType ;","import actionType from '../../constant/billing'\r\n\r\nexport function getCustomerBilling(data){\r\n    console.log(\"action\")\r\n    return{\r\n        type : actionType.CUSTOMER_BILLING,\r\n        payload : data \r\n    }\r\n}\r\n\r\nexport function getAllPaidBill(data){\r\n    return {\r\n        type : actionType.CUSTOMER_PAID_BILLING,\r\n        payload : data \r\n    }\r\n}\r\n\r\n\r\n","import commonStyle from '../../components/style';\r\n\r\nconst styles = {\r\n    container : {\r\n\r\n    },\r\n    hcolor : commonStyle.color.blueBlase ,\r\n    bcolor : 'transparent',//commonStyle.color.white ,\r\n    bcolorg : commonStyle.color.green ,\r\n    htcolor : commonStyle.color.white ,\r\n    btcolor : commonStyle.color.black ,\r\n    shade : commonStyle.color.green,\r\n    red : commonStyle.color.red,\r\n    hfsize : 11 ,\r\n    fontfamily : commonStyle.basicFont,\r\n    letter : 4.0 ,\r\n    bletter : 1.0 ,\r\n    leftborder : '1px solid #e9dada',\r\n    rightborder : '1px solid #e9dada',\r\n    topborder : '1px solid #e9dada',\r\n    bottomborder : '1px solid #e9dada',\r\n\r\n\r\n    rootbackground : {\r\n      backgroundColor : commonStyle.color.blueBlase\r\n    },\r\n    tableHeader : {\r\n        //  backgroundColor : commonStyle.color.white,\r\n         color : commonStyle.color.black,\r\n         fontFamily : commonStyle.basicFont,\r\n         letterSpacing : 4.0,        \r\n         \r\n     },\r\n     headerCell : {\r\n      //  border : '1px solid gray',\r\n        fontSize : 11,\r\n        letterSpacing : 1.25,\r\n     },\r\n     border : {\r\n      borderBottom : '1px solid gray',\r\n      borderLeft : '1px solid gray',\r\n      borderRight : '1px solid gray',\r\n      },\r\n     borderleft : {\r\n       borderLeft : '1px solid gray',\r\n     },\r\n     lineheight3 : {\r\n         lineHeight : 3,\r\n     },\r\n     center : {\r\n        textAlign : 'center',\r\n     },\r\n     left : {\r\n        textAlign : 'left',\r\n     },\r\n     space : {\r\n       left : 2\r\n     },\r\n     \r\n \r\n}\r\n\r\nexport default styles ;","import React , {Component} from  'react' ;\r\nimport styles from './Paintediv.style';\r\n\r\nclass PaintedDiv extends Component {\r\n    constructor(props){\r\n      super(props) \r\n      this.state = {\r\n\r\n      }     \r\n    }\r\n    render(){\r\n        return(\r\n            <div style={{\r\n                width : this.props.width,\r\n                height : this.props.height ,\r\n                backgroundColor : this.props.backgroundcolor,\r\n                color : this.props.color,\r\n               // textAlign : this.props.textalign,\r\n                fontSize : this.props.fontsize ,\r\n                fontFamily : this.props.fontfamily,\r\n                letterSpacing : this.props.letterspacing,\r\n                borderLeft : this.props.leftborder,\r\n                borderRight : this.props.rightborder,\r\n                borderTop : this.props.topborder,\r\n                borderBottom : this.props.bottomborder,\r\n               \r\n            }}><div style={{ marginLeft : 10,display:'flex',flexDirection : 'row',textAlign : this.props.textalign}}> \r\n                <span style={{width : 100}}> {this.props.title} </span>\r\n                { this.props.flag ? <span style={{width : 10 }}> :  </span> : null }  \r\n                <span style={{}}> {this.props.text} </span>\r\n             </div></div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default PaintedDiv ;","import React , {Component} from 'react';\r\nimport {Grid,Cell} from 'react-mdl' ;\r\nimport styles from './Billing.style';\r\nimport PaintedDiv from '../paintediv/Paintediv'\r\n\r\nclass BillingComp extends Component {\r\n    constructor(props){\r\n        super(props)\r\n        this.state ={\r\n                name : '',\r\n                address : ''\r\n        }\r\n    }\r\n\r\n    componentDidMount(){\r\n        this.setState({\r\n            name : localStorage.getItem('name'),\r\n            address : localStorage.getItem('address'), \r\n        })\r\n\r\n    }\r\n\r\n    static getDerivedPropsfromState(props,state){\r\n\r\n    }\r\n\r\n    render(){\r\n        return(\r\n            <div> \r\n               <div style={{width: '80%', margin: 'auto'}}>\r\n               \r\n\r\n              {/*  next  */}\r\n\r\n              <div style={{display:'flex',flexDirection:'row'}}>\r\n                {/* left */}\r\n              <div style={{width:'50%'}}>\r\n              <PaintedDiv width={'100%'} height={30} backgroundcolor = {styles.bcolor}\r\n               color = {styles.red}\r\n               textalign = \"left\" fontsize = {styles.hfsize} fontfamily = {styles.fontfamily}\r\n               letterspacing = {styles.bletter}\r\n               topborder = {styles.topborder}\r\n               leftborder = {styles.leftborder} rightborder={styles.rightborder}  bottomborder={styles.bottomborder}\r\n               flag = {true}\r\n               title = \"Month\"\r\n               text={this.props.billmonth}\r\n               />\r\n               <PaintedDiv width={'100%'} height={30} backgroundcolor = {styles.bcolor}\r\n               color = {styles.btcolor}\r\n               textalign = \"left\" fontsize = {styles.hfsize} fontfamily = {styles.fontfamily}\r\n               letterspacing = {styles.bletter} leftborder = {styles.leftborder} rightborder={styles.rightborder}  bottomborder={styles.bottomborder}\r\n               flag = {true}\r\n               title = \"Bill No\"\r\n               //text={this.props.billid.substring(20)}\r\n               text={this.props.billid}\r\n               />\r\n\r\n              <div style={{display:'flex',flexDirection:'row'}}>\r\n                <div style={{width:'50%'}}>\r\n                <PaintedDiv width={'100%'} height={30} backgroundcolor = {styles.bcolor}\r\n               color = {styles.btcolor}\r\n               textalign = \"left\" fontsize = {styles.hfsize} fontfamily = {styles.fontfamily}\r\n               letterspacing = {styles.bletter} leftborder = {styles.leftborder} rightborder={styles.rightborder}  bottomborder={styles.bottomborder}\r\n               flag = {true}\r\n               title = \"Issue Date\"\r\n               text={this.props.issue} \r\n               />\r\n                </div>\r\n                <div style={{width:'50%'}}>\r\n                <PaintedDiv width={'100%'} height={30} backgroundcolor = {styles.bcolor}\r\n               color = {styles.btcolor}\r\n               textalign = \"left\" fontsize = {styles.hfsize} fontfamily = {styles.fontfamily}\r\n               letterspacing = {styles.bletter} \r\n                rightborder={styles.rightborder}  bottomborder={styles.bottomborder}\r\n               flag = {true}\r\n               title = \"Due Date\"\r\n               text={this.props.due} \r\n               />\r\n                </div>\r\n               </div>\r\n               <PaintedDiv width={'100%'} height={30} backgroundcolor = {styles.bcolor}\r\n               color = {styles.btcolor}\r\n               textalign = \"left\" fontsize = {styles.hfsize} fontfamily = {styles.fontfamily}\r\n               letterspacing = {styles.bletter} leftborder = {styles.leftborder} rightborder={styles.rightborder}  bottomborder={styles.bottomborder}\r\n               flag = {true}\r\n               title =\"Unit\"\r\n               text={this.props.consume}\r\n               />\r\n              </div>\r\n\r\n              {/* right  */}\r\n              <div style={{width:'50%'}}>\r\n              <PaintedDiv width={'100%'} height={30} backgroundcolor = {styles.bcolor}\r\n               color = {styles.btcolor}\r\n               textalign = \"left\" fontsize = {styles.hfsize} fontfamily = {styles.fontfamily}\r\n               letterspacing = {styles.bletter} \r\n               topborder = {styles.topborder}\r\n               rightborder={styles.rightborder}  bottomborder={styles.bottomborder}\r\n               flag = {true}\r\n               title = \"Normal Charge\"\r\n               text={this.props.normalcharge}\r\n               />\r\n              </div>  \r\n             </div>\r\n\r\n             \r\n               </div>\r\n                 <h1></h1>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default BillingComp ","import React , {Component} from 'react';\r\nimport {Grid,Cell} from 'react-mdl' ;\r\nimport styles from './Billing.style';\r\nimport PaintedDiv from '../paintediv/Paintediv'\r\n\r\nclass BasicBilling extends Component {\r\n    constructor(props){\r\n        super(props)\r\n        this.state ={\r\n                name : '',\r\n                address : ''\r\n        }\r\n    }\r\n\r\n    componentDidMount(){\r\n        this.setState({\r\n            name : localStorage.getItem('name'),\r\n            address : localStorage.getItem('address'), \r\n        })\r\n\r\n    }\r\n\r\n    static getDerivedPropsfromState(props,state){\r\n\r\n    }\r\n\r\n    render(){\r\n        return(\r\n            <div> \r\n               <div style={{width: '80%', margin: 'auto'}}>\r\n               <PaintedDiv width={'100%'} height={40} backgroundcolor = {styles.hcolor}\r\n               color = {styles.htcolor}\r\n               textalign = \"center\" fontsize = {styles.hfsize} fontfamily = {styles.fontfamily}\r\n               letterspacing = {styles.letter}\r\n               flag = {false}\r\n            //    title = \"Billing\"\r\n               text=\"DHAKA  ELECTRIC POWER SUPPLY COMPANY  (DESCO)\"\r\n               />\r\n                {/* name / address  */}\r\n              <div style={{display:'flex',flexDirection:'row'}}>\r\n\r\n              <div style={{width:'55%'}}>\r\n              <PaintedDiv width={'100%'} height={30} backgroundcolor = {styles.bcolor}\r\n               color = {styles.btcolor}\r\n               textalign = \"left\" fontsize = {styles.hfsize} fontfamily = {styles.fontfamily}\r\n               letterspacing = {styles.bletter} leftborder = {styles.leftborder} rightborder={styles.rightborder} \r\n               flag = {true}\r\n               title = \"Name \"\r\n               text={ this.state.name}\r\n               />\r\n                <PaintedDiv width={'100%'} height={40} backgroundcolor = {styles.bcolor}\r\n               color = {styles.btcolor}\r\n               textalign = \"left\" fontsize = {styles.hfsize} fontfamily = {styles.fontfamily}\r\n               letterspacing = {styles.bletter} leftborder = {styles.leftborder}  rightborder={styles.rightborder} bottomborder = {styles.bottomborder}\r\n               flag = {true}\r\n               title = \"Address \"\r\n               text={this.state.address}\r\n               />\r\n\r\n               </div>\r\n                <div style={{width:'45%'}}>\r\n               <PaintedDiv width={'100%'} height={20} backgroundcolor = {styles.bcolor}\r\n               color = {styles.btcolor}\r\n               textalign = \"left\" fontsize = {styles.hfsize} fontfamily = {styles.fontfamily}\r\n               letterspacing = {styles.bletter} leftborder = {styles.leftborder} rightborder={styles.rightborder} \r\n               flag = {true}\r\n               title=\"Account No\"\r\n              // text={this.props.account.substring(22)}\r\n               text={this.props.account}\r\n               />\r\n               <PaintedDiv width={'100%'} height={20} backgroundcolor = {styles.bcolor}\r\n               color = {styles.btcolor}\r\n               textalign = \"left\" fontsize = {styles.hfsize} fontfamily = {styles.fontfamily}\r\n               letterspacing = {styles.bletter}  rightborder={styles.rightborder} \r\n               flag = {true}\r\n               title=\"Meter No\"\r\n               text={this.props.meter}\r\n               />\r\n               <PaintedDiv width={'100%'} height={30} backgroundcolor = {styles.bcolor}\r\n               color = {styles.btcolor}\r\n               textalign = \"left\" fontsize = {styles.hfsize} fontfamily = {styles.fontfamily}\r\n               letterspacing = {styles.bletter}  rightborder={styles.rightborder} bottomborder = {styles.bottomborder}\r\n               flag = {true}\r\n               title = \"Sanction Load\"\r\n               text={this.props.load}\r\n               />\r\n               </div>\r\n\r\n              </div>\r\n\r\n             \r\n               </div>\r\n                 <h1></h1>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default BasicBilling","import commonStyle from '../../components/style' ;\r\n\r\nconst styles = {\r\n    container :{\r\n        display : 'flex',\r\n        // flexDirectin : 'column',\r\n        clear: 'both',\r\n        display: 'block'\r\n    },\r\n    root : {\r\n        width: 320, \r\n        height: 80 ,\r\n        margin: 'auto',\r\n        margin : 10 ,\r\n        borderRadius : 20,\r\n        \r\n        },\r\n    cardTitle : {\r\n       backgroundColor : commonStyle.color.white,\r\n       fontFamily : commonStyle.basicFont,\r\n       letterSpacing : 1.0,\r\n        },\r\n    metertitle : {\r\n        color : commonStyle.color.green,\r\n        // fontFamily : commonStyle.menuFont,\r\n        fontSize : 12 ,\r\n        },\r\n    meterid : {\r\n        letterSpacing : 1.35,\r\n        fontFamily : commonStyle.basicFont\r\n        },\r\n    meterTitle : {\r\n        color  : commonStyle.color.shade,\r\n        fontWeight : 'bold',\r\n        fontSize : 12 ,\r\n        fontFamily : commonStyle.basicFont\r\n        // fontFamily : commonStyle.basicFont,\r\n    },\r\n\r\n    cardText : {\r\n        backgroundColor : commonStyle.color.white,\r\n        width : '100%',\r\n        color : commonStyle.color.black,\r\n        letterSpacing : 1.0,\r\n        fontFamily : commonStyle.basicFont\r\n       // alignSelf : 'flex-end'\r\n    },\r\n    textColor : {\r\n        color : commonStyle.color.orange,\r\n        fontWeight : 'bold'\r\n    },\r\n    cardActions :{\r\n        backgroundColor : commonStyle.color.shade,\r\n        textAlign : 'right'\r\n        \r\n    },\r\n    buttonText : {\r\n        color : commonStyle.color.orange,\r\n        letterSpacing : 1.0,\r\n        fontFamily : commonStyle.basicFont,\r\n        fontSize : 11 ,\r\n        fontWeight : 'bold'\r\n\r\n    },\r\n\r\n    // new \r\n    body : {\r\n        backgroundColor : 'transparent',\r\n        width: '18rem',\r\n        letterSpacing : 1.0,\r\n        fontSize : 14 ,\r\n        color : commonStyle.color.white,\r\n        fontFamily : commonStyle.basicFont,\r\n     //   fontWeight : 'bold'\r\n    }\r\n}\r\n\r\nexport default styles ;","import React , {Component} from 'react';\r\nimport {Card,Button } from 'react-bootstrap';\r\nimport styles from './Card.style' ;\r\n\r\nclass InfoCard extends Component {\r\n\r\n    render(){\r\n        return (\r\n            <div>\r\n                <Card\r\n              //  bg=\"info\"\r\n               // key={idx}\r\n                text= 'black'\r\n                style={styles.body}\r\n                >\r\n                <Card.Header>{this.props.header}</Card.Header>\r\n                <Card.Body>\r\n                    <Card.Title style={styles.body}>{this.props.title}</Card.Title>\r\n                    <Card.Text>\r\n                   {this.props.address}\r\n                    </Card.Text>\r\n                </Card.Body>\r\n                </Card>\r\n\r\n            </div>\r\n        )\r\n    }\r\n    \r\n}\r\n\r\nexport default InfoCard ","import React , {Component} from 'react';\r\nimport { Grid,Cell } from 'react-mdl';\r\nimport styles from './Billing.style';\r\nimport {connect} from 'react-redux' ;\r\nimport {getCustomerBilling} from '../../redux/Action/billing';\r\nimport BillingComp from '../../components/billing/Billing'; \r\nimport BasicBilling from '../../components/billing/BasicBilling';\r\nimport Label from '../../components/label/Label';\r\nimport {currentMenu} from  '../../../src/redux/Action/layout';\r\nimport InfoCard from '../../components/card/InfoCard' ;\r\nimport { Gradient } from 'react-gradient';\r\nimport {Row,Col, Container,Table} from 'react-bootstrap'\r\n\r\nclass Billing extends Component{\r\n    constructor(props){\r\n        super(props)\r\n        this.state = {\r\n            gradient : [\r\n                ['#ffffff','#7a6e43']\r\n                ],\r\n            data : [],\r\n            info : {}\r\n        }\r\n      \r\n    }\r\n\r\n    componentDidMount(){\r\n        const { match: { params } } = this.props;\r\n        console.log(\"the customer === \"+params.id)\r\n        this.props.getCustomerBilling(params.id)\r\n    }\r\n    static getDerivedStateFromProps(props,state){\r\n        if(props.info !==null && props.info!== undefined ){\r\n        return{\r\n            data : props.data,\r\n            info : props.info \r\n        }\r\n    }\r\n\r\n    return null \r\n    }\r\n\r\n    convertDate = (d) =>{\r\n        var  date = new Date(d)\r\n        var dd = date.getDate(); \r\n        var mm = date.getMonth()+1;\r\n        var yyyy = date.getFullYear(); \r\n        if(dd<10){dd='0'+dd} \r\n        if(mm<10){mm='0'+mm};\r\n        return d = dd+'/'+mm+'/'+yyyy\r\n    }\r\n\r\n    getMonth = (d) =>{\r\n        const monthNames = [\"January\", \"February\", \"March\", \"April\", \"May\", \"June\",\r\n         \"July\", \"August\", \"September\", \"October\", \"November\", \"December\"\r\n];\r\n\r\n        var  date = new Date(d)\r\n        var mm = date.getMonth() ;\r\n        var yyyy = date.getFullYear(); \r\n        // const d = new Date(d);\r\n       return  monthNames[mm] +','+ yyyy \r\n    }\r\n    handleBack = () => {\r\n        let page = 'Meter List' ;\r\n        this.props.currentMenu(page)\r\n        this.props.history.goBack()\r\n      }\r\n    \r\n    render(){\r\n      //  console.log(this.state.data)\r\n        return(\r\n            <div >\r\n                 <Gradient\r\n                gradients={ this.state.gradient } // required\r\n                property=\"background\"\r\n                duration={ 10000 }\r\n                angle=\"100deg\"\r\n            > \r\n             <Container style={{height : '100vh'}} >\r\n                <Label color = \"black\" onclick={()=>this.handleBack()} text=\"<< back\" />\r\n                <BasicBilling \r\n                account = {this.state.info.billAccountId}\r\n                meter = {this.state.info.meterNumberOnBillSlip}\r\n                load = \"2.00\"\r\n                />\r\n                {  \r\n                this.state.data.length > 0 ? \r\n                this.state.data.map((data,index)=>\r\n                <div style={{margin:5}} key={index}>\r\n                <BillingComp \r\n                billmonth = {data.paymentWindow}\r\n                billid = {data.billingRecordId}\r\n                issue = {data.paymentWindowStartDay}\r\n                due = {data.paymentWindowEndDay}\r\n                consume = {data.consumedUnits}\r\n                normalcharge = {data.billAmount}\r\n               />\r\n               <div style={{marginTop:10}}>  </div>\r\n            </div>\r\n                )\r\n\r\n                : <div style={styles.norecord}> <InfoCard \r\n                header = { \"No Record Found\" }\r\n                \r\n               />\r\n               </div>\r\n            }\r\n            </Container>\r\n           \r\n            </Gradient>   \r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nfunction mapStateToProps(state) {\r\n\treturn {\r\n       // courseData:state\r\n        customer : state.customerReducer.customer,\r\n        data : state.billingReducer.data,\r\n        info : state.billingReducer.basicInfo\r\n       \r\n\t};\r\n}\r\nfunction mapDispatchToProps(dispatch) {\r\n\treturn {\r\n        getCustomerBilling : (val) =>{\r\n             dispatch(getCustomerBilling(val))\r\n           },\r\n           currentMenu : (val)=>{\r\n               dispatch(currentMenu(val))\r\n           }\r\n            \r\n\t};\r\n}\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Billing);","import commonStyle from '../../components/style';\r\n\r\nconst styles ={\r\n  container : {\r\n    marginTop : 20 \r\n  },\r\n\r\n  updateSec : {\r\n    marginTop : 50 \r\n  },\r\n  body : {\r\n    fontFamily : commonStyle.basicFont ,\r\n    fontSize : 14 ,\r\n   // letterSpacing : 1.0\r\n  },\r\n  cursor : {\r\n    cursor : commonStyle.cursor\r\n  }\r\n\r\n\r\n// old\r\n    // mainframe : {\r\n    //     width: 400,\r\n    //     height: 100,\r\n    //     margin: 'auto'\r\n    //   },\r\n    //   header : {\r\n    //     letterSpacing:2.0,\r\n    //     fontFamily : commonStyle.basicFont,\r\n    //     color : commonStyle.color.green\r\n    // },\r\n    // updateMsg : {\r\n    //   //display : 'float',\r\n    //   marginTop : 20,\r\n    //   display: 'flex', justifyContent: 'center',\r\n    //   fontFamily : commonStyle.menuFont,\r\n    //   fontSize : 13 ,\r\n    //   letterSpacing : 1.0 ,\r\n    //   color : commonStyle.color.red\r\n    // }\r\n   \r\n}\r\n\r\nexport default styles ;","const actionType = {\r\n    SETTING_GET_VALUE : \"SETTING_GET_VALUE\",\r\n    SETTING_GET_VALUE_SUCCESS : \"SETTING_GET_VALUE_SUCCESS\",\r\n    SETTING_GET_VALUE_FAILURE : \"SETTING_GET_VALUE_FAILURE\",\r\n    SETTING_VALUE_UPDATE :  \"SETTING_GET_VALUE_UPDATE\",\r\n    SETTING_VALUE_UPDATE_SUCCESS : \"SETTING_GET_VALUE_UPDATE_SUCCESS\",\r\n    SETTING_VALUE_UPDATE_FAILURE  : \"SETTING_GET_VALUE_UPDATE_FAILURE\"\r\n}\r\n\r\nexport default actionType ;","import React , {Component} from 'react';\r\n//import { Grid,Cell } from 'react-mdl';\r\nimport {Table,Container,Row,Col} from 'react-bootstrap' ;\r\nimport styles from './Setting.style';\r\nimport {connect} from 'react-redux' ;\r\nimport {getCustomerBilling} from '../../redux/Action/billing';\r\nimport { Tabs,Tab} from 'react-mdl';\r\nimport Label from '../../components/label/Label' ;\r\nimport TextField from '../../components/textField/TextField';\r\nimport BillButton from '../../components/button/Button' ;\r\nimport { getValue ,postValue } from '../../../src/redux/Action/setting';\r\nimport { Gradient } from 'react-gradient';\r\nimport Header from '../../components/alert/Alert' ;\r\n// import Label from '../../components/label/Label';\r\n\r\nclass Setting extends Component{\r\n    constructor(props){\r\n        super(props)\r\n        this.state = {\r\n             activeTab: 0,\r\n             flag : true ,\r\n             info : ['VAT','Re Print Cost','Installment_Of_SDrop','Meter Rent','Sanction Load',\r\n             'PFC Charge','Demand Charge','X-former Loss'],\r\n             duplicate : ['vatInPercent','reprintCost','installmentOfSDrop','meterRent',\r\n             'sanctionLoad','pfcCharge','demandCharge','xformerLoss'],\r\n             data : [],\r\n             vatInPercent : 0,\r\n             reprintCost : 0,\r\n             installmentOfSDrop : 0,\r\n             meterRent : 0,\r\n             sanctionLoad : 0,\r\n             pfcCharge : 0 ,\r\n             demandCharge : 0 ,\r\n             xformerLoss : 0 ,\r\n             gradient : [\r\n               \r\n                ['#ffffff','#7a6e43']\r\n                ],\r\n            showUpdate : false ,\r\n            currentClicked : '',\r\n            duplicateName : '',\r\n            currentClickedValue : 0 \r\n\r\n\r\n           \r\n        }\r\n\r\n    }\r\n\r\n    componentDidMount(){\r\n        this.props.getValue()\r\n       \r\n    }\r\n\r\n    static getDerivedStateFromProps(props,state){\r\n        if(props.data !==null && props.data!== undefined && state.flag ){\r\n        return{\r\n            data : props.data ,\r\n            vatInPercent : props.vatInPercent ,\r\n            reprintCost : props.reprintCost,\r\n            installmentOfSDrop : props.installmentOfSDrop,\r\n            meterRent : props.meterRent,\r\n            sanctionLoad : props.sanctionLoad,\r\n            pfcCharge : props.pfcCharge,\r\n            demandCharge : props.demandCharge,\r\n            xformerLoss : props.xformerLoss,\r\n        }\r\n    }\r\n    return null \r\n    }\r\n\r\n    newScreen = (name,duplicate,value ) =>{\r\n        this.setState({\r\n            showUpdate : true ,\r\n            currentClicked : name ,\r\n            currentClickedValue : value ,\r\n            duplicateName : duplicate \r\n        })\r\n    }\r\n    \r\n    handleInput = (e,name) =>{\r\n        console.log(name)\r\n        let value = e.target.value;\r\n       this.setState({\r\n           flag : false ,\r\n           [name] : value ,\r\n           currentClickedValue : value \r\n       },()=>console.log(this.state.reprintCost))\r\n      \r\n    }\r\n\r\n    update = () =>{\r\n        let option = {\r\n            \"vatInPercent\": parseInt(this.state.vatInPercent),\r\n            \"reprintCost\": parseInt(this.state.reprintCost),\r\n            \"installmentOfSDrop\": parseInt(this.state.installmentOfSDrop),\r\n            \"meterRent\": parseInt(this.state.meterRent),\r\n            \"sanctionLoad\": parseInt(this.state.sanctionLoad),\r\n            \"pfcCharge\": parseInt(this.state.pfcCharge),\r\n            \"demandCharge\": parseInt(this.state.demandCharge),\r\n            \"xformerLoss\": parseInt(this.state.xformerLoss)\r\n        }\r\n        console.log(option)\r\n        this.props.postValue(option)\r\n  \r\n    }\r\n    \r\n    render(){\r\n     // console.log(this.state)\r\n        return(\r\n            <div >\r\n             <Gradient\r\n                  gradients={ this.state.gradient } // required\r\n                  property=\"background\"\r\n                  duration={ 10000 }\r\n                  angle=\"100deg\"\r\n                  style={{height: '100vh' }}\r\n                  > \r\n                <Container>\r\n                <Row >\r\n                    {/* <Col md=\"1\"></Col> */}\r\n                    <Col md=\"7\">\r\n                    <Table striped bordered hover style={styles.container}>\r\n                    <thead>\r\n                        <tr>\r\n                        <th>#</th>\r\n                        <th>Name</th>\r\n                        <th>Value</th>\r\n                        </tr>\r\n                    </thead>\r\n                    <tbody>\r\n                    <tr style={{...styles.cursor,...styles.body}} onClick={()=>this.newScreen(this.state.info[0],this.state.duplicate[0],this.state.vatInPercent)}>\r\n                        <td>1</td>\r\n                        <td>{this.state.info[0]}</td>\r\n                        <td>{this.state.vatInPercent}</td>\r\n                    </tr>\r\n                    <tr style={{...styles.cursor,...styles.body}} onClick={()=>this.newScreen(this.state.info[1],this.state.duplicate[1],this.state.reprintCost)}>\r\n                        <td>2</td>\r\n                        <td>{this.state.info[1]}</td>\r\n                        <td>{this.state.reprintCost}</td>\r\n                    </tr>\r\n                    <tr style={{...styles.cursor,...styles.body}} onClick={()=>this.newScreen(this.state.info[2],this.state.duplicate[2],this.state.installmentOfSDrop)}>\r\n                        <td>3</td>\r\n                        <td>{this.state.info[2]}</td>\r\n                        <td>{this.state.installmentOfSDrop}</td>\r\n                    </tr>\r\n                    <tr style={{...styles.cursor,...styles.body}} onClick={()=>this.newScreen(this.state.info[3],this.state.duplicate[3],this.state.meterRent)}>\r\n                        <td>4</td>\r\n                        <td>{this.state.info[3]}</td>\r\n                        <td>{this.state.meterRent}</td>\r\n                    </tr>\r\n                    <tr style={{...styles.cursor,...styles.body}} onClick={()=>this.newScreen(this.state.info[4],this.state.duplicate[4],this.state.sanctionLoad)}>\r\n                        <td>5</td>\r\n                        <td>{this.state.info[4]}</td>\r\n                        <td>{this.state.sanctionLoad}</td>\r\n                    </tr>\r\n                    <tr style={{...styles.cursor,...styles.body}} onClick={()=>this.newScreen(this.state.info[5],this.state.duplicate[5],this.state.pfcCharge)}>\r\n                        <td>6</td>\r\n                        <td>{this.state.info[5]}</td>\r\n                        <td>{this.state.pfcCharge}</td>\r\n                    </tr>\r\n                    <tr style={{...styles.cursor,...styles.body}} onClick={()=>this.newScreen(this.state.info[6],this.state.duplicate[6],this.state.demandCharge)}>\r\n                        <td>7</td>\r\n                        <td>{this.state.info[6]}</td>\r\n                        <td>{this.state.demandCharge}</td>\r\n                    </tr>\r\n                    <tr style={{...styles.cursor,...styles.body}} onClick={()=>this.newScreen(this.state.info[7],this.state.duplicate[7],this.state.xformerLoss)}>\r\n                        <td>8</td>\r\n                        <td>{this.state.info[7]}</td>\r\n                        <td>{this.state.xformerLoss}</td>\r\n                    </tr>\r\n                    </tbody>\r\n                    </Table>\r\n                    </Col>\r\n                    <Col md=\"1\"> </Col>\r\n                    <Col md=\"4\">\r\n                    <div style={styles.updateSec}>\r\n                    {\r\n                        this.state.showUpdate ? \r\n                        <div>\r\n                        <Header \r\n                        variant = \"warning\"\r\n                        text = \"SECTION :: UPDATE\"\r\n                        width = {'75%'}\r\n                        />\r\n                        <Label  \r\n                        text= {this.state.currentClicked}\r\n                        />\r\n                        <TextField   \r\n                        value = {this.state.currentClickedValue }\r\n                        onchange={(e)=>this.handleInput(e,this.state.duplicateName)}\r\n                        />\r\n\r\n                        <BillButton text=\" Update \" \r\n                        variant = \"info\"\r\n                        width = {'75%'}\r\n                        onclick = {()=>this.update()}\r\n                        />\r\n\r\n                        </div>\r\n                        :\r\n                        null \r\n                    }\r\n                    </div>\r\n                    </Col>\r\n                </Row>\r\n                \r\n                </Container>\r\n                </Gradient>\r\n             </div> \r\n        )\r\n    }\r\n}\r\n\r\nfunction mapStateToProps(state) {\r\n\treturn {  \r\n        data : state.settingReducer.data,\r\n        vatInPercent : state.settingReducer.vatInPercent,\r\n        reprintCost : state.settingReducer.reprintCost,\r\n        installmentOfSDrop : state.settingReducer.installmentOfSDrop,\r\n        meterRent : state.settingReducer.meterRent,\r\n        sanctionLoad : state.settingReducer.sanctionLoad,\r\n        pfcCharge : state.settingReducer.pfcCharge,\r\n        demandCharge : state.settingReducer.demandCharge,\r\n        xformerLoss : state.settingReducer.xformerLoss,\r\n        msg : state.settingReducer.errorMsg,\r\n        error : state.settingReducer.error  ,\r\n        errorUpdate : state.settingReducer.errorUpdate,\r\n        errorUpdateMsg : state.settingReducer.errorUpdateMsg      \r\n\t};\r\n}\r\nfunction mapDispatchToProps(dispatch) {\r\n\treturn {\r\n        getValue : () =>{\r\n             dispatch(getValue())\r\n           },\r\n        postValue : (val) => {\r\n            dispatch(postValue(val))\r\n        }\r\n        \r\n            \r\n\t};\r\n}\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Setting);","import actionType from  '../../constant/setting'\r\n\r\n\r\nexport function getValue(){\r\n    return {\r\n        type : actionType.SETTING_GET_VALUE\r\n    }\r\n}\r\n\r\nexport function postValue(data){\r\n    return {\r\n        type : actionType.SETTING_VALUE_UPDATE,\r\n        payload : data\r\n    }\r\n}","import commonStyle from '../../components/style';\r\n\r\nconst styles = {\r\n\r\n    container : {\r\n\r\n    // backgroundColor : commonStyle.color.gray,\r\n    margin : 'auto',\r\n    height : '100vh'\r\n    //  marginTop : 10 \r\n    },\r\n    headerRow : {\r\n        backgroundColor:'#1c9cea',\r\n        color:'white',\r\n        fontFamily  :  commonStyle.basicFont ,\r\n        letteSpacing : 1.0\r\n    },\r\n    top : {\r\n        marginTop:30\r\n    },\r\n    tbody :{\r\n        backgroundColor:'transparent',\r\n        fontFamily  :  commonStyle.basicFont ,\r\n        letteSpacing : 1.0,\r\n        fontSize : 14 ,\r\n        cursor : commonStyle.cursor\r\n    },\r\n    cursor : {\r\n        cursor : commonStyle.cursor\r\n    },\r\n    optionSec : {\r\n        marginTop  : 30 ,\r\n        width : '95%'\r\n    },\r\n    listGroup : {\r\n        width : '100%',\r\n        fontFamily : commonStyle.basicFont,\r\n        textTransform : 'uppercase',\r\n        backgroundColor:'transparent',\r\n        color : commonStyle.color.black,\r\n        fontSize : 12 ,\r\n        letterSpacing : 1.0\r\n    },\r\n    monthGroup : {\r\n        width : '80%',\r\n        backgroundColor:'transparent',\r\n        textTransform: 'uppercase',\r\n        letteSpacing : 1.5 \r\n        //color : 'Whblackite'\r\n    }\r\n\r\n}\r\n\r\nexport default styles ;","const actionType = {\r\n    METER_LIST : 'METER_LIST',\r\n    METER_LIST_SUCCESS  : 'METER_LIST_SUCCESS',\r\n    METER_LIST_FAILURE : 'METER_LIST_FAILURE',\r\n    METER_LIST_UPDATE : 'METER_LIST_UPDATE',\r\n    METER_LIST_UPDATE_SUCCESS : 'METER_LIST_UPDATE_SUCCESS',\r\n    METER_LIST_UPDATE_FAILURE : 'METER_LIST_UPDATE_FAILURE'\r\n}\r\n\r\nexport default actionType ;","// A Meter Info Card \r\n\r\nimport React , {Component}  from 'react';\r\nimport styles from './Card.style';\r\nimport {Card,CardTitle,CardText,CardActions,Button } from 'react-mdl';\r\n\r\nclass CardMaster extends Component {\r\n\r\n    constructor(props){\r\n        super(props)\r\n        this.state = {\r\n            \r\n        }\r\n    }\r\n\r\n\r\n    render(){\r\n\r\n        return(\r\n            <div style={styles.container}>\r\n                <Card shadow={6} style={styles.root}>\r\n                    <CardTitle expand \r\n                     style={styles.cardTitle}\r\n                    >\r\n                    <div style={styles.meterTitle}>\r\n                            <span style={styles.metertitle}>\r\n                                Meter ID : </span>\r\n                        <span style={styles.meterid}>   \r\n                          {this.props.meterid} \r\n                            {/* {this.props.bid} */}\r\n                            </span>\r\n                           \r\n                    </div>\r\n                    </CardTitle>\r\n                    <div style={styles.wrapText}>\r\n                    <CardText style={styles.cardText} >\r\n                        Amount : 24000\r\n                        {/* {this.props.bid} */}\r\n                    </CardText>\r\n                    <CardText style={styles.cardText} >\r\n                        Type : <span style={styles.textColor}> {this.props.type} </span>\r\n                    </CardText>\r\n                    </div>\r\n                    <CardActions border style={styles.cardActions}>\r\n                        <Button style={styles.buttonText} onClick={this.props.click}>View Ditails</Button>\r\n                        {/* <span style={{backgroundColor : 'white'}}></span> */}\r\n                    </CardActions>\r\n                </Card>\r\n                \r\n            </div>\r\n        )\r\n    }\r\n\r\n}\r\n\r\nexport default CardMaster ;","import commonStyle from '../../components/style';\r\n\r\nconst styles = {\r\n\r\n    \r\n    listGroup : {\r\n      //  width : '80%',\r\n        backgroundColor:'transparent',\r\n        color : 'White'\r\n    },\r\n    modal : {\r\n        backgroundColor:'green',\r\n    },\r\n    title : {\r\n        fontFamily  :  commonStyle.menuFont ,\r\n        color : commonStyle.color.green,\r\n        fontSize : 15 ,\r\n    },\r\n    body :{\r\n       // fontFamily  :  commonStyle.formTile ,\r\n        color : commonStyle.color.black,\r\n        letterSpacing : 1.0 ,\r\n        fontSize : 13 , \r\n    },\r\n    red : {\r\n        color : 'red' \r\n    }\r\n}\r\n\r\nexport default styles ;","import React,{Component} from 'react';\r\nimport styles from './Meterinfo.style'\r\nimport {Modal,Table,Button,ListGroup,Container,Row,Col,Tab} from 'react-bootstrap';\r\nimport BillButton from '../../components/button/Button'\r\n\r\nclass Meterinfo extends Component {\r\n\r\n    constructor(props){\r\n        super(props)\r\n        this.state = {\r\n            show : true \r\n        }\r\n    }\r\n\r\n    render(){\r\n        return(\r\n            <div style={{width : '80%'}}>\r\n                 <Modal  show={this.state.show}  \r\n                 aria-labelledby=\"contained-modal-title-vcenter\" \r\n                 onHide={this.props.onclose}\r\n                 class = {styles.modal}\r\n                 >\r\n      <Modal.Header closeButton >\r\n        <Modal.Title id=\"contained-modal-title-vcenter\" style={styles.title}>\r\n         {this.props.header}\r\n        </Modal.Title>\r\n      </Modal.Header>\r\n      <Modal.Header  >\r\n        <Modal.Title id=\"contained-modal-title-vcenter\" style={styles.body}>\r\n        Billing Address :  {this.props.address}\r\n        </Modal.Title>\r\n      </Modal.Header>\r\n      <Modal.Header  >\r\n        <Modal.Title id=\"contained-modal-title-vcenter\" style={styles.body}>\r\n        Billing Day  :  {this.props.day}\r\n        </Modal.Title>\r\n      </Modal.Header>\r\n      <Modal.Header  >\r\n        <Modal.Title id=\"contained-modal-title-vcenter\" style={styles.body}>\r\n        Last Billing Date  :  {this.props.date}\r\n        </Modal.Title>\r\n      </Modal.Header>\r\n      <Modal.Header  >\r\n        <Modal.Title id=\"contained-modal-title-vcenter\" style={styles.body}>\r\n        Sanction Load  :  {this.props.sanction}\r\n        </Modal.Title>\r\n      </Modal.Header>\r\n      <Modal.Header  >\r\n        <Modal.Title id=\"contained-modal-title-vcenter\" style={styles.body}>\r\n        Billing Type   : <span style={styles.red}> {this.props.type} </span>\r\n        </Modal.Title>\r\n      </Modal.Header>\r\n     \r\n                            <Modal.Footer>\r\n                            <BillButton variant=\"success\" \r\n                            onclick={this.props.onclose} \r\n                            text = \"Close\"\r\n                            />\r\n                              \r\n                            \r\n                            </Modal.Footer>\r\n                </Modal>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default Meterinfo ;","import commonStyle from '../style'\r\n\r\nconst styles = {\r\n        title : {\r\n            fontSize : 18 ,\r\n            fontFamily : commonStyle.modelFont\r\n        },\r\n\r\n        identity : {\r\n            fontFamily : commonStyle.roboto,\r\n            fontSize : 15 ,\r\n            letterSpacing : 1.5\r\n        },\r\n        inside : {\r\n          //  height : 10,\r\n            padding : 0 ,\r\n            marginLeft  : 10 ,\r\n            fontFamily : commonStyle.roboto,\r\n            fontSize : 12,\r\n            letterSpacing : 0.5 \r\n        },\r\n        header : {\r\n            width : '50%'\r\n        },\r\n        zero : {\r\n            padding : 0 ,\r\n            margin : 0 \r\n        },\r\n        totalHead : {\r\n            fontFamily : commonStyle.roboto,\r\n            fontSize : 12,\r\n        },\r\n        total : {\r\n            fontFamily : commonStyle.roboto,\r\n            fontSize : 14,\r\n            letterSpacing : 1.0 \r\n        }\r\n}\r\n\r\nexport default styles ","import React,{Component} from 'react';\r\nimport styles from './BillingPop.style'\r\nimport {Modal,Table,Button} from 'react-bootstrap';\r\n\r\n\r\nclass PaintedComp extends Component {\r\n\r\n    render(){\r\n        return (\r\n\r\n                <div style={{flexDirection : 'row' , display : 'flex',...styles.zero}}>\r\n                    <div style={{width : this.props.width ,...styles.inside}}>  {this.props.name}  </div>\r\n                    <div style={{width : '10%'}}> :   </div>\r\n                    <div style={{width : '30%' ,...styles.inside,...styles.zero}}> {this.props.value}  </div>\r\n                </div>\r\n\r\n        )\r\n    }\r\n}\r\n\r\nexport default PaintedComp ","import React,{Component} from 'react';\r\nimport styles from './BillingPop.style'\r\nimport {Modal,Table,Button} from 'react-bootstrap';\r\nimport PaintedComp from './PaintedComp';\r\nimport ShowImage from '../image/Image'\r\n// import NavbarCollapse from 'react-bootstrap/NavbarCollapse';\r\n\r\n\r\nclass BillingPop extends Component {\r\n\r\n    constructor(props){\r\n        super(props)\r\n        this.state ={\r\n            meter_basic : JSON.parse(localStorage.getItem('meter_basic')),\r\n           user_bill_data : JSON.parse(localStorage.getItem('user_bill_data')),\r\n         //  name : localStorage.getItem('my-user-x') +  '  ' + localStorage.getItem('my-user-x-lastname')\r\n        }\r\n    }\r\n    getMonth = (d) =>{\r\n        const monthNames = [\"January\", \"February\", \"March\", \"April\", \"May\", \"June\",\r\n         \"July\", \"August\", \"September\", \"October\", \"November\", \"December\"\r\n        ];\r\n\r\n        var  date = new Date(d)\r\n        var mm = date.getMonth() ;\r\n        var yyyy = date.getFullYear(); \r\n        // const d = new Date(d);\r\n     //  return  monthNames[mm] +','+ yyyy \r\n     return  monthNames[mm]\r\n    }\r\n    getYear = (d)=>{\r\n        var  date = new Date(d)\r\n        return  date.getFullYear(); \r\n\r\n        \r\n    }\r\n    convertDate = (d) =>{\r\n        var  date = new Date(d)\r\n        var dd = date.getDate(); \r\n        var mm = date.getMonth()+1;\r\n        var yyyy = date.getFullYear(); \r\n        if(dd<10){dd='0'+dd} \r\n        if(mm<10){mm='0'+mm};\r\n        return d = dd+'/'+mm+'/'+yyyy\r\n    }\r\n\r\n    render(){\r\n       // console.log(this.state.meter_basic.sanctionedLoad)\r\n        \r\n        return(\r\n            <div>\r\n                 <Modal  show={this.props.show} \r\n               //  onHide={this.props.show}\r\n                 style={{backgroundColor : 'transparent'}}\r\n                             size=\"lg\"\r\n                             aria-labelledby=\"contained-modal-title-vcenter\" \r\n                             onHide={this.props.onclose}\r\n                            // class = {styles.modal}\r\n                             >\r\n                            <Modal.Header closeButton >\r\n                                {/* <Modal.Title>Modal title</Modal.Title> */}\r\n                            </Modal.Header>\r\n                         <Modal.Body style={{backgroundColor : '#f8f8f8'}}>\r\n                            <Table  bordered  style={{width : '100%',...styles.zero}}>\r\n                            <tbody>\r\n                                <tr style={{height : 80,background : 'transparent' , ...styles.zero}}>\r\n                                <td style={{width : '15%' ,...styles.zero,marginLeft : 10}}>\r\n                                <ShowImage src= {require('./desco.png')} width = {80} height = {80}/>\r\n                                </td>\r\n                                <td style={{...styles.header,...styles.zero}}>\r\n                                <div style={styles.identity}>Dhaka Electric Supply Company Ltd .(DESCO) </div> \r\n                                <div style={styles.identity}>Sales and Distribution , Dhaka </div>\r\n                                <span style={{marginLeft : 100,...styles.identity}}>    Electric Bill -- KP  5959559 </span>\r\n                                </td>\r\n                                <td style={styles.zero}>\r\n                                   <PaintedComp width={'40%'} name=  \"Tarrif\" value = \"A\"/>\r\n                                   <PaintedComp width={'40%'} name = \"Zone/Block\"  value = \" AE/371 \"/>\r\n                                   <PaintedComp width={'40%'} name = \"Walking order\"  value = \" 150.00\"/>\r\n                                </td>\r\n                                </tr>   \r\n                            </tbody>\r\n                            </Table>\r\n                            <Table  bordered  style={{width : '100%',...styles.zero}}>\r\n                                <tbody>\r\n                                <tr style={styles.zero}>\r\n                                \r\n                                <td style={{width : '65%',...styles.zero}}>\r\n                                <PaintedComp width={'40%'} name=  \"Name & Address\" value = {this.state.meter_basic.billAccountAddress}  />\r\n                                </td>\r\n                                <td style={styles.zero}>\r\n                                   <PaintedComp width={'40%'} name=  \"Account No\" value = {this.state.meter_basic.billAccountId}  />\r\n                                   <PaintedComp width={'40%'} name = \"Meter No\"  value = {this.state.meter_basic.meterNumberOnBillSlip.substring(0,10)}  />\r\n                                   <PaintedComp width={'40%'} name = \"Sanction Load\"  value = {this.state.meter_basic.sanctionedLoad} /> \r\n                                </td>\r\n                                </tr>\r\n                                 </tbody>\r\n                             </Table>\r\n                            \r\n                            <Table    bordered  size=\"sm\" responsive style={styles.zero}>\r\n                            \r\n                            <tbody style={styles.zero}>\r\n                           \r\n                                <tr style={styles.zero}>\r\n                                    <td style={{width : '60%',background : 'transparent',...styles.zero}} > \r\n                                    <Table    bordered  size=\"sm\" responsive style={styles.zero}>\r\n                                    <tbody style={styles.zero}>\r\n                                    <tr style={styles.zero}>\r\n                                    <td style={styles.zero}>\r\n                                    <PaintedComp width={'40%'} name=  \"Billing Month\" \r\n                                    value = {this.state.user_bill_data.paymentWindow}  \r\n                                    /> \r\n                                    </td>\r\n                                    </tr>\r\n                                    <tr style={styles.zero}>\r\n                                    <td style={styles.zero}>\r\n                                    <PaintedComp width={'40%'} name=  \"Billing No\" \r\n                                  //  value = {this.state.user_bill_data.billingRecordId.substring(0,25)}  \r\n                                  value =\"MISSING API DATA\"\r\n                                    /> \r\n                                    </td>\r\n                                    </tr>\r\n                                    <tr style={styles.zero}>\r\n                                    <td style={styles.zero}>\r\n                                    <Table style={styles.zero}>\r\n                                    <tbody style={styles.zero}>\r\n                                    <tr>\r\n                                    <td style={styles.zero}>\r\n                                    <PaintedComp width={'40%'} name=  \"Issue date\" \r\n                                    value = {this.convertDate(this.state.user_bill_data.paymentWindowStartDay)}  \r\n                                    /> \r\n                                    </td>\r\n                                    <td style={styles.zero}>\r\n                                    <PaintedComp width={'40%'} name=  \"Due date\" \r\n                                    value = {this.convertDate(this.state.user_bill_data.paymentWindowEndDay)}  \r\n                                    /> \r\n                                    </td>\r\n                                    </tr>\r\n                                    </tbody>\r\n                                    </Table>\r\n                                    </td>\r\n                                    </tr>\r\n                                    <tr style={styles.zero}>\r\n                                    <td style={styles.zero}>\r\n                                    <PaintedComp width={'40%'} name=  \"Current \" \r\n                                    value =  {\"21/09/2019     50,345\"}\r\n                                    /> \r\n                                     <PaintedComp width={'40%'} name=  \"Previous \" \r\n                                    value =   {\"20/08/2019 \" +  '          '  +  \"49,345\"}\r\n                                    />\r\n                                    </td>\r\n                                    </tr>\r\n                                    <tr style={styles.zero}>\r\n                                    <td style={styles.zero}>\r\n                                    <PaintedComp width={'40%'} name=  \"Difference \" \r\n                                    value =  {\"  \" +  '             '  +  \"    1,345\"}\r\n                                    />  \r\n                                    </td>\r\n                                    </tr>\r\n                                    <tr style={styles.zero}>\r\n                                    <td style={styles.zero}>\r\n                                    <PaintedComp width={'40%'} name=  \"KWH Consumed \" \r\n                                    value =  {\"  \" +  '             '  +  \"    1,345\"}\r\n                                    />  \r\n                                    </td>\r\n                                    </tr>\r\n                                    <tr style={styles.zero}>\r\n                                    <td style={styles.zero}>\r\n                                    <PaintedComp width={'40%'} name=  \"Sub A/C Use\" \r\n                                    value =  { \" \"}\r\n                                    />  \r\n                                    </td>\r\n                                    </tr>\r\n                                    <tr style={styles.zero}>\r\n                                    <td style={styles.zero}>\r\n                                    <PaintedComp width={'40%'} name=  \"Common Check Meter Use\" \r\n                                    value =  {\" \"}\r\n                                    />  \r\n                                    </td>\r\n                                    </tr>\r\n                                    <tr style={{height : 225}}>\r\n                                        <td></td>\r\n                                    </tr>\r\n                                    <tr >\r\n                                     <td >\r\n                                    <span style={styles.totalHead}> Not Less Than : </span>\r\n                                    <span style={styles.total}> One Thousand Three Hundred Seventy Five Only </span>\r\n                                        \r\n                                    </td>\r\n                                    </tr>\r\n                                    </tbody>\r\n                                    </Table>\r\n                                    </td>\r\n                            {/* right table */}\r\n                                    <td style={{width : '40%',background : 'transparent',...styles.zero}}>\r\n                                        <Table    bordered  size=\"sm\" responsive style={styles.zero}>\r\n                                    <tbody style={styles.zero}>\r\n                                    <tr style={styles.zero}>\r\n                                    <td style={styles.zero}>\r\n                                    <PaintedComp width={'48%'} name=  \"Normal KWH Charge\" \r\n                                    value = {this.state.user_bill_data.consumedUnits} \r\n                                    /> \r\n                                    <PaintedComp width={'48%'} name=  \"PFC Charge\" \r\n                                    value = \"0.00\" \r\n                                    /> \r\n                                    <PaintedComp width={'48%'} name=  \"X-former Loss\" \r\n                                    value = \"0.00\" \r\n                                    /> \r\n                                    </td>\r\n                                    </tr>\r\n\r\n                                    <tr style={styles.zero}>\r\n                                    <td style={styles.zero}>\r\n                                    <PaintedComp width={'48%'} name=  \"Total Energy Charges\" \r\n                                    value = {this.state.user_bill_data.consumedUnits} \r\n                                    /> \r\n                                    <PaintedComp width={'48%'} name=  \"Demand Charge\" \r\n                                    value = \"0.00\" \r\n                                    /> \r\n                                    </td>\r\n                                    </tr>\r\n                                    <tr style={styles.zero}>\r\n                                    <td style={styles.zero}>\r\n                                    <PaintedComp width={'48%'} name=  \"Minimum Charge\" \r\n                                    value = {this.state.user_bill_data.consumedUnits} \r\n                                    /> \r\n                                    <PaintedComp width={'48%'} name=  \"Service Charge\" \r\n                                    value = \"5.00\" \r\n                                    /> \r\n                                     <PaintedComp width={'48%'} name=  \"Suplimentary Bill\" \r\n                                    value = {\"0.00\"} \r\n                                    /> \r\n                                    <PaintedComp width={'48%'} name=  \"Adjustment\" \r\n                                    value = \"0.00\" \r\n                                    /> \r\n                                    </td>\r\n                                    </tr>\r\n                                    <tr>\r\n                                    <td style={{fontWeight : 'bold'}}>\r\n                                    <PaintedComp width={'48%'} name=  \"Current Dues\" \r\n                                    value = {this.state.user_bill_data.consumedUnits + 5} \r\n                                    /> \r\n                                    </td>\r\n                                    </tr>\r\n                                    <tr>\r\n                                    <td >\r\n                                    <PaintedComp width={'48%'} name=  \"Re-print Charge\" \r\n                                    value = {\"0.00\"} \r\n                                    /> \r\n                                     <PaintedComp width={'48%'} name=  \"Installment of S/Drop\" \r\n                                    value = {\"0.00\"} \r\n                                    /> \r\n                                     <PaintedComp width={'48%'} name=  \"Meter Rent\" \r\n                                    value = {\"0.00\"} \r\n                                    /> \r\n                                    </td>\r\n                                    </tr>\r\n                                    <tr>\r\n                                    <td style={{fontWeight : 'bold'}}>\r\n                                    <PaintedComp width={'48%'} name=  \"Total Dues(Rounded)\" \r\n                                    value = {this.state.user_bill_data.consumedUnits + 5} \r\n                                    /> \r\n                                    </td>\r\n                                    </tr>\r\n                                    <tr>\r\n                                    <td >\r\n                                    <PaintedComp width={'48%'} name=  \"VAT(On Current Dues)\" \r\n                                    value = {this.state.user_bill_data.consumedUnits + 5} \r\n                                    /> \r\n                                    </td>\r\n                                    </tr>\r\n                                    <tr>\r\n                                    <td style={{fontWeight : 'bold'}}>\r\n                                    <PaintedComp width={'48%'} name=  \"Total Bill\" \r\n                                    value = {this.state.user_bill_data.consumedUnits + 5} \r\n                                    /> \r\n                                    </td>\r\n                                    </tr>\r\n                                    <tr>\r\n                                    <td >\r\n                                    <PaintedComp width={'48%'} name=  \"Total If Paid After Due Time\" \r\n                                    value = {this.state.user_bill_data.consumedUnits + 5} \r\n                                    /> \r\n                                    </td>\r\n                                    </tr>\r\n\r\n                                    </tbody>\r\n                                    </Table>\r\n                                        </td>\r\n                                </tr>\r\n                               \r\n                            </tbody>\r\n                            </Table>\r\n                            </Modal.Body>\r\n                           \r\n                            <Modal.Footer>\r\n                            <Button variant=\"success\" onClick={this.props.onclose}>\r\n                                Close\r\n                            </Button>\r\n                            </Modal.Footer>\r\n                             </Modal>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default BillingPop ","import commonStyle from '../../components/style';\r\n\r\nconst styles = {\r\n\r\n    container : {\r\n\r\n    // backgroundColor : commonStyle.color.gray,\r\n    margin : 'auto',\r\n    height : '100vh'\r\n    //  marginTop : 10 \r\n    },\r\n    modal : {\r\n        backgroundColor:'#1c9cea',\r\n    },\r\n    header : {\r\n        backgroundColor:'#1c9cea',\r\n    },\r\n\r\n    title :{\r\n        fontFamily : commonStyle.menuFont,\r\n        letterSpacing : 1.0 ,\r\n        fontSize : 13 \r\n    }\r\n}\r\n\r\nexport default styles ;","import React,{Component} from 'react';\r\nimport {connect} from 'react-redux' ;\r\nimport styles from './Meterupdate.style'\r\nimport {Modal,Table,Button,ListGroup,Container,Row,Col,Tab} from 'react-bootstrap';\r\nimport BillButton from '../../components/button/Button';\r\nimport Label from '../../components/label/Label' ;\r\nimport TextField from '../../components/textField/TextField';\r\n\r\nimport {meterLIstUpdate} from '../../../src/redux/Action/meterlist'\r\n\r\nclass MeterUpdate extends Component {\r\n\r\n    constructor(props){\r\n        super(props)\r\n        this.state = {\r\n            show : true ,\r\n            update : false ,\r\n            successMsg : '',\r\n            meter_basic : JSON.parse(localStorage.getItem('meter_basic')),\r\n            user_bill_data : JSON.parse(localStorage.getItem('user_bill_data')),\r\n            customerid : localStorage.getItem('customerid'),\r\n            newUser : {\r\n                customerId: localStorage.getItem('customerid'),\r\n                billAccountId: JSON.parse(localStorage.getItem('meter_basic')).billAccountId,\r\n                billAccountType : JSON.parse(localStorage.getItem('meter_basic')).billingAccountType,\r\n                billAccountAddress: JSON.parse(localStorage.getItem('meter_basic')).billAccountAddress,\r\n                meterNumberOnBillSlip: JSON.parse(localStorage.getItem('meter_basic')).meterNumberOnBillSlip,\r\n                regularBillingDay   : JSON.parse(localStorage.getItem('meter_basic')).regularBillingDay,\r\n                lastBillingDate : \"2020-07-27T08:49:13.474Z\",\r\n              //  lastBillingDateUnitSnapshot : 0,\r\n                sanctionedLoad : JSON.parse(localStorage.getItem('meter_basic')).sanctionedLoad\r\n            }\r\n        }\r\n    }\r\n    input = (e,name) =>{\r\n        let value = e.target.value;\r\n        //alert(name)\r\n        this.setState(\r\n          prevState => ({\r\n            newUser: {\r\n                ...prevState.newUser,\r\n                [name]: value \r\n              }\r\n          })\r\n        )\r\n       }\r\n    \r\n       update = () =>{\r\n       // console.log(this.state.thismeter)\r\n        let options = {\r\n            \"customerId\": this.state.customerid,\r\n            \"billAccountId\": this.state.newUser.billAccountId,\r\n             \"billAccountType\" : this.state.newUser.billAccountType,\r\n            \"billAccountAddress\": this.state.newUser.billAccountAddress,\r\n            \"meterNumberOnBillSlip\": this.state.newUser.meterNumberOnBillSlip,\r\n            \"regularBillingDay\": this.state.newUser.regularBillingDay,\r\n            \"lastBillingDate\": \"2020-07-27T08:49:13.474Z\",\r\n            \"sanctionedLoad\": this.state.newUser.sanctionedLoad\r\n          }\r\n\r\n        //  console.log(options)\r\n         this.props.meterLIstUpdate(options)\r\n         this.setState({\r\n             update : true ,\r\n             successMsg : 'Update Successfully'\r\n         })\r\n       }\r\n\r\n    render(){\r\n        console.log(this.props.update)\r\n        return(\r\n            <div style={{width : '80%'}}>\r\n                 <Modal  show={this.state.show}  \r\n                 aria-labelledby=\"contained-modal-title-vcenter\" \r\n                 onHide={this.props.onclose}\r\n                 //class = {styles.modal}\r\n                 >\r\n                <Modal.Header closeButton style={styles.header}>\r\n                    <Modal.Title id=\"contained-modal-title-vcenter\" style={styles.title}>\r\n                    UPDATE METER  :: {this.state.meter_basic.meterNumberOnBillSlip}\r\n                    </Modal.Title>\r\n                </Modal.Header>\r\n                \r\n                <Modal.Body style={{backgroundColor : '#f8F0F9'}}>\r\n                <Label text =\"Account ID \"/>\r\n                <TextField \r\n                value ={this.state.newUser.billAccountId}\r\n                 onchange={(e)=>this.input(e,'billAccountId')}\r\n                /> \r\n                <Label text =\"Account Address\"/>\r\n                <TextField \r\n                label=\"First name \" \r\n                value ={this.state.newUser.billAccountAddress}\r\n                 onchange={(e)=>this.input(e,'billAccountAddress')}\r\n                />\r\n                \r\n                <Label text =\"Meter Name\"/>\r\n                <TextField value ={this.state.newUser.meterNumberOnBillSlip}\r\n                 onchange={(e)=>this.input(e,'meterNumberOnBillSlip')}\r\n                />\r\n                <Label text =\"Billing Day\"/>\r\n                <TextField value ={this.state.newUser.regularBillingDay}\r\n                onchange={(e)=>this.input(e,'regularBillingDay')}\r\n                />\r\n                \r\n                <Label text =\"Last Billing Date\"/>\r\n                <TextField value ={this.state.newUser.lastBillingDate}\r\n                onchange={(e)=>this.input(e,'lastBillingDateUnitSnapshot')}\r\n                />\r\n                <Label text =\"Sanction Load\"/>\r\n                <TextField value ={this.state.newUser.sanctionedLoad}\r\n                onchange={(e)=>this.input(e,'sanctionedLoad')}\r\n                />\r\n                \r\n                </Modal.Body>\r\n                <h6 style={{color:'green',letterSpacing: 2.0,marginLeft  : 10}}><span >{this.state.successMsg}</span></h6>\r\n\r\n                <Modal.Footer style={styles.footer}>\r\n                <BillButton variant=\"success\" \r\n                 onclick={()=>this.update()} \r\n                 text = \"Update\"\r\n                />\r\n                <BillButton variant=\"danger\" \r\n                 onclick={this.props.onclose} \r\n                 text = {this.state.update ? \"OK \" : \"Cancel\"}\r\n                />\r\n\r\n                    \r\n                </Modal.Footer>\r\n                </Modal>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nfunction mapStateToProps(state) {\r\n\treturn {\r\n       // courseData:state\r\n       update : state.meterlistReducer.isLoading ,\r\n       msg : state.meterlistReducer.updateMsg\r\n       \r\n\t};\r\n}\r\nfunction mapDispatchToProps(dispatch) {\r\n\treturn {\r\n\t\tmeterLIstUpdate : (val) =>{\r\n            dispatch(meterLIstUpdate(val))\r\n          },\r\n\r\n       \r\n            \r\n\t};\r\n}\r\nexport default connect(mapStateToProps, mapDispatchToProps)(MeterUpdate) ;","import actionType from '../../constant/meterlist';\r\n\r\nexport function getMeterList(data){\r\n    return{\r\n        type : actionType.METER_LIST,\r\n        payload : data \r\n    }\r\n}\r\n\r\nexport function meterLIstUpdate(data){\r\n    return {\r\n        type : actionType.METER_LIST_UPDATE,\r\n        payload : data \r\n    }\r\n}","import React,{Component} from 'react';\r\nimport styles from './MeterList.style';\r\nimport {connect} from 'react-redux' ;\r\nimport CardMaster from '../../components/card/Card' ;//have to delete \r\nimport {getMeterList} from '../../redux/Action/meterlist' ;\r\nimport {Row,Col, Container,Table,ListGroup} from 'react-bootstrap' ;\r\nimport Header from '../../components/alert/Alert' ;\r\n//import InfoCard from '../../components/infocard/Infocard';//have to delete ;\r\nimport { Gradient } from 'react-gradient';\r\nimport InfoCard from '../../components/card/InfoCard' \r\nimport {currentMenu} from  '../../../src/redux/Action/layout';\r\nimport {getCustomerBilling,getAllPaidBill} from '../../redux/Action/billing';\r\nimport Meterinfo from '../../pages/meterinfo/Meterinfo';\r\nimport ShowImage from '../../components/image/Image'\r\nimport BillingPop from '../../components/billingPop/BillingPop';\r\nimport MeterUpdate from '../../pages/meterupdate/Meterupdate'\r\nimport Loading from '../../components/loading';\r\n\r\nclass MeterList extends  Component {\r\n\r\n    constructor(props){\r\n        super(props)\r\n        this.state ={\r\n            header : \"   \",\r\n            text : \"METER OPTIONS :: \" ,\r\n            meterOption : false ,\r\n            meterinfoFlag : false ,\r\n            unpaidlist : false , // for showing month \r\n            unpaidpop : false , // for showing pop\r\n            unpaiddata : [],\r\n            meterlist : true ,\r\n            meterinfo : {}, \r\n            meterupdate : false ,\r\n            gradient : [\r\n                ['#ffffff','#7a6e43']\r\n                ],\r\n            data : [],\r\n            id : '',\r\n            cname : localStorage.getItem('name'),\r\n            mobile : localStorage.getItem('mobile'),\r\n            address : localStorage.getItem('address'),\r\n            monthlyFlag : false ,\r\n            tail : '&paymentStatus=paid',\r\n        }\r\n    }\r\n\r\n    componentDidMount(){\r\n        const { match: { params } } = this.props;\r\n        //console.log(\"the customer === \"+params.id)\r\n        localStorage.setItem('paramid',params.id)\r\n        this.props.getMeterList(params.id)\r\n    }\r\n\r\n    componentDidUpdate(prevProps, prevState) {\r\n        const paramid = localStorage.getItem('paramid')\r\n\r\n        const check = prevProps.update !== this.props.update  ? this.props.getMeterList(paramid) : null\r\n     \r\n        }\r\n\r\n    static getDerivedStateFromProps(props,state){\r\n        if(props.data !==null && props.data!== undefined ){\r\n        return{\r\n            data : props.data\r\n        }\r\n    }\r\n    return null \r\n    }\r\n\r\n    billingDetails = (val,page) =>{\r\n      //  alert(val)\r\n      this.props.currentMenu(page)\r\n        this.props.history.push('/billing/'+val);\r\n    }\r\n\r\n    meterOptions = (data) =>{\r\n     //   console.log(data)\r\n        localStorage.setItem('meter_basic',JSON.stringify(data))\r\n        this.setState({\r\n            id : data.billAccountId,\r\n            text : data.meterNumberOnBillSlip,\r\n            meterOption : true ,\r\n            meterinfo : data \r\n        })\r\n    }\r\n\r\n    meterInfo = () =>{\r\n        this.setState({\r\n            meterinfoFlag : !this.state.meterinfoFlag \r\n        })\r\n    }\r\n\r\n    changes = () =>{\r\n        this.setState({\r\n            meterlist : !this.state.meterlist ,\r\n            unpaidlist : !this.state.unpaidlist \r\n        })\r\n    }\r\n\r\n    unpaid =(val)=>{\r\n     //alert(this.state.id)\r\n     //  this.changes()\r\n     this.makeAllow(val)\r\n       this.props.getCustomerBilling(this.state.id)\r\n    }\r\n\r\n    getMeterList = () =>{\r\n        this.changes()\r\n    }\r\n\r\n    unpaidMeterBill = (data) =>{\r\n    //    alert('bill here ')\r\n    localStorage.setItem('user_bill_data',JSON.stringify(data))\r\n    this.alterPOP()\r\n    }\r\n    alterPOP = () =>{\r\n        this.setState({\r\n            unpaidpop : !this.state.unpaidpop\r\n        })\r\n    }\r\n\r\n    meterUpdate = () =>{\r\n        this.setState({    \r\n            meterupdate : !this.state.meterupdate \r\n        })\r\n    }\r\n\r\n    updateClose = () =>{\r\n        this.setState({\r\n            meterOption : false  , \r\n            meterupdate : false \r\n        })\r\n    }\r\n\r\n    makeAllow = (val) =>{\r\n        this.setState({\r\n            monthlyFlag : true ,\r\n            // header : \r\n            header : val\r\n         })\r\n    }\r\n\r\n    monthFlag = (val) => {    \r\n        this.makeAllow(val)\r\n        let option = this.state.id + this.state.tail\r\n        this.props.getCustomerBilling(option)\r\n        \r\n    }\r\n\r\n    getYear = (d)=>{\r\n          const data = d ;\r\n          const year = data.split('-')\r\n          return year[2]\r\n      }\r\n   \r\n\r\n\r\n    render(){\r\n        //    console.log(\"the data is ==\"+ JSON.stringify(this.props.unpaiddata))\r\n        return(\r\n            <div >\r\n                <Gradient\r\n                gradients={ this.state.gradient } // required\r\n                property=\"background\"\r\n                duration={ 10000 }\r\n                angle=\"100deg\"\r\n            > \r\n                <Container style={styles.container} >\r\n                <Row>\r\n                    <Col md={5} style={styles.top}>\r\n                    {\r\n                        this.state.meterlist ? \r\n                        <Table   bordered hover  >\r\n                  <thead >\r\n                    <tr style={styles.headerRow}>\r\n                      <th>#</th>\r\n                      <th style={{textAlign:\"center\"}}>Meter </th>\r\n                      {/* <th>Billing ID</th> */}\r\n                      <th>Billing Type</th>\r\n                    </tr>\r\n                  </thead>\r\n                  <tbody >\r\n                  {\r\n                      this.props.isloading ?\r\n                      <Loading show={this.props.isloading} /> :\r\n                    this.state.data.length > 0 ?   \r\n                 this.state.data.map((data,index)=>\r\n\r\n                        <tr key={index} style={styles.tbody}\r\n                      onClick = {()=>this.meterOptions(data)}\r\n                        >\r\n                            <td>{index+1}</td>\r\n                            <td>{data.meterNumberOnBillSlip}</td>\r\n                            {/* <td>{data.billAccountId}</td> */}\r\n                            <td>{data.billingAccountType}</td>\r\n                        </tr>\r\n\r\n                 ) : \r\n                 <tr>\r\n                            <td>--</td>\r\n                            <td>--</td>\r\n                            <td>--</td>\r\n                            {/* <td>--</td> */}\r\n                            \r\n\r\n                 </tr>\r\n                 }\r\n                  </tbody>\r\n\r\n                  </Table> :\r\n                  <div>\r\n                    <a onClick={()=>this.getMeterList()}>\r\n                  <ShowImage \r\n                  src= \"https://img.icons8.com/pastel-glyph/64/000000/circled-left.png\"\r\n                  width = {50}\r\n                  /></a>\r\n                  <div style={{margin : 'auto'}}>\r\n                  \r\n                        { \r\n                            // paymentWindow\r\n                            this.props.unpaiddata !== undefined ? \r\n                            <div> \r\n                            <Header variant = \"info\"  text = {this.state.text + \"::   UNPAID-MONTH\" } size = {13} \r\n                        width = '80%' />      \r\n                        <ListGroup >\r\n                            {\r\n                                this.props.unpaiddata.map((data,index)=>\r\n                                <ListGroup.Item key={index} style={styles.monthGroup}\r\n                               onClick={()=>this.unpaidMeterBill(data)}\r\n                            > <a style={styles.cursor}> {data.paymentWindow }</a></ListGroup.Item>\r\n                                )\r\n                            }\r\n                            \r\n                            \r\n                        </ListGroup>\r\n                        </div>\r\n                             \r\n                              : \r\n                             null \r\n                        }\r\n                </div>\r\n                </div>\r\n                    }\r\n                    \r\n                    </Col>\r\n\r\n                    {/* <Col xs={1} style={{marginTop : 50}}></Col> */}\r\n                    <Col md={3} style={{marginTop : 30}} >\r\n                         <InfoCard \r\n                         header = { \"Customer : \" + this.state.cname }\r\n                         title = {\"Mobile : \" + this.state.mobile}\r\n                         address = {\"Address : \" + this.state.address}\r\n                        /> \r\n                        {/* meter options ::  */}\r\n                        {\r\n                            this.state.meterOption ? \r\n                            <div style={styles.optionSec}>\r\n                        <Header    text = {\"METER NAME :: \" + this.state.text.substr(12,10)} width = '100%' />\r\n                        <ListGroup style={styles.listGroup}>\r\n                            <ListGroup.Item style={styles.listGroup}\r\n                            onClick={()=>this.meterInfo()}\r\n                            > <a style={styles.cursor}>METER INFO </a></ListGroup.Item>\r\n                            <ListGroup.Item style={styles.listGroup}\r\n                            onClick={()=>this.meterUpdate()}\r\n                            > <a style={styles.cursor}>UPDATE METER </a></ListGroup.Item>\r\n                            <ListGroup.Item style={styles.listGroup} \r\n                             onClick={()=>this.unpaid('UNPAID BILL MONTH ::')}\r\n                            ><a style={styles.cursor}>UNPAID BILLING DETAILS </a></ListGroup.Item>\r\n                            <ListGroup.Item style={styles.listGroup}\r\n                             onClick={()=>this.monthFlag('PAID BILL MONTH ::')}\r\n                            ><a style={styles.cursor}>PAID BILLING DETAILS </a></ListGroup.Item>\r\n                             \r\n                        </ListGroup>\r\n                        </div>\r\n                        : null \r\n                        }\r\n                         \r\n                    </Col>\r\n                    {/* <Col md={3}>\r\n                    ok man !!\r\n                    </Col> */}\r\n                     {\r\n                        this.state.monthlyFlag ? \r\n                    <Col md={3}>\r\n                            <div style={{marginTop : 30}}>\r\n                            <Header    text = {this.state.header}  width = '100%' />\r\n                        <ListGroup style={styles.listGroup}>\r\n                        {\r\n                            this.props.unpaiddata && this.props.unpaiddata.length > 0 ?\r\n                                this.props.unpaiddata.map((data,index)=>\r\n                                <ListGroup.Item key={index} style={styles.listGroup}\r\n                               onClick={()=>this.unpaidMeterBill(data)}\r\n                            > <a style={styles.cursor}> {data.paymentWindow },{this.getYear(data.billPaymentDueDate)}</a></ListGroup.Item>\r\n                                )\r\n\r\n                                : null\r\n                            }\r\n  \r\n                        </ListGroup>\r\n                            </div>\r\n                        </Col> : null \r\n                    } \r\n             </Row> \r\n             {\r\n             this.state.meterinfoFlag ? \r\n             <Meterinfo \r\n             meter = {this.state.meterinfo.meterNumberOnBillSlip}\r\n             header = { this.state.text}\r\n            // account = {this.state.meterinfo.billAccountId}\r\n             address = {this.state.meterinfo.billAccountAddress}\r\n             day = {this.state.meterinfo.regularBillingDay}\r\n             date = {this.state.meterinfo.lastBillingDate}\r\n             sanction = {this.state.meterinfo.sanctionedLoad}\r\n             type = {this.state.meterinfo.billingAccountType}\r\n             onclose = {()=>this.meterInfo()}\r\n             />\r\n             : null \r\n             }\r\n\r\n             {\r\n                 this.state.unpaidpop ? \r\n                 <BillingPop \r\n                 show ={this.state.unpaidpop}\r\n                 onclose = {this.alterPOP}\r\n                 />\r\n\r\n                     : null \r\n             }\r\n\r\n             {\r\n                 this.state.meterupdate ? \r\n                 <MeterUpdate \r\n                 onclose = {this.updateClose}\r\n                 />  \r\n                 : null \r\n             }\r\n\r\n             </Container>\r\n             </Gradient>     \r\n            </div>\r\n        )\r\n    }\r\n\r\n}\r\nfunction mapStateToProps(state) {\r\n\treturn {\r\n       // courseData:state\r\n        // customer : state.customerReducer.customer,\r\n        data : state.meterlistReducer.data,\r\n        unpaiddata : state.billingReducer.data,\r\n        update : state.meterlistReducer.update ,\r\n        updateMsg : state.meterlistReducer.updateMsg,\r\n        isloading : state.meterlistReducer.isloading\r\n       \r\n\t};\r\n}\r\nfunction mapDispatchToProps(dispatch) {\r\n\treturn {\r\n        getMeterList : (val) =>{\r\n             dispatch(getMeterList(val))\r\n           },\r\n           currentMenu : (val)=>{\r\n               dispatch(currentMenu(val))\r\n           },\r\n           getCustomerBilling : (val) =>{\r\n            dispatch(getCustomerBilling(val))\r\n          },\r\n          getAllPaidBill : (val) =>{\r\n            dispatch(getAllPaidBill(val))\r\n        }\r\n            \r\n\t};\r\n}\r\nexport default connect(mapStateToProps, mapDispatchToProps)(MeterList) ;\r\n","import commonstyle from '../../components/style'\r\n\r\nconst styles = {\r\n   \r\n    header : {\r\n        letterSpacing:2.0,\r\n        fontFamily : commonstyle.basicFont,\r\n        color : commonstyle.color.green\r\n    },\r\n    mainframe : {\r\n        width: 400,\r\n     //   height: 800,\r\n        margin: 'auto',\r\n        background : 'transparent'\r\n        \r\n      },\r\n      innercontainer : {\r\n        marginBottom : 10\r\n    },\r\n\r\n    successMsg : {\r\n        marginTop : 30 ,\r\n        letterSpacing:2.0,\r\n        fontFamily : commonstyle.basicFont,\r\n        color : commonstyle.color.green\r\n    }\r\n}\r\n\r\nexport default styles ","const actionType = {\r\n\r\n    NEW_METER_POST : \"NEW_METER_POST\",\r\n    NEW_METER_POST_SUCCESS : \"NEW_METER_POST_SUCCESS\",\r\n    NEW_METER_POST_FAILURE : \"NEW_METER_POST_FAILURE\"\r\n\r\n}\r\n\r\nexport default actionType ;","import React , {Component} from 'react' ;\r\nimport {connect} from 'react-redux' ;\r\nimport {Container,Row,Col,Button,Card} from 'react-bootstrap' ;\r\nimport styles from './NewAccount.style';\r\nimport { Tabs,Tab,ProgressBar} from 'react-mdl';\r\nimport { Gradient } from 'react-gradient';\r\nimport TextField from '../../components/textField/TextField';\r\nimport Label from '../../components/label/Label' ;\r\nimport BillButton from '../../components/button/Button' ;\r\nimport BillingRadio from '../../components/radio/RadioButton';\r\nimport BillDropDown from '../../components/dropdown/Dropdown' ;\r\nimport InfoCard from '../../components/card/InfoCard' ;\r\nimport { postNewAccount } from '../../redux/Action/newacount'\r\n \r\nclass createNewBillAccount extends Component {\r\n\r\n    constructor(props){\r\n        super(props)\r\n        this.state = {\r\n            id : '',\r\n            cname : localStorage.getItem('name'),\r\n            mobile : localStorage.getItem('mobile'),\r\n            address : localStorage.getItem('address'),\r\n            activeTab : 0,\r\n            inputs : [],\r\n            newAccount: {\r\n               // new \r\n               customerId:  '',\r\n               billingAccountNumberOnBillSlip: '',\r\n               billAccountAddress: '',\r\n               billAccountType: 'POSTPAID',\r\n               billingCategory: 0,\r\n               meterNumberOnBillSlip: '',\r\n               regularBillingDay : 0,\r\n               lastBillingDate : \"2020-07-01T05:17:54.079Z\",\r\n               lastBillingDateUnitSnapshot : 0,\r\n               sanctionedLoad: 0\r\n\r\n               // old \r\n                // billAccountType : 'POSTPAID',\r\n                // billingCategory : '',\r\n                // meterDeviceId : '',\r\n                // regularBillingDay : '',\r\n                // lastBillingDate : '',\r\n                // lastBillingDateUnitSnapshot : '',\r\n                // usertext : '',\r\n                // password : '',\r\n    \r\n                // timeoutDateTime : '',\r\n                // isEmergencyCreditEnabled : true ,\r\n                // maxEmergencyCredit : '',\r\n                // isReversePowerDeductionEnabled : true,\r\n                // isMaxPowerStatusEnabled : true ,\r\n                // maxPowerLevel : '',\r\n                // isAudibleAlarmEnabled : true,\r\n                // lowCreditAlarmValue : '',\r\n                // noOfTiers : 0,\r\n                // tierList : []\r\n            },\r\n            gradient : [\r\n              ['#ffffff','#8c7f92']\r\n              ]\r\n        }\r\n    }\r\n\r\n    componentDidMount(){\r\n        const { match: { params } } = this.props;\r\n        console.log(\"the customer === \"+params.id)\r\n       this.setState({\r\n           id : params.id\r\n       })\r\n    }\r\n\r\n    changeTab = (tabId) =>{\r\n        this.setState({\r\n            activeTab: tabId\r\n        })\r\n    }\r\n\r\n    handleInput = (e,name) =>{\r\n      let value = e.target.value;\r\n      this.setState(\r\n        prevState => ({\r\n          newAccount: {\r\n            ...prevState.newAccount,\r\n            [name]:name === 'lastBillingDateUnitSnapshot' || name === 'billingCategory' || \r\n                    name === 'regularBillingDay' ||  name === 'sanctionedLoad'  ? parseInt(value) : value \r\n          }\r\n        }),\r\n        //() => console.log(this.state.newAccount),\r\n      )\r\n    }\r\n\r\n      submit = () =>{\r\n        \r\n        const option = {\r\n          \"customerId\": this.state.id,\r\n          \"billingAccountNumberOnBillSlip\": this.state.newAccount.billingAccountNumberOnBillSlip,\r\n          \"billAccountAddress\": this.state.newAccount.billAccountAddress,\r\n          \"billAccountType\": this.state.newAccount.billAccountType,\r\n          \"billingCategory\": this.state.newAccount.billingCategory,\r\n          \"meterNumberOnBillSlip\": this.state.newAccount.meterNumberOnBillSlip,\r\n          \"regularBillingDay\": this.state.newAccount.regularBillingDay,\r\n          \"lastBillingDate\": \"2020-07-01T05:17:54.079Z\",\r\n          \"lastBillingDateUnitSnapshot\": this.state.newAccount.lastBillingDateUnitSnapshot,\r\n          \"sanctionedLoad\": this.state.newAccount.sanctionedLoad\r\n        }\r\n\r\n        console.log(this.state.newAccount)\r\n         this.props.postNewAccount(option)\r\n      }\r\n\r\n    render(){\r\n        return(\r\n            <div>\r\n               <Gradient\r\n                gradients={ this.state.gradient } // required\r\n                property=\"background\"\r\n                duration={ 10000 }\r\n                angle=\"100deg\"\r\n            > \r\n                \r\n                <Container style={{height : '120vh'}}>\r\n               \r\n                <Row>\r\n                    <Col xs={7} style={{marginTop:10}}>\r\n                    <Tabs activeTab={this.state.activeTab} onChange={(tabId)=>this.changeTab(tabId)} ripple style={styles.header}>\r\n                    <Tab>Billing Info</Tab>\r\n                    {\r\n                  this.state.newAccount.billAccountType === 'PREPAID' ?  <Tab>Prepaid Info</Tab> : <Tab>Postpaid Info</Tab> \r\n                }   \r\n                    <Tab>Notification</Tab>\r\n                    </Tabs>\r\n                    <section style={{marginTop: 30}}>\r\n                    <div style={this.state.activeTab === 0 ? {display : 'block'} : {display : 'none'}}>\r\n                        <div style={styles.mainframe}>\r\n                        <div style={styles.innercontainer}>\r\n                        <Label text=\"Billing Number \" />\r\n                        <TextField  bordercolor = \"gray\"  \r\n                        onchange={(e)=>this.handleInput(e,'billingAccountNumberOnBillSlip')}\r\n                        />\r\n                        </div>\r\n                        <div style={styles.innercontainer}>\r\n                        <Label text=\"Billing Account Address \" />\r\n                        <TextField   bordercolor = \"gray\" \r\n                         onchange={(e)=>this.handleInput(e,'billAccountAddress')}\r\n                        />\r\n                        </div>\r\n                        <div style={styles.innercontainer} >\r\n                        <Label text=\"Billing Category\"/>\r\n                        <BillDropDown onchange={(e)=>this.handleInput(e,'billingCategory')} />\r\n                        </div>\r\n                        <div style={styles.innercontainer}>\r\n                        <Label text=\"Meter Number on Billing Slip \" />\r\n                        <TextField  bordercolor = \"gray\"  \r\n                        onchange={(e)=>this.handleInput(e,'meterNumberOnBillSlip')}\r\n                        />\r\n                        </div>\r\n                        <div style={styles.innercontainer}>\r\n                        <Label text=\"Billing Type\"/>\r\n                            <BillingRadio\r\n                            radio1 = \"radio\" \r\n                            radio2 = \"radio\" \r\n                            v2=\"true\" \r\n                            first=\"Prepaid\"  second=\"Postpaid\" \r\n                            value1=\"PREPAID\" value2=\"POSTPAID\" \r\n                            onchange={(e)=>this.handleInput(e,'billAccountType')} />\r\n                        </div>\r\n                        <div style={styles.innercontainer}>\r\n                        <BillButton text=\" Next \"  \r\n                           // onclick={ ()=>this.changeTab(this.state.newUser.billAccountType==='PREPAID' ?2 : 3 ) \r\n                            onclick={ ()=>this.changeTab(1)}\r\n                            width = {300}\r\n                            height = {35}\r\n                            />\r\n                        </div>\r\n\r\n                        </div>\r\n                     </div>\r\n                     <div style={this.state.activeTab === 1 ? {display : 'block'} : {display : 'none'}}>\r\n                     {\r\n                      this.state.newAccount.billAccountType === 'POSTPAID' ?\r\n\r\n                      <div  style={styles.mainframe}>\r\n                      <div style={styles.innercontainer}>\r\n                            <Label text=\"Regular Billing Day\"  />    \r\n                            <TextField bordercolor = \"gray\" label=\"Regular Billing Day \" type=\"number\" \r\n                            pattern=\"-?[0-9]*(\\.[0-9]+)?\" error =\"Input not valid\" \r\n                             onchange={(e)=>this.handleInput(e,'regularBillingDay')}/>\r\n                             </div>\r\n                             <div style={styles.innercontainer}>\r\n                            <Label text=\"Billing Date\"/><TextField type=\"date\" label=\"\" \r\n                            onchange={(e)=>this.handleInput(e,'lastBillingDate')}/>\r\n                            </div>\r\n                            <div style={styles.innercontainer}>\r\n                            <Label text=\"Regular Billing Payment Due Day\"  />    \r\n                            <TextField bordercolor = \"gray\" label=\"Regular Billing Payment Date \" type=\"number\"\r\n                             pattern=\"-?[0-9]*(\\.[0-9]+)?\" error =\"Input not valid\"  \r\n                             onchange={(e)=>this.handleInput(e,'regularBillingPaymentDate')}/>\r\n                             </div>\r\n                             <div style={styles.innercontainer}>\r\n                            <Label text=\"Last Consume Unit\"/>\r\n                            <TextField bordercolor = \"gray\" label=\"Last Consume Unit\"   \r\n                            onchange={(e)=>this.handleInput(e,'lastBillingDateUnitSnapshot')}/>\r\n                            </div>\r\n                            <div style={styles.innercontainer}>\r\n                            <Label text=\"Sanction Load\"/>\r\n                            <TextField bordercolor = \"gray\" label=\"Sanction load\"   \r\n                            onchange={(e)=>this.handleInput(e,'sanctionedLoad')}/>\r\n                            </div>\r\n                            <BillButton text=\" Next \"  \r\n                             onclick={ ()=>this.changeTab(2)}\r\n                             width = {300}\r\n                             height = {35}\r\n                            />\r\n                      </div> : \r\n                    <div style={styles.mainframe}>\r\n                            <Label text=\"Timeout Date Time\"  />\r\n                            <TextField bordercolor = \"gray\" label=\"Timeout Date Time\"   onchange={(e)=>this.handleInput(e,'timeoutDateTime')}/>\r\n                            <Label text=\"Emergency Credit Enabled\" />\r\n                            {/* may be manual radion button here */}\r\n                            <BillingRadio\r\n                            radio1 = \"emcredit\" \r\n                            radio2 = \"emcredit\" \r\n                            v2=\"true\" \r\n                            first=\"no\"  second=\"yes\" \r\n                            value1={false} value2={true}\r\n                            onchange={(e)=>this.handleInput(e,'isEmergencyCreditEnabled')} />\r\n\r\n                            <Label text=\"Max Emergency Credit\" />\r\n                            <TextField bordercolor = \"gray\" label=\"Max Emergency Credit\" type=\"number\" \r\n                            error = \"Please insert a number \" pattern=\"-?[0-9]*(\\.[0-9]+)?\"\r\n                            onchange={(e)=>this.handleInput(e,'maxEmergencyCredit')}/>\r\n                            \r\n                            <Label text = \"Reverse Power Deduction\" /> \r\n                            <BillingRadio\r\n                            radio1 = \"repower\" \r\n                            radio2 = \"repower\" \r\n                            v2=\"true\" \r\n                            first=\"Disable\"  second=\"Enable\" \r\n                            value1=\"false\" value2=\"true\"\r\n                            onchange={(e)=>this.handleInput(e,'isReversePowerDeductionEnabled')} />\r\n\r\n                            <Label text=\"Max Power Status \" />\r\n                            <BillingRadio\r\n                            radio1 = \"maxpower\" \r\n                            radio2 = \"maxpower\" \r\n                            v2=\"true\" \r\n                            first=\"Disable\"  second=\"Enable\" \r\n                            value1=\"false\" value2=\"true\"\r\n                            onchange={(e)=>this.handleInput(e,'isMaxPowerStatusEnabled')} />\r\n                          \r\n                           <Label text=\"Max Power Level\" />\r\n                            <TextField bordercolor = \"gray\" label=\"Max Power Level\" type=\"number\" \r\n                            error = \"Please insert a number \" pattern=\"-?[0-9]*(\\.[0-9]+)?\"\r\n                            onchange={(e)=>this.handleInput(e,'maxPowerLevel')}/>\r\n\r\n                            <Label text=\"Audible Alarm\"/>\r\n                            <BillingRadio\r\n                            radio1 = \"aualarm\" \r\n                            radio2 = \"aualarm\" \r\n                            v2=\"true\" \r\n                            first=\"Disable\"  second=\"Enable\" \r\n                            value1=\"false\" value2=\"true\"\r\n                            onchange={(e)=>this.handleInput(e,'isAudibleAlarmEnabled')} />\r\n\r\n                            <Label text=\"Low Credit Alarm Value\" />\r\n                            <TextField bordercolor = \"gray\" label=\"Low Credit Alarm Value\" type=\"number\" \r\n                            error = \"Please insert a number \" pattern=\"-?[0-9]*(\\.[0-9]+)?\"\r\n                            onchange={(e)=>this.handleInput(e,'lowCreditAlarmValue')}/>\r\n\r\n                            <Label text=\"No Of Tiers\" />\r\n                            <TextField bordercolor = \"gray\" label=\"No Of Tiers\" type=\"number\" \r\n                            error = \"Please insert a number \" pattern=\"-?[0-9]*(\\.[0-9]+)?\"\r\n                            onchange={(e)=>this.handleInput(e,'noOfTiers')}/>\r\n\r\n                          { this.state.inputs.length > 0  ?  <Label text=\"Tier List\" /> : null  }\r\n                            {this.state.inputs.map(input => \r\n                              <TextField bordercolor = \"gray\" label=\"Rate ..\" key={input} onchange={(e)=>this.handleInputTierList(e,input)} />\r\n                              )}                            \r\n                            \r\n                            <BillButton text=\" Next \" \r\n                             onclick={()=>this.changeTab(2)}\r\n                             width = {280}\r\n                             height = {35}\r\n                             />\r\n                             <div style={{marginTop : 20}}></div>\r\n                        </div>\r\n\r\n                        }\r\n                      </div>\r\n                      <div style={this.state.activeTab === 2 ? {display : 'block'} : {display : 'none'}}>\r\n                        <div style={styles.mainframe}>\r\n                            {/* <Label text=\"User text\"/>    <TextField  label=\"User text\" onchange={(e)=>this.handleInput(e,'usertext')}/>\r\n                            <Label text=\"Password\"/>    <TextField type=\"password\" label=\"Password\" onchange={(e)=>this.handleInput(e,'password')}/> */}\r\n                            <Label text=\"SMS Notification\"/>\r\n                            <BillingRadio\r\n                            radio1 = \"sms\" \r\n                            radio2 = \"sms\" \r\n                            v2=\"true\" \r\n                            first=\"No\"  second=\"Yes\" \r\n                            value1=\"no\" value2=\"yes\"\r\n                            onchange={(e)=>this.handleInput(e,'isAudibleAlarmEnabled')} />\r\n                            <Label text=\"Email Notification\"/>\r\n                            <BillingRadio\r\n                            radio1 = \"email\" \r\n                            radio2 = \"email\" \r\n                            v2=\"true\" \r\n                            first=\"No\"  second=\"Yes\" \r\n                            value1=\"no\" value2=\"yes\"\r\n                            onchange={(e)=>this.handleInput(e,'isAudibleAlarmEnabled')} />\r\n                            <BillButton text=\" Submit \" \r\n                            disabled = {this.state.disabledFlag} \r\n                            onclick={()=>this.submit()}\r\n                            width = {220}\r\n                             height = {35}\r\n                            />\r\n                            <div style={styles.successMsg}>\r\n                            {\r\n                              this.props.success  ? \r\n                              <span style={styles.successMsg}> Successfully Applied for New Meter. </span> :<span style={styles.successMsg}> {this.props.msg}  </span> \r\n                            }\r\n                            </div>\r\n                        </div>\r\n                       \r\n                    </div>\r\n                    </section>\r\n\r\n                    \r\n                    </Col>\r\n                    <Col xs={1} style={{marginTop : 50}}></Col>\r\n                    <Col xs={4} style={{marginTop : 50}}>\r\n                        <InfoCard \r\n                         header = { \"Customer : \" + this.state.cname }\r\n                         title = {\"Mobile : \" + this.state.mobile}\r\n                         address = {\"Address : \" + this.state.address}\r\n                        />\r\n                    </Col>\r\n                </Row>\r\n                </Container>\r\n                </Gradient>\r\n            </div>\r\n\r\n        )\r\n    }\r\n}\r\n\r\nfunction mapStateToProps(state) {\r\n\treturn {\r\n        success : state.newaccountReducer.success ,\r\n        msg : state.newaccountReducer.msg\r\n       \r\n       \r\n\t};\r\n}\r\nfunction mapDispatchToProps(dispatch) {\r\n\treturn {\r\n\t\tpostNewAccount : (val) =>{\r\n            dispatch(postNewAccount(val))\r\n          }\r\n            \r\n\t};\r\n}\r\nexport default connect(mapStateToProps, mapDispatchToProps)(createNewBillAccount)","import actionType from '../../constant/newaccount'\r\n\r\nexport function postNewAccount(data){\r\n    return {\r\n        type : actionType.NEW_METER_POST,\r\n        payload : data \r\n    }\r\n}\r\n\r\n","const actionType = {\r\n\r\n    OPERATOR_LIST : \"OPERATOR_LIST\",\r\n    OPERATOR_LIST_SUCCESS : \"OPERATOR_LIST_SUCCESS\",\r\n    OPERATOR_LIST_FAILURE : \"OPERATOR_LIST_FAILURE\",\r\n    OPERATOR_CREATE : \"OPERATOR_CREATE\",\r\n    OPERATOR_CREATE_SUCCESS : \"OPERATOR_CREATE_SUCCESS\",\r\n    OPERATOR_CREATE_FAILURE : \"OPERATOR_CREATE_FAILURE\",\r\n    OPERATOR_DELETE : \"OPERATOR_DELETE\",\r\n    OPERATOR_DELETE_SUCCESS : \"OPERATOR_DELETE_SUCCESS\",\r\n    OPERATOR_DELETE_FAILURE : \"OPERATOR_DELETE_FAILURE\",\r\n    OPERATOR_UPDATE : \"OPERATOR_UPDATE\",\r\n    OPERATOR_UPDATE_SUCCESS : \"OPERATOR_UPDATE_SUCCESS\",\r\n    OPERATOR_UPDATE_FAILURE : \"OPERATOR_UPDATE_FAILURE\"\r\n}\r\n\r\nexport default actionType","import commonStyle from '../../components/style'\r\n\r\nconst styles ={\r\n    tbody : {\r\n        fontFamily : commonStyle.basicFont,\r\n        fontSize : 14 ,\r\n        margin : 20\r\n    },\r\n    updateBtn :{\r\n        \r\n        display : 'flex',\r\n        flexDirection : 'row',\r\n      //  justifyContent : 'space-between',\r\n      //  backgroundColor : 'red'\r\n    }\r\n} \r\n\r\nexport default styles ","import React , {Component} from 'react' ;\r\nimport {connect} from 'react-redux' ;\r\nimport {Table,Container,Row,Col,Form} from 'react-bootstrap';\r\nimport Label from '../../components/label/Label';\r\nimport Header from '../../components/alert/Alert' ;\r\nimport TextField from '../../components/textField/TextField';\r\nimport BillButton from '../../components/button/Button' ;\r\nimport {getOperator,postOperator,deleteOperator,updateOperator} from '../../../src/redux/Action/operator'\r\nimport styles from './Operators.style';\r\nimport { Gradient } from 'react-gradient';\r\n\r\n\r\nclass Operators extends Component {\r\n    constructor(props){\r\n        super(props)\r\n        this.state = {\r\n         // activeTab :'0' ,\r\n          gradient : [\r\n               \r\n            ['#F8F8F8','#648e64']\r\n            ],\r\n          update : false ,\r\n          text : \"ADD NEW OPERATOR\" ,\r\n          deoId : null ,\r\n          data : [],\r\n          confirmpass : '',\r\n          newUser: {\r\n            firstName: \"\",\r\n            lastName: \"\",\r\n            deoEmployeeId : \"\",\r\n            email: \"\",\r\n            mobileNo: \"\",\r\n            nidNumber: \"\",\r\n            username: \"\",\r\n            password: \"\"\r\n              \r\n            }  \r\n        }\r\n    }\r\n\r\n    componentDidMount(){\r\n      this.props.getOperator()\r\n  }\r\n\r\n  componentDidUpdate(prevProps, prevState) {\r\n\r\n    const check = prevProps.message !== this.props.message  ? this.props.getOperator() : null\r\n \r\n    }\r\n\r\n  static getDerivedStateFromProps(props,state){\r\n      if((props.data !== state.data )){\r\n      return{\r\n          data : props.data\r\n      }      \r\n  }\r\n  return null;\r\n}\r\n\r\n    input = (e,name) =>{\r\n      let value = e.target.value;\r\n      this.setState(\r\n        prevState => ({\r\n          newUser: {\r\n            ...prevState.newUser,\r\n            [name]: value \r\n          }\r\n        })\r\n      )\r\n    }\r\n\r\n    confirmPass = (e) =>{\r\n      let value = e.target.value;\r\n     \r\n      this.setState({\r\n        confirmpass  : value \r\n    })\r\n    }\r\n\r\n    create = () =>{\r\n    //  console.log(this.state.newUser)\r\n      const option = {\r\n      \"deoEmployeeId\" : this.state.newUser.deoEmployeeId,\r\n       \"username\": this.state.newUser.username,\r\n       \"password\": this.state.newUser.password,\r\n       \"firstName\": this.state.newUser.firstName,\r\n       \"lastName\": this.state.newUser.lastName,\r\n       \"email\": this.state.newUser.email,\r\n       \"mobileNo\": this.state.newUser.mobileNo,\r\n       \"nidNumber\": this.state.newUser.nidNumber\r\n     } \r\n   //  console.log(option)\r\n      this.props.postOperator(option)\r\n      this.makeInitial()\r\n      \r\n    }\r\n\r\n    makeInitial = () =>{\r\n      this.setState({\r\n        update : false ,\r\n        newUser: {\r\n          firstName: \"\",\r\n          lastName: \"\",\r\n          deoEmployeeId : \"\",\r\n          email: \"\",\r\n          mobileNo: \"\",\r\n          nidNumber: \"\",\r\n          username: \"\",\r\n          password: \"\"\r\n            \r\n          }\r\n      })\r\n    }\r\n\r\n    changeEnv = (data) =>{\r\n    //  console.log(data)\r\n      this.setState({\r\n        update : true ,\r\n        text : \"Operator Details\",\r\n        deoId : data.deoId,\r\n        newUser: {\r\n          ['deoEmployeeId'] : data.deoEmployeeId,\r\n          ['firstName'] : data.firstName,\r\n          ['lastName'] : data.lastName,\r\n          ['email'] : data.email,\r\n          ['mobileNo'] : data.mobileNo,\r\n          ['nidNumber'] : data.nidNumber,\r\n          ['username'] : data.username \r\n        }\r\n        \r\n      })\r\n    }\r\n\r\n    update = () =>{\r\n      const deoid = this.state.deoId\r\n      const option = {\r\n        \"deoId\" : this.state.deoId ,\r\n        \"deoEmployeeId\" : this.state.newUser.deoEmployeeId,\r\n         \"username\": this.state.newUser.username,\r\n         \"firstName\": this.state.newUser.firstName,\r\n         \"lastName\": this.state.newUser.lastName,\r\n         \"email\": this.state.newUser.email,\r\n         \"mobileNo\": this.state.newUser.mobileNo,\r\n         \"nidNumber\": this.state.newUser.nidNumber\r\n       } \r\n     //  console.log(option)\r\n        this.props.updateOperator(option,deoid)\r\n        this.makeInitial()\r\n    }\r\n\r\n    delete = () =>{\r\n    const id = this.state.deoId \r\n    this.props.deleteOperator(id)\r\n    this.makeInitial()\r\n    }\r\n\r\n    cancel = ()=>{\r\n      this.setState({\r\n        update : false ,\r\n        text : \"ADD NEW OPERATOR\" ,\r\n        newUser: {\r\n          firstName: \"\",\r\n          lastName: \"\",\r\n          deoEmployeeId : \"\",\r\n          email: \"\",\r\n          mobileNo: \"\",\r\n          nidNumber: \"\",\r\n          username: \"\",\r\n          password: \"\"\r\n            \r\n          } \r\n      })\r\n      \r\n    }\r\n\r\n    onClickTabItem = () =>{\r\n     // alert(val)\r\n     console.log()\r\n    }\r\n\r\n   \r\n    render(){\r\n        return(\r\n            <div>          \r\n               <Gradient\r\n                gradients={ this.state.gradient } // required\r\n                property=\"background\"\r\n                duration={ 10000 }\r\n                angle=\"120deg\"\r\n            > \r\n\r\n                <div style={{margin:0}}>\r\n                <Container>\r\n                <Row >\r\n                    <Col  md={8} style={{marginTop:10}}>\r\n                <Table  bordered hover  style={{borderRadius : 10}}>\r\n                  <thead>\r\n                    <tr style={{backgroundColor:'#1c9cea',color:'white'}}>\r\n                      <th>#</th>\r\n                      {/* <th>ID</th> */}\r\n                      <th>Name</th>\r\n                      <th>Email</th>\r\n                      <th>Mobile</th>\r\n                      <th>User Name</th>\r\n                    </tr>\r\n                  </thead>\r\n                  <tbody style={styles.tbody}>\r\n                    {\r\n                      this.state.data !== undefined ? \r\n                      this.state.data.map((data,index)=>\r\n                      <tr key={index} style={{cursor: 'cell'}} onClick={()=>this.changeEnv(data)}>\r\n                       <td>{index+1}</td>\r\n                      {/* <td>{data.deoEmployeeId}</td> */}\r\n                      <td>{data.firstName}</td>\r\n                      <td>{data.email}</td>\r\n                      <td>{data.mobileNo}</td>\r\n                      <td>{data.username}</td>\r\n                    </tr>\r\n                      )  : null\r\n                    }\r\n                    \r\n                   \r\n                  </tbody>\r\n                </Table>\r\n                </Col>\r\n\r\n                <Col md={4}  style={{backgroundColor:'transparent',marginTop : 10}}>\r\n                \r\n              <Header  variant=\"info\"  text = {this.state.text} width = '75%' />\r\n              <Form style={{backgroundColor:'transparent'}}>\r\n                <Form.Group >\r\n                <Label text=\"Employee ID \"/>\r\n                <TextField  placeholder = \"\"\r\n                value = { this.state.newUser.deoEmployeeId }\r\n              \r\n                onchange={(e)=>this.input(e,'deoEmployeeId')}/>\r\n                </Form.Group>\r\n\r\n                <Form.Group >\r\n                <Label text=\"First Name \"/>\r\n                <TextField  placeholder = \"\" \r\n                value = {  this.state.newUser.firstName }\r\n                onchange={(e)=>this.input(e,'firstName')}/>\r\n                </Form.Group>\r\n\r\n                <Form.Group >\r\n                <Label text=\"Last Name \"/>\r\n                <TextField  placeholder = \"\"\r\n                 value = {  this.state.newUser.lastName  }\r\n                onchange={(e)=>this.input(e,'lastName')}/>\r\n                </Form.Group>\r\n\r\n                <Form.Group >\r\n                <Label text=\"Email Name \"/>\r\n                <TextField  placeholder = \"\" \r\n                 value = { this.state.newUser.email  }\r\n                onchange={(e)=>this.input(e,'email')} />\r\n                </Form.Group>\r\n\r\n                <Form.Group >\r\n                <Label text=\" Mobile No  \"/>\r\n                <TextField  placeholder = \"\" \r\n                value = { this.state.newUser.mobileNo  }\r\n                pattern = \"-?[0-9]*(\\.[0-9]+)?\" type=\"number\" error =\"not a mobile number !\" \r\n                            onchange={(e)=>this.input(e,'mobileNo')}/>\r\n                </Form.Group>\r\n\r\n                <Form.Group >\r\n                <Label text=\"NID Number \"/>\r\n                <TextField  placeholder = \"\"\r\n                value = {  this.state.newUser.nidNumber  }\r\n                onchange={(e)=>this.input(e,'nidNumber')} />\r\n                </Form.Group>\r\n\r\n                <Form.Group >\r\n                <Label text=\"UserName \"/>\r\n                <TextField  placeholder = \"\" \r\n                value = {  this.state.newUser.username }\r\n                onchange={(e)=>this.input(e,'username')}/>\r\n                </Form.Group>\r\n\r\n                <Form.Group >\r\n                <Label text=\"Password \"/>\r\n                <TextField  placeholder = \"******\" type=\"password\" onchange={(e)=>this.input(e,'password')}/>\r\n                </Form.Group>\r\n\r\n                <Form.Group >\r\n                <Label text=\"Confirm Pasword \"/>\r\n                <TextField  placeholder = \"******\"  type=\"password\" onchange={(e)=>this.confirmPass(e)} />\r\n                </Form.Group>\r\n\r\n\r\n                <Form.Group >\r\n                  {\r\n                    !this.state.update ? \r\n                    <BillButton \r\n                    text = \"Submit \"\r\n                    width = '75%'\r\n                    onclick={()=>this.create()}\r\n                    /> :\r\n                    <div style={styles.updateBtn}>\r\n                    <BillButton\r\n                    variant =  \"danger\" \r\n                    text = \"Update !\"\r\n                    width = '20vh'\r\n                    onclick={()=>this.update()}\r\n                    />\r\n                    <BillButton \r\n                    variant =  \"success\" \r\n                    text = \"Cancel\"\r\n                    width = {80}\r\n                    onclick={()=>this.cancel()}\r\n                    />\r\n\r\n                    <BillButton \r\n                    variant =  \"link\" \r\n                    text = \"Delete\"\r\n                    width = {50}\r\n                    onclick={()=>this.delete()}\r\n                    />\r\n                    </div>\r\n                  }\r\n              \r\n                </Form.Group>\r\n\r\n                </Form>\r\n                </Col>\r\n                </Row>\r\n               \r\n                </Container>\r\n               \r\n</div>\r\n</Gradient> \r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\n\r\nfunction mapStateToProps(state) {\r\n\treturn {\r\n       \r\n        data : state.operatorReducer.data,\r\n        message : state.operatorReducer.message\r\n       \r\n       \r\n\t};\r\n}\r\nfunction mapDispatchToProps(dispatch) {\r\n\treturn {\r\n\t\tgetOperator : () =>{\r\n            dispatch(getOperator())\r\n          },\r\n    postOperator : (val) =>{\r\n            dispatch(postOperator(val))\r\n    },\r\n    deleteOperator : (val) => {\r\n            dispatch(deleteOperator(val))\r\n    },\r\n    updateOperator : (val1,val2) =>{\r\n            dispatch(updateOperator(val1,val2))\r\n    }\r\n            \r\n\t};\r\n}\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Operators) ;","import actionType from '../../constant/operator'\r\n\r\nexport function getOperator(){\r\n    return{\r\n        type : actionType.OPERATOR_LIST\r\n    }\r\n}\r\n\r\nexport function postOperator(data){\r\n    return{\r\n        type : actionType.OPERATOR_CREATE,\r\n        payload : data\r\n    }\r\n}\r\n\r\nexport function deleteOperator(data){\r\n    return{\r\n        type : actionType.OPERATOR_DELETE,\r\n        payload : data\r\n    }\r\n}\r\n\r\nexport function updateOperator(data1,data2){\r\n    return{\r\n        type : actionType.OPERATOR_UPDATE,\r\n        payload : [data1,data2]\r\n    }\r\n}\r\n\r\n\r\n","import commonStyle from '../../components/style';\r\n\r\nconst styles ={\r\n    container : {\r\n        display:'flex',\r\n        marginLeft : '30%',\r\n       // marginTop : '30%'\r\n       // width : '100%',\r\n      //  height : '100vh',\r\n       //margin : 'auto',\r\n    //    justifyContent : 'center',\r\n    //    alignItems : 'center',\r\n    },\r\n\r\n    card : {\r\n\r\n        width : '40%',\r\n        background : 'transparent',\r\n        marginTop : 100\r\n    },\r\n    txtMsg : {\r\n        marginLeft : 20,\r\n        color : commonStyle.color.white,\r\n        letterSpacing : 2.0 \r\n    }\r\n\r\n}\r\n\r\nexport default styles ","const actionType = {\r\n    CPASSWORD_REQUEST : \"CPASSWORD_REQUEST\",\r\n    CPASSWORD_REQUEST_SUCCESS : \"CPASSWORD_REQUEST_SUCCESS\",\r\n    CPASSWORD_REQUEST_FAILURE : \"CPASSWORD_REQUEST_FAILURE\"\r\n}\r\n\r\nexport default actionType ;","import React , {Component} from 'react' ;\r\nimport {connect} from 'react-redux' ;\r\nimport {Card} from 'react-bootstrap';\r\nimport Label from '../../components/label/Label';\r\nimport TextField from '../../components/textField/TextField';\r\nimport BillButton from '../../components/button/Button' ;\r\nimport { Gradient } from 'react-gradient';\r\nimport styles from './CPassword.style';\r\nimport {cpassRequest} from '../../../src/redux/Action/cpassword'\r\n\r\n\r\nclass CPassword extends Component {\r\n    constructor(props){\r\n        super(props)\r\n        this.state = {\r\n            password : '',\r\n            message : '', \r\n            flag : false ,\r\n            gradient : [\r\n               \r\n             ['#ffffff','#7a6e43']\r\n             ],\r\n            }\r\n        }\r\n        password = (e) =>{\r\n            let value = e.target.value ;\r\n            this.setState({\r\n                password : value \r\n            })\r\n        }\r\n\r\n        changePassword = () =>{\r\n         //   alert(this.state.password)\r\n         let option = {\r\n            \r\n                \"newPassword\": this.state.password\r\n              \r\n         }\r\n         if(this.state.password!== '')\r\n         this.props.cpassRequest(option)\r\n         else {\r\n             this.setState({\r\n                 flag : true ,\r\n                 message : \"Enter a password\"\r\n             },()=>console.log(this.state.flag , this.state.message))\r\n         }\r\n        }\r\n    render(){\r\n        return(\r\n            <div style={{}}>\r\n                <Gradient\r\n                  gradients={ this.state.gradient } // required\r\n                  property=\"background\"\r\n                  duration={ 10000 }\r\n                  angle=\"100deg\"\r\n                  style={{height : '100vh'}}\r\n                  > \r\n             <div style={styles.container}>\r\n                <Card style={styles.card}>\r\n                    {\r\n                        this.props.flag === 1   ? \r\n                        <span style={styles.txtMsg}> Bad Request </span> : null \r\n                    }\r\n                    \r\n                    \r\n                     <Card.Body>\r\n                    <Label text=\"New Password\" color = \"black\" />\r\n                    <TextField placeholder =\"*******\" type=\"password\" onchange={(val)=>this.password(val)} />\r\n                          \r\n                    <BillButton variant=\"info\"\r\n                            color = \"white\" \r\n                            width = {'75%'}\r\n                            text = \"Submit \" onclick={this.changePassword} />   \r\n                     \r\n                    </Card.Body>\r\n                    {\r\n                         this.props.done ? \r\n                         <span style={styles.txtMsg}> {this.props.message} </span> :\r\n                        this.state.flag ?  \r\n                        <span style={styles.txtMsg}> {this.state.message} </span>  : \r\n                        <span style={styles.txtMsg}> {this.props.message} </span> \r\n                         \r\n                    }\r\n                    </Card>\r\n\r\n                    \r\n\r\n                    </div> \r\n                    </Gradient>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nfunction mapStateToProps(state) {\r\n\treturn {\r\n       // courseData:state\r\n       done : state.cpasswordReducer.done ,\r\n       message : state.cpasswordReducer.message,\r\n       flag : state.cpasswordReducer.flag \r\n\r\n        \r\n\t};\r\n}\r\nfunction mapDispatchToProps(dispatch) {\r\n\treturn {\r\n\t\tcpassRequest : (val) =>{\r\n            dispatch(cpassRequest(val))\r\n          }\r\n            \r\n            \r\n\t};\r\n}\r\nexport default connect(mapStateToProps, mapDispatchToProps)(CPassword) ;","import actionType from '../../constant/cpassword';\r\n\r\nexport function cpassRequest(data){\r\n    return {\r\n        type : actionType.CPASSWORD_REQUEST,\r\n        payload : data \r\n    }\r\n}","const actionType = {\r\n\r\n    PENDING_METER_GET : 'PENDING_METER_GET',\r\n    PENDING_METER_GET_SUCCESS : 'PENDING_METER_GET_SUCCESS',\r\n    PENDING_METER_GET_FAILURE : 'PENDING_METER_GET_FAILURE',\r\n    PENDING_UTILITY_PROVIDED_ID_GET : 'PENDING_UTILITY_PROVIDED_ID_GET',\r\n    PENDING_UTILITY_PROVIDED_ID_GET_SUCCESS : 'PENDING_UTILITY_PROVIDED_ID_GET_SUCCESS',\r\n    PENDING_UTILITY_PROVIDED_ID_GET_FAILURE : 'PENDING_UTILITY_PROVIDED_ID_GET_FAILURE',\r\n    PENDING_METER_APPROVED : 'PENDING_METER_APPROVED',\r\n    PENDING_METER_APPROVED_SUCCESS : 'PENDING_METER_APPROVED_SUCCESS',\r\n    PENDING_METER_APPROVED_FAILURE : 'PENDING_METER_APPROVED_FAILURE '\r\n\r\n}\r\n\r\nexport default actionType ;","import actionType from '../../constant/pendingmeter'\r\n\r\nexport function getPendingList(){\r\n    return{\r\n        type : actionType.PENDING_METER_GET\r\n    }\r\n}\r\n\r\nexport function getUtilityProvidedID(){\r\n    return{\r\n        type : actionType.PENDING_UTILITY_PROVIDED_ID_GET\r\n    }\r\n}\r\n\r\nexport function approveMeter(data){\r\n    return{\r\n        type : actionType.PENDING_METER_APPROVED,\r\n        payload : data \r\n    }\r\n}","import commonStyle from '../../components/style';\r\n\r\nconst styles =  {\r\n\r\n    container : {\r\n        marginTop : 20 \r\n    }\r\n    ,\r\n    header : {\r\n        backgroundColor : 'transparent',\r\n        fontFamily : commonStyle.basicFont,\r\n        fontSize : 13 \r\n    },\r\n    headBackground : {\r\n        fontSize : 14,\r\n        backgroundColor:'#1c9cea',\r\n        color : 'white'\r\n    },\r\n    cursor : {\r\n        cursor : commonStyle.cursor\r\n    },\r\n    selectBtn : {\r\n        width : 250,\r\n        height : 40,\r\n        fontFamily : commonStyle.basicFont\r\n    },\r\n    approvedMsg : {\r\n        marginTop : 20 ,\r\n        fontFamily : commonStyle.basicFont,\r\n        fontSize : 14,\r\n        color : 'green'\r\n    }\r\n\r\n}\r\n\r\nexport default styles ","import React , {Component,Suspense} from 'react';\r\nimport {connect} from 'react-redux' ;\r\nimport {Table,Container,Row,Col} from 'react-bootstrap' ;\r\nimport {getPendingList,getUtilityProvidedID,approveMeter} from '../../redux/Action/pendingmeter'\r\nimport styles from './PendingMeter.style';\r\nimport ToastALert from '../../components/toast/Toast'\r\nimport { Gradient } from 'react-gradient';\r\nimport Header from '../../components/alert/Alert' ;\r\nimport Label from '../../components/label/Label' ;\r\nimport BillButton from '../../components/button/Button' ;\r\n\r\nclass PendinMeter extends Component {\r\n\r\n    constructor(props){\r\n        super(props)\r\n        this.state = {\r\n            data : [],\r\n            utility : [],\r\n            ulength : 0 ,\r\n            gradient : [\r\n               \r\n                ['#ffffff','#7a6e43']\r\n                ],\r\n            text  : \"UTILITY PROVIDED ID\",\r\n            billAccountId : null ,\r\n            utilityId : 0 ,\r\n            meter : \"No Meter Selected \"\r\n        }\r\n    }\r\n    componentDidMount(){\r\n         this.props.getPendingList()\r\n         this.props.getUtilityProvidedID()\r\n\r\n     }\r\n\r\n     componentDidUpdate(prevProps, prevState) {\r\n\r\n        const check = prevProps.approvedMsg !== this.props.approvedMsg  ? this.props.getPendingList() : null\r\n     \r\n        }\r\n \r\n     static getDerivedStateFromProps(props,state){\r\n         if(props.data !==null && props.data!== undefined ){\r\n         return{\r\n             data : props.data,\r\n             utility : props.utility ,\r\n             ulength : props.ulength\r\n         }\r\n     }\r\n\r\n     return null \r\n     }\r\n\r\n     onSelect = (data)=>{\r\n        this.setState({\r\n            billAccountId : data.billAccountId,\r\n            meter  : data.billAccountId.slice(43, 100)\r\n        })\r\n     }\r\n\r\n     changeUtility = (e)=>{\r\n         let val = e.target.value \r\n         this.setState({\r\n            utilityId : val \r\n         })\r\n     }\r\n\r\n     allowApproved = () =>{\r\n         let option = {\r\n            \"billingAccountId\": this.state.billAccountId,\r\n            \"utilityProvidedId\": this.state.utilityId \r\n          }\r\n\r\n          console.log(option)\r\n\r\n          this.props.approveMeter(option)\r\n     }\r\n\r\n    render(){\r\n        return(\r\n            <div>\r\n                <Gradient\r\n                  gradients={ this.state.gradient } // required\r\n                  property=\"background\"\r\n                  duration={ 10000 }\r\n                  angle=\"100deg\"\r\n                  style={{height : '100vh'}}\r\n                  > \r\n                  <Container>\r\n                  <Row >\r\n                    <Col md=\"8\">\r\n                    <div style={styles.container}>\r\n                    <Table striped bordered hover width=\"60%\">\r\n                    <thead>\r\n                        <tr style={{...styles.header,...styles.headBackground}}>\r\n                        <th>#</th>\r\n                        <th>Meter_ID</th>\r\n                        <th>Metar_Name</th>\r\n                        <th>Type</th>\r\n                        {/* <th>Bill_Day</th>\r\n                        <th>Sanc_Load </th> */}\r\n                        <th>Status</th>\r\n                        <th>Action</th>\r\n                        </tr>\r\n                    </thead>\r\n                    <tbody>\r\n                    {\r\n                        this.state.data.length >0 ? \r\n                        this.state.data.map((data,index)=>\r\n                        <tr key = {index} style={{...styles.header}}\r\n                         >\r\n                        <td>{index+1}</td>\r\n                        <td>{data.billAccountId}</td>\r\n                        <td>{data.meterNumberOnBillSlip}</td>\r\n                        <td>{data.billingAccountType}</td>  \r\n                        {/* <td>{data.regularBillingDay}</td>\r\n                        <td>{data.sanctionedLoad}</td> */}\r\n                        <td>Pending.</td>\r\n                        <td style={styles.cursor} onClick={()=>this.onSelect(data)}>\r\n                        <img src=\"https://img.icons8.com/android/24/000000/checked-2.png\"/>\r\n                        </td>\r\n                        </tr>\r\n                        )\r\n                        : <tr style={styles.header}>\r\n                                <td>No data found</td>\r\n                          </tr>\r\n                    }\r\n                    </tbody>\r\n                        </Table>\r\n                        </div>\r\n                        </Col>\r\n                        <Col md=\"3\">\r\n                        <div style={styles.container}>\r\n                                <Header text={this.state.text} />\r\n                                <Label\r\n                                color = \"#ffffff\"\r\n                                text={\"FOR METER : \" + this.state.meter} />\r\n                                <select style={styles.selectBtn} \r\n                                onChange={(e)=>this.changeUtility(e)}\r\n                                >\r\n                                <option>SELECT ID</option>\r\n                                {\r\n                                    this.state.ulength >0 ? \r\n                                     \r\n                                        this.state.utility.map((data,index)=>\r\n                                        <option value={data.utilityProvidedId}>{data.utilityProvidedId}</option>\r\n                                        )\r\n                                      : null \r\n                                }\r\n                                \r\n                                 \r\n                                </select>\r\n                                <BillButton \r\n                                variant = \"info\"\r\n                                text = \"Approve !\"\r\n                                onclick = {()=>this.allowApproved()}\r\n                                />\r\n\r\n                                {\r\n                                    this.props.approved ? \r\n                                    <div style={styles.approvedMsg}>\r\n                                        {this.props.approvedMsg}\r\n                                    </div>\r\n\r\n                                    : null \r\n                                }\r\n\r\n\r\n                        </div>\r\n                        </Col>\r\n                        </Row>\r\n                   \r\n                    </Container>\r\n                    </Gradient>\r\n                    \r\n             </div>\r\n        )\r\n    }\r\n}\r\n\r\nfunction mapStateToProps(state) {\r\n\treturn {\r\n        data : state.pendinmeterReducer.data,\r\n        length : state.pendinmeterReducer.length ,\r\n        utility : state.pendinmeterReducer.utility,\r\n        ulength : state.pendinmeterReducer.ulength,\r\n        approved : state.pendinmeterReducer.approved,\r\n        approvedMsg : state.pendinmeterReducer.approvedMsg\r\n       \r\n\t};\r\n}\r\nfunction mapDispatchToProps(dispatch) {\r\n\treturn {\r\n\t\t\r\n        getPendingList : () =>{\r\n            dispatch(getPendingList())\r\n        },\r\n        getUtilityProvidedID : () =>{\r\n            dispatch(getUtilityProvidedID())\r\n        },\r\n        approveMeter : (val) =>{\r\n            dispatch(approveMeter(val))\r\n        }\r\n            \r\n\t};\r\n}\r\nexport default connect(mapStateToProps, mapDispatchToProps)(PendinMeter) ;","import React, { Component } from 'react';\r\nimport {connect} from 'react-redux' ;\r\nimport { Switch, Route } from 'react-router-dom';\r\nimport Login from '../../src/pages/login/Login' ;\r\nimport Registration from '../../src/pages/reg/Registration' ;\r\nimport Customer from '../../src/pages/customer/Customer' ;\r\nimport Billing from '../../src/pages/billing/Billing' ;\r\nimport Setting from '../../src/pages/setting/Setting' ;\r\nimport MeterList from '../../src/pages/meterList/MeterList';\r\nimport createNewBillAccount from '../../src/pages/newAccount/NewAccount';\r\nimport Operators from '../../src/pages/operator/Operators';\r\nimport CPassword from '../../src/pages/cpassword/CPassword' ;\r\nimport PendinMeter from '../../src/pages/pendingMeter/PendingMeter'\r\n\r\nclass nav extends Component{\r\n    render(){\r\n      console.log(this.props.login)\r\n      return (\r\n       \r\n        <Switch >\r\n        {\r\n            !this.props.login ? \r\n         <Switch>\r\n          <Route exact  path = \"/\"  component={Login}  />\r\n          <Route path = \"/meterList/:id\"  component={Login}  />\r\n          <Route  path=\"/reg\" component={Login} style={{backgroundCOlor:'white'}} />\r\n          <Route path =\"/billing/:id\" component={Login} />\r\n          <Route path = \"/settings\"  component={Login}  />\r\n          <Route path = \"/operator\"  component={Login}  />\r\n         </Switch>\r\n          :\r\n         <Switch>\r\n          <Route exact path=\"/\"   component={Customer} />\r\n          <Route path = \"/meterlist/:id\"  component={MeterList}  />\r\n          <Route path = \"/createnew/:id\"  component={createNewBillAccount}  />\r\n          {/* <Route  path=\"/reg\" component={Registration} style={{backgroundCOlor:'white'}} /> */}\r\n          <Route  path=\"/reg/:id\" component={Registration} style={{backgroundCOlor:'white'}} />\r\n          <Route path =\"/billing/:id\" component={Billing} />\r\n          <Route path = \"/settings\"  component={Setting}  />\r\n          <Route path = \"/operator\"  component={Operators}  />\r\n          <Route path=\"/change-pasword\" component={CPassword} />\r\n          <Route pah=\"/pending\" component={PendinMeter}    />\r\n          </Switch>\r\n        }\r\n          \r\n         \r\n         \r\n          \r\n\r\n        </Switch>\r\n      )\r\n    }\r\n}\r\nfunction mapStateToProps(state) {\r\n\treturn {\r\n\r\n       data  : state.loginReducer.data,\r\n       error : state.loginReducer.error,\r\n       login : localStorage.getItem('login') ? localStorage.getItem('login') : state.loginReducer.login\r\n       \r\n\t};\r\n}\r\nfunction mapDispatchToProps(dispatch) {\r\n\treturn {\r\n        // login : (val) =>{\r\n        //      dispatch(login(val))\r\n        //    }\r\n            \r\n\t};\r\n}\r\nexport default connect(mapStateToProps, mapDispatchToProps)(nav);","import commonStyle from '../style'\r\nconst styles = {\r\n\r\n    container : {\r\n         height: '100vh', \r\n       //  position: 'relative'\r\n    },\r\n    menuBackground : {\r\n        backgroundColor: commonStyle.menuBackgroundAdmin\r\n    },\r\n    header : {\r\n        backgroundColor: commonStyle.mainBannerAdmin,\r\n        display:'flex',\r\n      //  height : 90\r\n    },\r\n    headerRow : {\r\n        display : 'flex',\r\n        justifyContent : 'space-between'\r\n    },\r\n    title : {\r\n        fontSize : 20,\r\n       // letterSpacing : commonStyle.letterspacingextend,\r\n        fontFamily : commonStyle.fontBody,\r\n        color:commonStyle.color.peru,\r\n        textTransform : 'uppercase'\r\n    },\r\n    menu : {\r\n        fontSize : 18,\r\n        textTransform : 'uppercase',\r\n        color : commonStyle.color.white,\r\n       // fontWeight : 'bold',\r\n        letterSpacing : commonStyle.letterspacingextend\r\n    },\r\n    menuLink : {\r\n        color : '#000000'\r\n    },\r\n\r\n    siteTitle : {\r\n        backgroundColor:'#ededed',\r\n        fontFamily : commonStyle.basicFont,\r\n        color:commonStyle.color.white\r\n    },\r\n    normal : {\r\n        fontFamily : commonStyle.menuFont,\r\n        color:commonStyle.color.black,\r\n        fontSize : commonStyle.normSize,\r\n        letterSpacing : commonStyle.letterspacing\r\n    },\r\n    selected : {\r\n        fontFamily : commonStyle.menuFont,\r\n        color:commonStyle.color.red,\r\n        fontSize : commonStyle.focusedSize,\r\n        letterSpacing : commonStyle.letterspacing\r\n    },\r\n    submenu : {\r\n        marginLeft : 20\r\n    },\r\n    none : {\r\n        display : 'none'\r\n    },\r\n    block : {\r\n        flexDirection : 'column',\r\n        display : 'block'\r\n    },\r\n    loginSpeech : {\r\n        fontSize : 15,\r\n        fontFamily : commonStyle.menuFont,\r\n        letterSpacing : 1.0\r\n\r\n    }\r\n}\r\n\r\nexport default styles ;","import React, { Component } from 'react';\r\nimport { Layout, Header, Navigation, Drawer, Content,HeaderRow,Button ,IconButton,Menu,MenuItem} from 'react-mdl';\r\nimport { Link } from 'react-router-dom';\r\nimport Nav from '../navigation';\r\nimport styles from './Layout.style';\r\nimport {connect} from 'react-redux' ;\r\nimport {currentIndex,getTheApiLInk,currentMenu} from '../../redux/Action/layout' ;\r\nimport {getPendingList} from '../../redux/Action/pendingmeter'\r\nimport {makeErrorTrue} from '../../redux/Action/login'\r\nimport { Redirect } from \"react-router-dom\";\r\n\r\n\r\n\r\nclass MeterTemplate extends Component {\r\n    constructor(props) {\r\n        super(props)\r\n        this.state = { \r\n            currentmenu : 0,\r\n            submenu : 100,\r\n            display : 'none',\r\n            data : [],\r\n            called : false ,\r\n            header  : {},\r\n            user : localStorage.getItem('theuser') !== null ? localStorage.getItem('theuser') :  ''\r\n         };\r\n    }\r\n\r\n    componentDidMount(){\r\n       // const val =  'Home' \r\n        // this.props.currentMenu(val)\r\n        this.props.getPendingList()\r\n    }\r\n\r\n    // static getDerivedStateFromProps(props,state){\r\n    //     if(props.header !==null && props.header!== undefined ){\r\n    //     return{\r\n    //         header : props.header \r\n    //     }\r\n    // }\r\n    // }\r\n\r\n    makeCall = (val,name) =>{\r\n        this.setState({\r\n            currentmenu : val ,\r\n    }) \r\n    \r\n    this.props.currentMenu(name)\r\n    }\r\n \r\n    handleBack = () => {\r\n        this.props.history.push('/reg')\r\n      }\r\n\r\n      signOut = () =>{\r\n         this.props.currentMenu('Log IN')\r\n         localStorage.clear()\r\n         this.props.makeErrorTrue()\r\n         \r\n\r\n      }\r\n\r\n\r\n  render() {\r\n    console.log(this.props.user)\r\n    return (\r\n        <div style={styles.container}>       \r\n        <Layout fixedHeader fixedDrawer>\r\n        <Header title={<span><span ></span></span>}\r\n         style={styles.header}\r\n        > \r\n        \r\n        <HeaderRow  style={styles.headerRow}>  \r\n         <span style={styles.menu}>{this.props.menu}  </span>\r\n         {\r\n                    this.props.login  ? \r\n         <Navigation style={{float : 'right'}}>\r\n                \r\n                <div style={{position: 'relative'}}>\r\n                \r\n                    <span style={styles.loginSpeech}>Logged in as : {this.props.user} </span> \r\n                    \r\n\r\n                  \r\n            <IconButton name=\"more_vert\" id=\"demo-menu-lower-right\" />\r\n            \r\n            <Menu target=\"demo-menu-lower-right\" align=\"right\" style={{background : 'transparent'}}>\r\n                                <MenuItem style={styles.menuItem}>\r\n                                <Link to=\"/change-pasword\" onClick={()=>this.makeCall(3,'Change Password')}><span style={styles.menuLink}>Change Password</span></Link>\r\n                                </MenuItem>\r\n                                <MenuItem style={styles.menuItem}>\r\n                                <Link to=\"/\" ><span style={styles.menuLink} onClick={this.signOut}>Log out</span></Link>\r\n                                </MenuItem>\r\n                               \r\n            </Menu>\r\n            </div>   \r\n            </Navigation>\r\n            : null \r\n        }\r\n         </HeaderRow>  \r\n             \r\n        </Header>\r\n        <Drawer title={<span style={styles.title}>A-d-m-i-n</span>} style={styles.menuBackground} >\r\n      \r\n            {\r\n                this.props.menu !== 'Login' ?\r\n                <Navigation> \r\n                <Link to=\"/\" style={this.state.currentmenu===0 ? styles.selected : styles.normal} onClick={()=>this.makeCall(0,'Home')}>Home</Link> \r\n                {\r\n                    this.props.length > 0 ? \r\n                    <Link to=\"/pending\" style={this.state.currentmenu===10 ? styles.selected : styles.normal} onClick={()=>this.makeCall(10,'Pending Meter')}>Pending Meter ({this.props.length})</Link>\r\n                     : null \r\n                }\r\n               \r\n                              \r\n                <Link to=\"/settings\" style={this.state.currentmenu===1 ? styles.selected : styles.normal} onClick={()=>this.makeCall(1,'Setting')}>Settings</Link>\r\n                <Link to=\"/operator\" style={this.state.currentmenu===2 ? styles.selected : styles.normal} onClick={()=>this.makeCall(2,'OPERATOR MANAGEMENT')}>Operator Management</Link> \r\n                <span style={{ cursor:'pointer'}} onClick={this.signOut}>Log out </span>\r\n                </Navigation>\r\n                : null \r\n            }\r\n       \r\n        \r\n        \r\n        </Drawer>\r\n        <Content >\r\n            {/* <h3>{this.props.header}  </h3> */}\r\n            <Nav />\r\n        </Content>\r\n    </Layout> \r\n               \r\n            \r\n       \r\n    </div>\r\n\r\n    );\r\n  }\r\n}\r\n\r\nfunction mapStateToProps(state) {\r\n\treturn {\r\n       // courseData:state\r\n        isLoading : state.layoutReducer.isLoading ,\r\n        data : state.layoutReducer.data,\r\n        current : state.layoutReducer.current ,\r\n        menu : state.layoutReducer.menu,\r\n        back : state.layoutReducer.back,\r\n        header : state.loginReducer.data ,//localStorage.getItem('header') ,\r\n        error : state.loginReducer.error,\r\n        login : state.loginReducer.loginFlag ,\r\n        user : state.loginReducer.user,\r\n        pendingmeter : state.pendinmeterReducer.data,\r\n        length : state.pendinmeterReducer.length \r\n       \r\n\t};\r\n}\r\nfunction mapDispatchToProps(dispatch) {\r\n\treturn {\r\n\t\t// getMenuData : () =>{\r\n        //     dispatch(getMenuData())\r\n        //   },\r\n        currentIndex : (val) =>{\r\n            dispatch(currentIndex(val))\r\n        },\r\n        getTheApiLInk : () =>{\r\n            dispatch(getTheApiLInk())\r\n        },\r\n        currentMenu : (val)=>{\r\n            dispatch(currentMenu(val))\r\n        },\r\n        makeErrorTrue : () =>{\r\n            dispatch(makeErrorTrue())\r\n        },\r\n        getPendingList : () =>{\r\n            dispatch(getPendingList())\r\n        }\r\n            \r\n\t};\r\n}\r\nexport default connect(mapStateToProps, mapDispatchToProps)(MeterTemplate);","const actionType = {\r\n\r\n    HOME_GET_MENU_DATA  : 'HOME_GET_MENU_DATA',\r\n    HOME_GET_MENU_DATA_SUCCESS : 'HOME_GET_MENU_DATA_SUCCESS',\r\n    HOME_GET_MENU_DATA_FAILURE : 'HOME_GET_MENU_DATA_FAILURE'\r\n   \r\n}\r\n\r\nexport default actionType","import actionType from '../../constant/home'\r\n\r\nconst INITIAL_STATE ={\r\n    isloading : true ,\r\n    data : []\r\n}\r\n\r\nexport default (state = INITIAL_STATE, action) => {\r\n    switch (action.type) {\r\n\r\n        case  actionType.HOME_GET_MENU_DATA:\r\n        return {\r\n            isLoading : true,\r\n        \r\n        }\r\n\r\n        case actionType.HOME_GET_MENU_DATA_SUCCESS :\r\n            return {\r\n               isloading : false ,\r\n               data : action.data.RETURNS.APIPAYLOAD\r\n            }\r\n        \r\n        default:\r\n            return state;  \r\n    }\r\n\r\n}","import actionType from '../../constant/layout'\r\n\r\nconst INITIAL_STATE ={\r\n    isloading : true ,\r\n    data : [],\r\n    current : null,\r\n    menu : localStorage.getItem('login') ?  'Home' : 'Login',\r\n    back : false ,\r\n    \r\n\r\n}\r\n\r\n\r\nexport default (state = INITIAL_STATE, action) => {\r\n    switch (action.type) {\r\n\r\n        case  actionType.LAYOUT_GET_MENU_DATA:\r\n        return {\r\n            ...state ,\r\n            isLoading : true,\r\n        \r\n        }\r\n\r\n        case actionType.LAYOUT_GET_MENU_DATA_SUCCESS :\r\n            return {\r\n                 ...state ,\r\n                isloading : false ,\r\n                data : action.data.HIERARCHIES.HIERARCHY\r\n            }\r\n\r\n        case actionType.LAYOUT_CURRENT_INDEX : \r\n            return {\r\n                current : action.payload \r\n            }\r\n        case actionType.LAYOUT_MENU : {\r\n            return {\r\n                ...state ,\r\n                menu : action.payload,\r\n                back : action.payload === 'Home' || action.payload === 'Registration' || action.payload === 'Setting' ? false : true \r\n            }\r\n        }\r\n        \r\n        default:\r\n            return state;  \r\n    }\r\n\r\n}","import actionType from '../../constant/customer'\r\n\r\nconst INITIAL_STATE ={\r\n    isloading : false ,\r\n    data : [],\r\n    customer : []\r\n}\r\n\r\nexport default (state = INITIAL_STATE, action) => {\r\n    switch (action.type) {\r\n\r\n        case  actionType.CUSTOMER_LIST:\r\n        return {\r\n            isloading : true,\r\n        \r\n        }\r\n\r\n        case actionType.CUSTOMER_LIST_SUCCESS :\r\n            return {\r\n               // ...state ,\r\n                isloading : false ,\r\n               // data : action.data[0] , // 229 \r\n                data : action.data[0].content  // 219 \r\n            }\r\n\r\n        case actionType.CUSTOMER_DATA : \r\n            return {\r\n                ...state ,\r\n                customer : action.payload\r\n            }\r\n\r\n        \r\n        default:\r\n            return state;  \r\n    }\r\n\r\n}","import actionType from '../../constant/registration';\r\n\r\n\r\nconst INITIAL_STATE = {\r\n    \r\n    isloading : false ,\r\n    data : 0,\r\n    error : false ,\r\n    msg : \"Please Fill All the Field\"\r\n}\r\n\r\nexport default (state=INITIAL_STATE,action)=>{\r\n\r\n    switch(action.type){\r\n\r\n        case  actionType.REGISTARTION_CREATE  : \r\n        return {\r\n            isloading : true\r\n        }\r\n\r\n        case actionType.REGISTARTION_CREATE_SUCCESS : \r\n        return {\r\n            isloading : false ,\r\n            data : action.dataa,\r\n            error : false ,\r\n            msg : \"Successfully User Created.\"\r\n        }\r\n        case actionType.REGISTARTION_CREATE_FAILURE : \r\n        return {\r\n            isloading : false ,\r\n            error : true,\r\n            msg : \"Something went wrong .Please fill all the field  .\"\r\n        }\r\n\r\n        case actionType.REGISTARTION_UPDATE_SUCCESS : \r\n            return {\r\n               // ...state ,\r\n               msg : \"Successfully User Updated.\"\r\n            }\r\n        case actionType.REGISTARTION_INITIAL : \r\n            return {\r\n                msg : \"Please Fill All the Field\"\r\n        }\r\n\r\n\r\n         default : \r\n        return state \r\n    }\r\n}","import actionType from '../../constant/billing'\r\n\r\nconst INITIAL_STATE ={\r\n    isloading : true ,\r\n    data : [], //record \r\n    basicInfo : {},\r\n    payable : [],\r\n  //  basicInfo : [],\r\n    error : \"\",\r\n    load : null \r\n}\r\n\r\nexport default (state = INITIAL_STATE, action) => {\r\n    switch (action.type) {\r\n\r\n        case  actionType.CUSTOMER_BILLING:\r\n        return {\r\n            isLoading : true,\r\n        \r\n        }\r\n\r\n        case actionType.CUSTOMER_BILLING_SUCCESS :\r\n            return {\r\n               // ...state ,\r\n                isloading : false ,\r\n                data : action.data.payable_billing_record_list,\r\n              //  data : action.data.payable_billing_record_list,\r\n                basicInfo : action.data.billing_account\r\n            }\r\n\r\n      \r\n\r\n        \r\n        default:\r\n            return state;  \r\n    }\r\n\r\n}","import actionType from '../../constant/setting'\r\n\r\nconst INITIAL_STATE ={\r\n    isloading : true ,\r\n    vatInPercent : 0,\r\n    reprintCost : 0 ,\r\n    data : [],\r\n    installmentOfSDrop : 0 ,\r\n    meterRent : 0 ,\r\n    update : false ,\r\n    error : false ,\r\n    errorMsg : '',\r\n    errorUpdate : false ,\r\n    errorUpdateMsg : \"\"\r\n\r\n}\r\n\r\nexport default (state = INITIAL_STATE, action) => {\r\n    switch (action.type) {\r\n\r\n        case  actionType.SETTING_GET_VALUE:\r\n        return {\r\n            isLoading : true,\r\n        \r\n        }\r\n        case  actionType.SETTING_GET_VALUE_SUCCESS:\r\n        return {\r\n            isLoading : false,\r\n            data : action.data ,\r\n            vatInPercent : action.data[0].vatInPercent !== undefined || action.data[0].vatInPercent !== null ? action.data[0].vatInPercent :  \"\" ,\r\n            reprintCost : action.data[0].reprintCost,\r\n            installmentOfSDrop : action.data[0].installmentOfSDrop,\r\n            meterRent : action.data[0].meterRent,\r\n            sanctionLoad : action.data[0].sanctionLoad,\r\n            pfcCharge : action.data[0].pfcCharge,\r\n            demandCharge : action.data[0].demandCharge,\r\n            xformerLoss : action.data[0].xformerLoss\r\n        \r\n        }\r\n\r\n        case actionType.SETTING_GET_VALUE_FAILURE : \r\n        return {\r\n            error : true ,\r\n            errorMsg : \"Error Loading Data \"\r\n        }\r\n\r\n        case actionType.SETTING_VALUE_UPDATE : \r\n        return {\r\n            errorUpdate : false , \r\n            errorUpdateMsg : \" \"\r\n        }\r\n\r\n        case actionType.SETTING_VALUE_UPDATE_SUCCESS : \r\n        return {\r\n            errorUpdate : false , \r\n            errorUpdateMsg : \"UPDATE SUCCESSFULLY.\"\r\n        }\r\n\r\n        case actionType.SETTING_VALUE_UPDATE_FAILURE : \r\n        return {\r\n            errorUpdate : true ,\r\n            errorUpdateMsg : \"ERROR . TRY LATER .\"\r\n        }\r\n        \r\n        default:\r\n            return state;  \r\n    }\r\n\r\n}","import actionType from '../../constant/meterlist';\r\n\r\nconst  INITIAL_STATE = {\r\n    isloading : true ,\r\n    data  : [],\r\n    update : false ,\r\n    updateMsg : 'UPDATEEEE'\r\n}\r\n\r\nexport default (state = INITIAL_STATE, action) => {\r\n    switch (action.type) {\r\n\r\n        case  actionType.METER_LIST:\r\n        return {\r\n            isloading : true,\r\n        \r\n        }\r\n\r\n        case actionType.METER_LIST_SUCCESS :\r\n            return {\r\n                // ...state ,\r\n                isloading : false ,\r\n                data : action.data.billing_account_list\r\n            }\r\n            \r\n            \r\n        case actionType.METER_LIST_UPDATE_SUCCESS : \r\n            return {\r\n                update : true  ,\r\n                updateMsg : \"Update Successfully\"\r\n            }\r\n        case actionType.METER_LIST_UPDATE_FAILURE : \r\n            return {\r\n                update : false   ,\r\n                updateMsg : \"Something Went Wrong . Please Try later \"\r\n            }\r\n        \r\n        default:\r\n            return state;  \r\n    }\r\n\r\n}","import actionType from '../../constant/login'\r\n\r\nconst INITIAL_STATE ={\r\n    isloading : false ,\r\n    data : null  ,\r\n    flag : 0 ,\r\n    error : true  ,\r\n    loginFlag : localStorage.getItem('login') ? localStorage.getItem('login') : false ,\r\n    user : localStorage.getItem('theuser') !== null ? localStorage.getItem('theuser') :  ''\r\n}\r\n\r\nexport default (state = INITIAL_STATE, action) => {\r\n    switch (action.type) {\r\n\r\n        case  actionType.lOG_IN:\r\n        return {\r\n            ...state ,\r\n            isloading : true,\r\n        \r\n        }\r\n\r\n        case actionType.lOG_IN_SUCCESS :\r\n            return {\r\n                // ...state ,\r\n                error : false ,\r\n                isloading : false ,\r\n                data :action.data ,\r\n                loginFlag : true ,\r\n                storage : getLocalStoreData(action.data),\r\n                flag : 0 ,\r\n                user : localStorage.getItem('theuser')\r\n            }\r\n            case actionType.lOG_IN_FAILURE :\r\n            return {\r\n                ...state ,\r\n                isloading : false ,\r\n                error : true,\r\n                flag : 1,\r\n                loginFlag : false\r\n            }\r\n\r\n            case actionType.lOG_IN_MAKE_ERROR_TRUE :\r\n            return {\r\n                error : true,\r\n                user : '',\r\n                loginFlag : false \r\n            }\r\n\r\n            case actionType.LOG_IN_SET_USER_NAME : \r\n            return {\r\n                ...state ,\r\n                user : action.payload \r\n            }\r\n\r\n\r\n        \r\n        default:\r\n            return state;  \r\n    }\r\n\r\n}\r\n\r\n\r\nfunction getLocalStoreData(header) {\r\n\r\n    localStorage.setItem('login',true)\r\n    localStorage.setItem('header-z-my-point-new-look-my-base',header)\r\n}","import actionType from '../../constant/operator'\r\n\r\nconst INITIAL_STATE ={\r\n    isloading : true ,\r\n    data : [],\r\n    operator : [],\r\n    message : null \r\n}\r\n\r\nexport default (state = INITIAL_STATE, action) => {\r\n    switch (action.type) {\r\n\r\n        case  actionType.OPERATOR_LIST:\r\n        return {\r\n            isLoading : true,\r\n        \r\n        }\r\n\r\n        case actionType.OPERATOR_LIST_SUCCESS :\r\n            return {\r\n               // ...state ,\r\n                isloading : false ,\r\n                create : false ,\r\n                data : action.data[0]\r\n            }\r\n\r\n        case actionType.OPERATOR_CREATE_SUCCESS : \r\n            return {\r\n               // ...state ,\r\n               message : \"done\" \r\n            }\r\n        case actionType.OPERATOR_DELETE : \r\n            return {\r\n               // ...state ,\r\n               message : \" \" \r\n            }\r\n        case actionType.OPERATOR_DELETE_SUCCESS : \r\n            return {\r\n               // ...state ,\r\n               message : \"done\" \r\n            }\r\n            case actionType.OPERATOR_UPDATE : \r\n            return {\r\n               // ...state ,\r\n               message : \" \" \r\n            }\r\n        case actionType.OPERATOR_UPDATE_SUCCESS : \r\n            return {\r\n               // ...state ,\r\n               message : \"done\" \r\n            }\r\n\r\n        \r\n        default:\r\n            return state;  \r\n    }\r\n\r\n}","import actionType from '../../constant/newaccount'\r\n\r\nconst INITIAL_STATE ={\r\n    isloading : false  ,\r\n    data : [],\r\n    success : false ,\r\n    msg : \" \"\r\n  \r\n}\r\n\r\nexport default(state= INITIAL_STATE ,action) => {\r\n\r\n        switch(action.type) {\r\n\r\n            case actionType.NEW_METER_POST :\r\n                return {\r\n                    isloading : true \r\n                }\r\n            \r\n\r\n            case actionType.NEW_METER_POST_SUCCESS : \r\n                return {\r\n                    isloading : false ,\r\n                    success : true ,\r\n                    msg : \"Successfully Created .\"\r\n                }\r\n\r\n            default:\r\n                return state; \r\n\r\n        }\r\n}","import actionType from '../../constant/cpassword'\r\n\r\nconst INITIAL_STATE ={\r\n    isloading : true ,\r\n    data : [],\r\n    message : null ,\r\n    done : false ,\r\n    flag : 0\r\n}\r\n\r\nexport default (state = INITIAL_STATE, action) => {\r\n    switch (action.type) {\r\n\r\n        case  actionType.CPASSWORD_REQUEST:\r\n        return {\r\n            isLoading : true,\r\n        \r\n        }\r\n\r\n        case actionType.CPASSWORD_REQUEST_SUCCESS :\r\n            return {\r\n               // ...state ,\r\n                isloading : false ,\r\n                done : true ,\r\n                message : \"Successfully Password Changed\",\r\n                flag : 0\r\n            }\r\n\r\n        case actionType.CPASSWORD_REQUEST_FAILURE : \r\n            return {\r\n                ...state ,\r\n                done : false ,\r\n                message : undefined ,\r\n                flag : 1\r\n            }\r\n\r\n        \r\n        default:\r\n            return state;  \r\n    }\r\n\r\n}","import actionType from '../../constant/pendingmeter'\r\n\r\nconst INITIAL_STATE ={\r\n    isloading : true ,\r\n    data : [],\r\n    length : 0,\r\n    message : null,\r\n    utility : [] ,\r\n    ulength : 0 ,\r\n    approved : false ,\r\n    approvedMsg : ''\r\n}\r\n\r\nexport default (state = INITIAL_STATE, action) => {\r\n    switch (action.type) {\r\n\r\n        case  actionType.PENDING_METER_GET:\r\n        return {\r\n            isLoading : true,\r\n        \r\n        }\r\n\r\n        case actionType.PENDING_METER_GET_SUCCESS :\r\n            return {\r\n                ...state ,\r\n                isloading : false ,\r\n                create : false ,\r\n                data : action.data[0].content,\r\n                length : action.data[0].content.length \r\n            }\r\n\r\n        case actionType.PENDING_METER_GET_FAILURE : \r\n            return {\r\n                ...state ,\r\n               message : \"done\" \r\n            }\r\n\r\n            case actionType.PENDING_UTILITY_PROVIDED_ID_GET_SUCCESS :\r\n            return {\r\n                ...state ,\r\n               utility : action.data[0],\r\n               ulength : action.data[0].length\r\n            }\r\n\r\n            case actionType.PENDING_UTILITY_PROVIDED_ID_GET_FAILURE :\r\n            return {\r\n               utility : []\r\n            }\r\n\r\n            case actionType.PENDING_METER_APPROVED : \r\n            return {\r\n                approved : false \r\n            }\r\n            case actionType.PENDING_METER_APPROVED_SUCCESS : \r\n            return {\r\n                approved : true ,\r\n                approvedMsg : \"Approved .\"\r\n            }\r\n            case actionType.PENDING_METER_APPROVED_FAILURE : \r\n            return {\r\n                approved : false \r\n            }\r\n        \r\n\r\n        \r\n        default:\r\n            return state;  \r\n    }\r\n\r\n}","import { combineReducers } from 'redux';\r\nimport homeReducer from './home';\r\nimport layoutReducer from './layout' ;\r\nimport customerReducer from './customer';\r\nimport regReducer from './registration' ;\r\nimport billingReducer from './billing' ;\r\nimport settingReducer  from './setting' ;\r\nimport meterlistReducer from './meterlist';\r\nimport loginReducer from './login';\r\nimport operatorReducer from './operator' ;\r\nimport newaccountReducer from './newaccount' ;\r\nimport cpasswordReducer from './cpassword';\r\nimport pendinmeterReducer from './pendingmeter'\r\n\r\nexport default combineReducers({\r\n    \r\n    homeReducer,\r\n    layoutReducer,\r\n    customerReducer,\r\n    regReducer,\r\n    billingReducer,\r\n    settingReducer ,\r\n    meterlistReducer,\r\n    loginReducer,\r\n    operatorReducer,\r\n    newaccountReducer,\r\n    cpasswordReducer,\r\n    pendinmeterReducer\r\n    \r\n});","import actionType from \"../../constant/home\" ;\r\n\r\nimport { takeEvery, call, put, select } from 'redux-saga/effects';\r\n\r\nfunction* getMenuData() {\r\n    console.log(\"sagas\")\r\n    try {\r\n        console.log(\"try\")\r\n        const response = yield call(fetch, 'http://192.168.106.189:8080/Hierarchy_Management/HierarchyManagerRetrieveList');\r\n        const data = yield response.json();\r\n       // console.log(data)\r\n        yield put({ type:  actionType.HOME_GET_MENU_DATA_SUCCESS, data });\r\n    } catch (e) {\r\n       // yield put({ type:  actionType.HOME_GET_CURRENT_WETHER_FAILURE, e });\r\n       // return;\r\n       console.log(e)\r\n    }\r\n\r\n    \r\n\r\n}\r\n\r\nexport const homeSaga = [\r\n      takeEvery(actionType.HOME_GET_MENU_DATA, getMenuData)\r\n    \r\n\r\n];","import actionType from \"../../constant/layout\" ;\r\nimport { takeEvery, call, put, select } from 'redux-saga/effects';\r\n// import {callApi} from '../../../utils/query/Query' ; \r\n\r\n// function* getTheApiLInk(){\r\n//     try{\r\n//         const response = yield call(callApi)\r\n//         localStorage.setItem('network',response.data.api)\r\n//     }\r\n//     catch(e){\r\n//         console.log(e)\r\n//     }\r\n// }\r\n\r\n// function* getMenuData() {\r\n//     try {\r\n//         const response = yield call(fetch, 'http://192.168.106.189:8080/');\r\n//         const data = yield response.json();\r\n//         yield put({ type:  actionType.LAYOUT_GET_MENU_DATA_SUCCESS, data });\r\n//     } catch (e) {\r\n//        console.log(e)\r\n//     }\r\n// }\r\n\r\nexport const layoutSaga = [\r\n     // takeEvery(actionType.LAYOUT_GET_MENU_DATA, getMenuData)\r\n    // takeEvery(actionType.LAYOUT_GET_API,getTheApiLInk)\r\n    \r\n\r\n];","const Endpoint = {\r\n    //219 : \r\n    login : ['post','auth/admin/signin'],  // :: for admin : admin , for billing : data_entry_operator\r\n    getCustomer : ['get','customers/'],\r\n    createCustomer : ['post','customers/'],\r\n    updateCustomer : ['put','customers/'],\r\n\r\n  // deo :  // only admin :: \r\n    getOperator : ['get','users/admin/data_entry_operator'],\r\n    postOperator : ['post','users/admin/data_entry_operator'],\r\n    deleteOperator : ['delete','users/admin/data_entry_operator?userId='],\r\n    updateOperator : ['put','users/admin/data_entry_operator/?deoId='],\r\n    // new endpoints for old_api(229) billing server \r\n\r\n    // getCustomer : ['get','customer'],\r\n    // createCustomer : 'customer/create-customer/',\r\n    customerBillMeterList : ['getcustom','bill/info/customer/billingaccount/?customerId='],\r\n    getCustomerBill : ['getcustom','bill/info/customer/billingaccount/payableBillingRecord/?billingAccountId='],\r\n    //getCustomerPayableBill : ['getcustom','bill/info/customer/billingaccount/payableBillingRecord/?billingAccountId='],\r\n\r\n    addnewMeter : ['post','billing-accounts/apply'] , // previous ::  ['post','billing-accounts/'], \r\n    approvenewMeter : ['post','billing-accounts/approve'],\r\n    getPendinMeter : ['get','billing-accounts?assignmentStatus=PENDING_FOR_APPROVAL'],\r\n    \r\n    updateMeter : ['put','billing-accounts/'],\r\n    getUtilityId : ['get','devices?assignmentStatus=NOT_ASSIGNED'],\r\n\r\n\r\n\r\n    cpassword : ['put','auth/admin/creds'],\r\n\r\n    //\r\n\r\n    // setting value \r\n    getSettingValue : ['get','configs/billing'],\r\n    postSettingValue : ['post','configs/billing']\r\n\r\n\r\n\r\n\r\n}\r\n\r\nexport default Endpoint ;\r\n\r\n//  http://192.168.106.229:8081/billing/bill/info/customer/billingaccount/?customerId=customer_id_61f9c379-e0d9-44fc-b9b7-0297fdd53083","const Network = {\r\n\r\n        // network : 'http://192.168.106.229:8081/billing'\r\n        // network : 'http://192.168.106.233:8081/billing'\r\n\r\n       // network : 'http://192.168.106.240:5001'\r\n        network : 'http://192.168.106.240:5001'\r\n      // network : ''\r\n\r\n}\r\n\r\nexport default Network ;","import Network from '../network/Network';\r\nimport axios from 'axios';\r\n\r\n// const header2 = 'Bearer  ' +  localStorage.getItem('header-z-my-point-new-look-my-base')\r\n\r\n  export default   function getMethod(end,header) {\r\n            \r\n          let options = {\r\n            tail : end[1],\r\n            headers : {\r\n              'Authorization' :  header\r\n            } \r\n            \r\n      }\r\n        console.log(Network.network +'/' + end[0] ,options)\r\n        return  axios.post(Network.network +'/' + end[0] ,options)\r\n  }\r\n  \r\n  export  function getMethodById(end,data,header) {\r\n        let options = {\r\n          data : data,\r\n          tail : end[1],\r\n          headers : {\r\n            'Authorization' :  header\r\n          } \r\n          \r\n    }\r\n   // console.log(Network.network +'/' + end[0] ,options)\r\n     return  axios.post(Network.network +'/' + end[0] ,options)\r\n  }\r\n\r\n  export  function postMethod(end,data,header) {\r\n        \r\n     // return  axios.post(Network.network +'/' + end , data)\r\n     let options ={\r\n      data : data,\r\n      tail : end[1] ,\r\n      headers : {\r\n        'Content-Type': 'application/json',\r\n        'Authorization' :  header\r\n      } \r\n    }\r\n    // console.log(Network.network +'/' + end[0] ,options)\r\n    return  axios.post(Network.network +'/' + end[0] ,options )\r\n    }\r\n\r\n    export  function deleteMethod(end,data,header) {\r\n      const url = Network.network +'/' + end[0] \r\n\r\n     let options = {\r\n       data : data,\r\n       tail : end[1],\r\n       headers : {\r\n        'Authorization' :  header\r\n      } \r\n     }\r\n      return axios.delete(url, { data: options });\r\n    \r\n  }\r\n\r\n\r\n  export  function putMethod(end,data,header) {\r\n    let options ={\r\n      data : data[0],\r\n      tail : end[1],\r\n      id : data[1],\r\n      headers : {\r\n        'Content-Type': 'application/json',\r\n        'Authorization' :  header\r\n      } \r\n    }\r\n    return  axios.put(Network.network +'/' + end[0] ,options )\r\n  }\r\n\r\n  export  function singlePutMethod(end,data,header) {\r\n    let options ={\r\n      data : data,\r\n      tail : end[1],\r\n      id : 0,\r\n      headers : {\r\n        'Content-Type': 'application/json',\r\n        'Authorization' :  header\r\n      } \r\n    }\r\n    return  axios.put(Network.network +'/' + end[0] ,options )\r\n  }\r\n\r\n \r\n\r\n","export const getToken =  state => state.loginReducer.loginFlag ? \r\n'Bearer  ' + localStorage.getItem('header-z-my-point-new-look-my-base') : 'Bearer  ' + state.loginReducer.data","import actionType from \"../../constant/customer\" ;\r\nimport Endpoint from '../../../utils/path/Endpoint';\r\nimport getMethod,{getMethodById} from '../../../utils/query/Query' ; \r\n\r\nimport { takeEvery, call, put, select } from 'redux-saga/effects';\r\nimport { getToken } from  '../selectors'\r\n\r\n\r\nfunction* getCustomer() {\r\n     const token =  yield select(getToken) \r\n   // console.log(\"the token is =================\"+(token))\r\n    try {\r\n        const response = yield call(getMethod,Endpoint.getCustomer,token)\r\n        //const data = yield response.data.payload;\r\n        const data = yield response.data.payload;\r\n        // console.log(\"will be==\"+JSON.stringify((data)))\r\n        yield put({ type:  actionType.CUSTOMER_LIST_SUCCESS, data });\r\n    } catch (e) {\r\n       // yield put({ type:  actionType.HOME_GET_CURRENT_WETHER_FAILURE, e });\r\n       // return;\r\n       console.log(e)\r\n    }    \r\n}\r\n\r\n\r\n\r\nexport const customerSaga = [\r\n      takeEvery(actionType.CUSTOMER_LIST, getCustomer)\r\n];","import actionType from \"../../constant/registration\" ;\r\nimport Endpoint from '../../../utils/path/Endpoint';\r\nimport {postMethod,putMethod} from '../../../utils/query/Query' ; \r\n\r\nimport { takeEvery, call, put, select, take } from 'redux-saga/effects';\r\nimport { getToken } from  '../selectors'\r\n\r\nfunction* createNewUser(action) {\r\n    const token =  yield select(getToken) \r\n    try {\r\n        const user  =action.payload ;\r\n        const response = yield call(postMethod,Endpoint.createCustomer,user,token)\r\n        const data = yield response.data;\r\n        const dataa = JSON.stringify(data.payload)\r\n       // const dataStatus = data.httpStatus\r\n        console.log(\"the response is ==== \"+ JSON.stringify(data.status))\r\n        if(JSON.stringify(data.status)=== '400')\r\n        yield put({ type:  actionType.REGISTARTION_CREATE_FAILURE });\r\n        else \r\n        yield put({ type:  actionType.REGISTARTION_CREATE_SUCCESS,dataa  });\r\n    } catch (e) {\r\n        yield put({ type:  actionType.REGISTARTION_CREATE_FAILURE });\r\n       // return;\r\n       console.log(e)\r\n    }    \r\n}\r\n\r\nfunction* updateCustomer(action) {\r\n    const token =  yield select(getToken) \r\n    try {\r\n        const h =action.payload ;\r\n        console.log(h)\r\n        const response = yield call(putMethod,Endpoint.updateCustomer,h,token);\r\n        const data = yield response ;\r\n      //  console.log(\"is==\"+JSON.stringify(data))\r\n        yield put({ type:  actionType.REGISTARTION_UPDATE_SUCCESS });\r\n    } catch (e) {\r\n        console.log(\"error is = \" )\r\n        yield put({ type:  actionType.REGISTARTION_UPDATE_FAILURE, e });\r\n        return;\r\n       console.log(e)\r\n    }\r\n\r\n}\r\n\r\nexport const regSaga = [\r\n      takeEvery(actionType.REGISTARTION_CREATE, createNewUser),\r\n      takeEvery(actionType.REGISTARTION_UPDATE,updateCustomer)\r\n];","import actionType from \"../../constant/billing\" ;\r\nimport Endpoint from '../../../utils/path/Endpoint';\r\nimport {getMethodById} from '../../../utils/query/Query' ; \r\n\r\nimport { takeEvery, call, put, select } from 'redux-saga/effects';\r\nimport { getToken } from  '../selectors'\r\n\r\nfunction* getCustomerBilling(action) {\r\n    const token =  yield select(getToken) \r\n    try {\r\n        let val = action.payload \r\n        console.log(\"the value is ===\"+val)\r\n        const response = yield call(getMethodById,Endpoint.getCustomerBill,val,token)\r\n        const data = yield response.data;\r\n        console.log(\"the return is billing  ==\"+data)\r\n        yield put({ type:  actionType.CUSTOMER_BILLING_SUCCESS, data });\r\n    } catch (e) {\r\n       // yield put({ type:  actionType.HOME_GET_CURRENT_WETHER_FAILURE, e });\r\n       // return;\r\n       console.log(e)\r\n    }    \r\n}\r\n\r\nexport const billingSaga = [\r\n      takeEvery(actionType.CUSTOMER_BILLING, getCustomerBilling)\r\n];","import actionType from \"../../constant/setting\" ;\r\nimport Endpoint from '../../../utils/path/Endpoint';\r\nimport getMethod,{postMethod} from '../../../utils/query/Query' ; \r\n\r\nimport { takeEvery, call, put, select } from 'redux-saga/effects';\r\nimport { getToken } from  '../selectors'\r\n\r\nfunction* getValue() {\r\n    const token =  yield select(getToken) \r\n    try {\r\n      //  let val = action.payload \r\n       // console.log(\"the value is ===\"+val)\r\n        const response = yield call(getMethod,Endpoint.getSettingValue,token)\r\n        const data = yield response.data.payload;\r\n        console.log(\"the return is ==\"+data)\r\n        yield put({ type:  actionType.SETTING_GET_VALUE_SUCCESS, data });\r\n    } catch (e) {\r\n        yield put({ type:  actionType.SETTING_GET_VALUE_FAILURE, e });\r\n        return;\r\n       console.log(e)\r\n    }    \r\n}\r\n\r\nfunction* postValue(action) {\r\n    const token =  yield select(getToken) \r\n    try {\r\n        const user  =action.payload ;\r\n        const response = yield call(postMethod,Endpoint.postSettingValue,user,token)\r\n        const data = yield response.data;\r\n        const dataa = data ; //JSON.stringify(data.payload)\r\n       // const dataStatus = data.httpStatus\r\n        console.log(\"the response is ==== \"+ JSON.stringify(dataa.success))\r\n        // if(JSON.stringify(dataa.success)=== true )\r\n         yield put({ type:  actionType.SETTING_VALUE_UPDATE_SUCCESS });\r\n        //  else \r\n        //  yield put({ type:  actionType.SETTING_VALUE_UPDATE_FAILURE  });\r\n    } catch (e) {\r\n        yield put({ type:  actionType.SETTING_VALUE_UPDATE_FAILURE });\r\n       // return;\r\n       console.log(e)\r\n    }    \r\n}\r\n\r\nexport const settingSaga = [\r\n      takeEvery(actionType.SETTING_GET_VALUE, getValue),\r\n      takeEvery(actionType.SETTING_VALUE_UPDATE,postValue)\r\n];","import actionType from \"../../constant/meterlist\" ;\r\nimport Endpoint from '../../../utils/path/Endpoint';\r\nimport getMethod,{getMethodById,singlePutMethod} from '../../../utils/query/Query' ; \r\n\r\nimport { takeEvery, call, put, select } from 'redux-saga/effects';\r\nimport { getToken } from  '../selectors'\r\n\r\nfunction* getMeterList(action) {\r\n   // console.log(\"come\")\r\n    const token =  yield select(getToken) \r\n    try {\r\n        let val = action.payload \r\n        console.log(\"the value is ===\"+val)\r\n        const response = yield call(getMethodById,Endpoint.customerBillMeterList,val,token)\r\n        const data = yield response.data;\r\n        console.log(\"the return is ==\"+data)\r\n        yield put({ type:  actionType.METER_LIST_SUCCESS, data });\r\n    } catch (e) {\r\n       // yield put({ type:  actionType.HOME_GET_CURRENT_WETHER_FAILURE, e });\r\n       // return;\r\n       console.log(e)\r\n    }    \r\n}\r\n\r\n\r\nfunction* meterLIstUpdate(action) {\r\n    const token =  yield select(getToken) \r\n    try {\r\n        const h =action.payload ;\r\n        console.log(h)\r\n        const response = yield call(singlePutMethod,Endpoint.updateMeter,h,token);\r\n        const data = yield response ;\r\n       // console.log(\"is==\"+JSON.stringify(data))\r\n        yield put({ type:  actionType.METER_LIST_UPDATE_SUCCESS ,data });\r\n    } catch (e) {\r\n       // console.log(\"error is = \" )\r\n        yield put({ type:  actionType.METER_LIST_UPDATE_FAILURE, e });\r\n        return;\r\n      // console.log(e)\r\n    }\r\n\r\n}\r\n\r\nexport const meterListSaga = [\r\n      takeEvery(actionType.METER_LIST, getMeterList),\r\n      takeEvery(actionType.METER_LIST_UPDATE,meterLIstUpdate)\r\n];","import actionType from \"../../constant/login\" ;\r\nimport Endpoint from '../../../utils/path/Endpoint';\r\nimport {postMethod,logpostMethod} from '../../../utils/query/Query' ; \r\n\r\nimport { takeEvery, call, put, select } from 'redux-saga/effects';\r\n\r\nfunction* login(action) {\r\n    try {\r\n      const header = '';\r\n        let val = action.payload \r\n       // console.log(\"the value is ===\"+val.user)\r\n        const response = yield call(postMethod,Endpoint.login,val,header)\r\n         const d =  yield response.data;\r\n         const dd = d.payload ;\r\n         const data = dd[0].accessToken;\r\n     //    console.log(data)\r\n        //  const da = JSON.parse(d)\r\n        //  console.log(\"the da is ====\"+da)\r\n        //  const dat = da['payload']\r\n        //  const data = dat[0]['accessToken']\r\n          yield put({ type:  actionType.lOG_IN_SUCCESS, data });  \r\n        \r\n    } catch (e) {\r\n        yield put({ type:  actionType.lOG_IN_FAILURE, e });\r\n       // return;\r\n       console.log(e)\r\n    }    \r\n}\r\n\r\nexport const loginSaga = [\r\n      takeEvery(actionType.lOG_IN, login)\r\n];","import actionType from \"../../constant/operator\" ;\r\nimport Endpoint from '../../../utils/path/Endpoint';\r\nimport getMethod,{postMethod,deleteMethod,putMethod} from '../../../utils/query/Query' ; \r\n\r\nimport { takeEvery, call, put, select } from 'redux-saga/effects';\r\nimport { getToken } from  '../selectors'\r\n\r\n\r\nfunction* getOperator() {\r\n     const token =  yield select(getToken) \r\n    try {\r\n        const response = yield call(getMethod,Endpoint.getOperator,token)\r\n        const data = yield response.data.payload;\r\n       // console.log(\"will be==\"+data)\r\n        yield put({ type:  actionType.OPERATOR_LIST_SUCCESS, data });\r\n    } catch (e) {\r\n       // yield put({ type:  actionType.HOME_GET_CURRENT_WETHER_FAILURE, e });\r\n       // return;\r\n       console.log(e)\r\n    }    \r\n}\r\n\r\nfunction* postOperator(action) {\r\n    const token =  yield select(getToken) \r\n    try {\r\n       // console.log(\"ok man ! post !!\")\r\n        const user  =action.payload ;\r\n      //  console.log(user)\r\n        const response = yield call(postMethod,Endpoint.postOperator,user,token)\r\n        const data = yield response.data;\r\n        const dataa = data ; //JSON.stringify(data.payload)\r\n       // const dataStatus = data.httpStatus\r\n      //  console.log(\"the response is ==== \"+ dataa)\r\n        if(JSON.stringify(data.status)=== '400')\r\n        yield put({ type:  actionType.OPERATOR_CREATE_FAILURE });\r\n        else \r\n        yield put({ type:  actionType.OPERATOR_CREATE_SUCCESS,dataa  });\r\n    } catch (e) {\r\n        yield put({ type:  actionType.OPERATOR_CREATE_FAILURE });\r\n       // return;\r\n       console.log(e)\r\n    }    \r\n}\r\n\r\nfunction* deleteOperator(action) {\r\n    const token =  yield select(getToken) \r\n    try {\r\n        const h =action.payload ;\r\n        console.log(h)\r\n        const response = yield call(deleteMethod,Endpoint.deleteOperator,h,token);\r\n        const data = yield response ;\r\n        console.log(\"is==\"+JSON.stringify(data))\r\n        yield put({ type:  actionType.OPERATOR_DELETE_SUCCESS ,data });\r\n    } catch (e) {\r\n        console.log(\"error is = \" )\r\n        yield put({ type:  actionType.OPERATOR_DELETE_FAILURE, e });\r\n        return;\r\n       console.log(e)\r\n    }\r\n\r\n}\r\n\r\nfunction* updateOperator(action) {\r\n    const token =  yield select(getToken) \r\n    try {\r\n        const h =action.payload ;\r\n        console.log(h)\r\n        const response = yield call(putMethod,Endpoint.updateOperator,h,token);\r\n        const data = yield response ;\r\n        console.log(\"is==\"+JSON.stringify(data))\r\n        yield put({ type:  actionType.OPERATOR_UPDATE_SUCCESS ,data });\r\n    } catch (e) {\r\n        console.log(\"error is = \" )\r\n        yield put({ type:  actionType.OPERATOR_UPDATE_FAILURE, e });\r\n        return;\r\n       console.log(e)\r\n    }\r\n\r\n}\r\n\r\n\r\n\r\nexport const operatorSaga = [\r\n      takeEvery(actionType.OPERATOR_LIST, getOperator),\r\n      takeEvery(actionType.OPERATOR_CREATE, postOperator),\r\n      takeEvery(actionType.OPERATOR_DELETE,deleteOperator),\r\n      takeEvery(actionType.OPERATOR_UPDATE,updateOperator)\r\n];","import actionType from \"../../constant/newaccount\" ;\r\nimport Endpoint from '../../../utils/path/Endpoint';\r\nimport getMethod,{postMethod,deleteMethod,putMethod} from '../../../utils/query/Query' ; \r\n\r\nimport { takeEvery, call, put, select } from 'redux-saga/effects';\r\nimport { getToken } from  '../selectors'\r\n\r\n\r\nfunction* postNewAccount(action) {\r\n    const token =  yield select(getToken) \r\n    try {\r\n        console.log(\"ok man ! post !!\")\r\n        const user  =action.payload ;\r\n        console.log(user)\r\n        const response = yield call(postMethod,Endpoint.addnewMeter,user,token)\r\n        const data = yield response.data;\r\n        const dataa = data ; \r\n         console.log(\"the response is ==== \"+ dataa)\r\n        // if(JSON.stringify(data.status)=== '400')\r\n        // yield put({ type:  actionType.NEW_METER_POST_FAILURE });\r\n        // else \r\n        yield put({ type:  actionType.NEW_METER_POST_SUCCESS,dataa  });\r\n    } catch (e) {\r\n        yield put({ type:  actionType.NEW_METER_POST_FAILURE });\r\n       // return;\r\n       console.log(e)\r\n    }    \r\n}\r\n\r\n\r\n\r\n\r\nexport const newaccountSaga = [\r\n      takeEvery(actionType.NEW_METER_POST, postNewAccount)\r\n];","import actionType from \"../../constant/cpassword\" ;\r\nimport Endpoint from '../../../utils/path/Endpoint';\r\nimport getMethod,{singlePutMethod} from '../../../utils/query/Query' ; \r\n\r\nimport { takeEvery, call, put, select } from 'redux-saga/effects';\r\nimport { getToken } from  '../selectors'\r\n\r\n\r\nfunction* cpassRequest(action) {\r\n    const token =  yield select(getToken) \r\n    try {\r\n        const h =action.payload ;\r\n        console.log(h)\r\n        const response = yield call(singlePutMethod,Endpoint.cpassword,h,token);\r\n        const data = yield response.status ;\r\n        console.log(\"is==\"+JSON.stringify(response.data.status))\r\n        if(response.data.status===400)\r\n        yield put({ type:  actionType.CPASSWORD_REQUEST_FAILURE});\r\n        else\r\n        yield put({ type:  actionType.CPASSWORD_REQUEST_SUCCESS });\r\n    } catch (e) {\r\n       // console.log(\"error is = \" )\r\n        yield put({ type:  actionType.CPASSWORD_REQUEST_FAILURE });\r\n        return;\r\n      // console.log(e)\r\n    }\r\n}\r\n\r\n\r\n\r\nexport const cpasswordSaga = [\r\n      takeEvery(actionType.CPASSWORD_REQUEST, cpassRequest)\r\n];","import actionType from \"../../constant/pendingmeter\" ;\r\nimport Endpoint from '../../../utils/path/Endpoint';\r\nimport getMethod,{postMethod,deleteMethod,putMethod} from '../../../utils/query/Query' ; \r\n\r\nimport { takeEvery, call, put, select } from 'redux-saga/effects';\r\nimport { getToken } from  '../selectors'\r\n\r\n\r\nfunction* getPendingList() {\r\n     const token =  yield select(getToken) \r\n    try {\r\n        const response = yield call(getMethod,Endpoint.getPendinMeter,token)\r\n        const data = yield response.data.payload;\r\n        console.log(\"will be==\"+JSON.stringify(data))\r\n        yield put({ type:  actionType.PENDING_METER_GET_SUCCESS, data });\r\n    } catch (e) {\r\n       // yield put({ type:  actionType.HOME_GET_CURRENT_WETHER_FAILURE, e });\r\n       // return;\r\n       console.log(e)\r\n    }    \r\n}\r\n\r\nfunction* getUtilityProvidedID() {\r\n  const token =  yield select(getToken) \r\n try {\r\n     const response = yield call(getMethod,Endpoint.getUtilityId,token)\r\n     const data = yield response.data.payload;\r\n     console.log(\"ID ==\"+JSON.stringify(data))\r\n     yield put({ type:  actionType.PENDING_UTILITY_PROVIDED_ID_GET_SUCCESS, data });\r\n } catch (e) {\r\n     yield put({ type:  actionType.PENDING_UTILITY_PROVIDED_ID_GET_FAILURE, e });\r\n    // return;\r\n    console.log(e)\r\n }    \r\n}\r\n\r\nfunction* approveMeter(action) {\r\n  const token =  yield select(getToken) \r\n  try {\r\n      console.log(\"ok man ! post !!\")\r\n      const user  =action.payload ;\r\n      console.log(user)\r\n      const response = yield call(postMethod,Endpoint.approvenewMeter,user,token)\r\n      const data = yield response.data;\r\n      const dataa = data ; \r\n       console.log(\"the response is ==== \"+ dataa)\r\n      // if(JSON.stringify(data.status)=== '400')\r\n      // yield put({ type:  actionType.NEW_METER_POST_FAILURE });\r\n      // else \r\n      yield put({ type:  actionType.PENDING_METER_APPROVED_SUCCESS,dataa  });\r\n  } catch (e) {\r\n      yield put({ type:  actionType.PENDING_METER_APPROVED_FAILURE });\r\n     // return;\r\n     console.log(e)\r\n  }    \r\n}\r\n\r\n\r\n\r\n\r\n\r\nexport const pendingMeterSaga = [\r\n      takeEvery(actionType.PENDING_METER_GET, getPendingList),\r\n      takeEvery(actionType.PENDING_UTILITY_PROVIDED_ID_GET,getUtilityProvidedID),\r\n      takeEvery(actionType.PENDING_METER_APPROVED,approveMeter)\r\n];","import { all } from 'redux-saga/effects';\r\nimport { homeSaga } from './home' ;\r\nimport { layoutSaga } from './layout' ; \r\nimport {customerSaga} from './customer' ; \r\nimport {regSaga} from './registration' ;\r\nimport {billingSaga} from './billing' ;\r\nimport {settingSaga} from './setting' ;\r\nimport {meterListSaga} from './meterlist' ;\r\nimport {loginSaga} from './login' ;\r\nimport {operatorSaga} from './operator' ;\r\nimport {newaccountSaga} from './newaccount';\r\nimport {cpasswordSaga} from './cpassword' ;\r\nimport {pendingMeterSaga} from './pendingmeter' ;\r\n\r\n\r\n\r\nexport default function* rootSaga() {\r\n    yield all([\r\n        ...homeSaga ,\r\n        ...layoutSaga ,\r\n        ...customerSaga,\r\n        ...regSaga,\r\n        ...billingSaga,\r\n        ...settingSaga ,\r\n        ...meterListSaga ,\r\n        ...loginSaga,\r\n        ...operatorSaga,\r\n        ...newaccountSaga,\r\n        ...cpasswordSaga ,\r\n        ...pendingMeterSaga\r\n    ])\r\n}","import { createStore, applyMiddleware } from 'redux'\r\nimport combineReducers from './reducers'\r\nimport createSagaMiddleware from 'redux-saga';\r\nimport rootSaga from './sagas';\r\nimport logger from 'redux-logger';\r\n\r\n\r\nconst sagaMiddleware = createSagaMiddleware();\r\nconst middleware = [sagaMiddleware];\r\n\r\nif (process.env.NODE_ENV === 'development') {\r\n    middleware.push(logger);\r\n}\r\n\r\nexport default function configureStore() {\r\n    const store = createStore(combineReducers, applyMiddleware(...middleware));\r\n    sagaMiddleware.run(rootSaga);\r\n    return store;\r\n}\r\n\r\n// redux-persist:\r\n// https://www.youtube.com/watch?v=Fb-bDigImpw","import React,{Component} from 'react';\nimport './App.css';\nimport MeterTemplate from '../src/components/layout/Layout';\nimport Login from '../src/pages/login/Login'\nimport configureStore from '../src/redux';\nimport { Provider } from 'react-redux';\nconst store = configureStore();\n\n\nclass App extends Component{\n \n  render(){\n    const val = localStorage.getItem('login')\n    return(\n      <Provider store={store}>\n      <div>\n     \n          <MeterTemplate />\n  \n         \n      </div>\n      </Provider>\n    )\n  }\n}\n\nexport default App;","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport 'react-mdl/extra/material.css';\nimport 'react-mdl/extra/material.js';\nimport { BrowserRouter } from 'react-router-dom';\n\nReactDOM.render(\n    <BrowserRouter >\n    <App />\n  </BrowserRouter>, \n\ndocument.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n","const commonStyle = {\r\n\r\n    basicFont : 'monospace',\r\n    menuFont : 'fantasy',\r\n    fontBody : 'cursive',\r\n    formTile : 'inherit',\r\n    roboto : 'Roboto',\r\n    mania :  'Metal Mania',\r\n    helvetica : 'Helvetica',\r\n    normSize : 13,\r\n    focusedSize :16 ,\r\n    letterspacing : 0.5 ,\r\n    letterspacingextend : 1.0 ,\r\n    focusedColor : '#FFEBCD',\r\n    cursor : 'pointer',\r\n    menuBackgroundAdmin  : '#f8f2bd', \r\n    mainBannerAdmin : '#7a6e43',\r\n    mainBannerBilling : '#c21a00',\r\n    menuBackgroundBilling  : '#ffffff',\r\n    color : {\r\n        white : '#f0ffff',\r\n        black : '#000000',\r\n        green : '#1e8222',// #286b48\r\n        lightGreen : '#2db74c',\r\n        gray : '#d1dce2' , //'#77afaf',\r\n        red : '#c21a00',\r\n        blue : '#0088cc',\r\n        orange : '#FF9800',\r\n        blueBlase : '#0096c2',\r\n        shade : '#3e626d', \r\n        lightgray : '#f8f2bd',\r\n        megento : '#b6a5d0',\r\n        lightYellow : '#eee061',\r\n        header : '#648e64'\r\n\r\n    }\r\n    \r\n}\r\n\r\nexport default commonStyle "],"sourceRoot":""}